<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chi&#39;s Impe[r]fect Blog</title>
    <link>/</link>
    <description>Recent content on Chi&#39;s Impe[r]fect Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Nov 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Utilizing K-means to extract colours from your favourite images</title>
      <link>/2018/11/12/utilizing-k-means-to-extract-colours-from-your-favourite-images/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/12/utilizing-k-means-to-extract-colours-from-your-favourite-images/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I have been playing with package called &lt;a href=&#34;https://cran.r-project.org/web/packages/imager/index.html&#34;&gt;imager&lt;/a&gt;, documentation on this package was extremely helpful! I have read through “&lt;a href=&#34;https://cran.r-project.org/web/packages/imager/vignettes/gettingstarted.html&#34;&gt;getting started&lt;/a&gt;” as well as &lt;a href=&#34;http://dahtah.github.io/imager/&#34;&gt;few other tutorial &amp;amp; examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I love colours… Tools like &lt;a href=&#34;https://www.colourlovers.com/&#34;&gt;colourlovers&lt;/a&gt;, &lt;a href=&#34;https://color.adobe.com/&#34;&gt;Adobe Color CC&lt;/a&gt;, &lt;a href=&#34;https://www.canva.com/color-palette/&#34;&gt;Canva Color Palette Generators&lt;/a&gt; are great extracting colours from photo (or in general just getting &lt;a href=&#34;https://www.canva.com/learn/100-color-combinations/&#34;&gt;inspirations&lt;/a&gt; for colour palette), but I wanted to figure out the way to extract colours from image using R.&lt;/p&gt;
&lt;div id=&#34;preps&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preps&lt;/h2&gt;
&lt;p&gt;Loading up packages &amp;amp; loading up image to R, and extracting RGB info out of image. First I need to load up image. I’m using below abstract image with bunch of different colours that I’ve created with Photoshop just for fun.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse) ##
library(imager) ## such a fun package.  I want to learn more.
library(treemap) ## 
library(ggvoronoi) ## because I&amp;#39;m currently addicted to voronoi diagram.

## Load up the image using load.image function! 
im &amp;lt;- load.image(&amp;quot;https://farm4.staticflickr.com/3316/3333507738_9d36d39f6d_b.jpg&amp;quot;) ## colourful abstract image. 
#im &amp;lt;- load.image(&amp;quot;https://farm9.staticflickr.com/8125/8659010017_54a885f12a_z.jpg&amp;quot;) ## mainly blue
#im &amp;lt;- load.image(&amp;quot;https://farm2.staticflickr.com/1939/30915465767_2d9a733510_z.jpg&amp;quot;) ## animoji! 

## View the image I just loaded. 
plot(im, main=&amp;quot;Original Image I Want To Get Some Colours Out Of!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-12-utilizing-k-means-to-extract-colours-from-your-favourite-images_files/figure-html/preperation-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_size &amp;lt;-dim(im)[1]*dim(im)[2]  ## numbers of row I&amp;#39;d get if i use it as it is...
max_row_num &amp;lt;- 150000 ## number of maximum row I want (just to limit my size!)

## If df is too big, it&amp;#39;s too slow to process on my computer, so shrink the image
shrink_ratio  &amp;lt;- if(df_size &amp;gt; max_row_num) {max_row_num / df_size } else {1}
im &amp;lt;- im %&amp;gt;% imresize(shrink_ratio)
# plot(im) if you want to check how the image has been resized.

## get RGB value at each pixel
im_rgb &amp;lt;- im %&amp;gt;% 
  as.data.frame(wide=&amp;quot;c&amp;quot;) %&amp;gt;%
  rename(red=c.1,green=c.2,blue=c.3) %&amp;gt;%
  mutate(hexvalue = rgb(red,green,blue)) ## you can create hexvalue using red, green blue value!

## turn image into Grayscale and get luminance &amp;quot;value&amp;quot; too. 
im_gray &amp;lt;- im %&amp;gt;%
  grayscale() %&amp;gt;%
  as.data.frame() 

## combine RGB info and Luminance Value Dataset together.
im_df &amp;lt;- im_rgb %&amp;gt;% 
  inner_join(im_gray) 

im_df %&amp;gt;% head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   x y         red     green      blue hexvalue     value
## 1 1 1 0.001528153 0.6012714 0.7346048  #0099BB 0.4360151
## 2 2 1 0.003336439 0.5943815 0.7305651  #0198BA 0.4320482
## 3 3 1 0.005112951 0.6265604 0.7657791  #01A0C3 0.4554402
## 4 4 1 0.005520480 0.6726386 0.8097380  #01ACCE 0.4875841
## 5 5 1 0.011926270 0.7021898 0.8367487  #03B3D5 0.5099122
## 6 6 1 0.011128983 0.6695389 0.8149510  #03ABD0 0.4880113&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;applying-k-means-algorithm-on-rgb-value-from-image&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Applying K-Means Algorithm on RGB value from Image&lt;/h2&gt;
&lt;p&gt;Using kmeans function is pretty simple, I’m selecting 12 as k in below example, simply because I wanted to get 12 distinct colours from the picture.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Pick k value to run kMean althorithm.
## But to extract colours, I&amp;#39;d pick k as number I want back! 
my_k &amp;lt;- 12

## Running kmeans algorithm on red, green and blue value to gather similar colour together
kmean_rgb &amp;lt;- kmeans(im_df %&amp;gt;% select(red,green,blue), centers=my_k)

## append cluster id to im_df datasets.
im_df$cluster_num &amp;lt;- kmean_rgb$cluster

## center values can be used as cluster colour! 
kmean_center &amp;lt;- kmean_rgb$centers %&amp;gt;% as.data.frame() %&amp;gt;% 
  mutate(group_hex = rgb(red,green,blue), cluster_num = row_number()) %&amp;gt;%
  inner_join(im_df %&amp;gt;% count(cluster_num))

## I can also save the colour palette for future use as well.
my_colour &amp;lt;- kmean_center$group_hex
my_colour&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;#12AAD8&amp;quot; &amp;quot;#F178C3&amp;quot; &amp;quot;#E9E0CE&amp;quot; &amp;quot;#DF3658&amp;quot; &amp;quot;#933DB6&amp;quot; &amp;quot;#659634&amp;quot; &amp;quot;#E62AB1&amp;quot;
##  [8] &amp;quot;#73D2B0&amp;quot; &amp;quot;#F5E86F&amp;quot; &amp;quot;#EAC547&amp;quot; &amp;quot;#4363C2&amp;quot; &amp;quot;#93D55F&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;viewing-colour-palettes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Viewing Colour Palettes&lt;/h3&gt;
&lt;p&gt;I wanted to view the colour palette more visually, instead of HexValues….&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;num_row = floor(my_k/4)
kmean_center %&amp;gt;% 
  ggplot(aes(x=(cluster_num-1)%%num_row,y=floor((cluster_num-1)/num_row))) + 
  geom_tile(aes(fill=group_hex)) +
  geom_label(aes(label=paste(cluster_num,&amp;quot;:&amp;quot;,group_hex,&amp;quot;\n&amp;quot;,n,&amp;quot;distinct hexvalues&amp;quot;)), 
             family=&amp;quot;Roboto Condensed&amp;quot;, lineheight=0.8) +
  scale_fill_manual(values=sort(kmean_center$group_hex), guide=&amp;quot;none&amp;quot;) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  labs(subtitle=paste0(&amp;quot;k-Mean clustering center colour with &amp;quot;, my_k, &amp;quot; clusters&amp;quot; )) +
  scale_y_reverse()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-12-utilizing-k-means-to-extract-colours-from-your-favourite-images_files/figure-html/colour_palette-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;which-colours-get-clustered-together&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Which colours get clustered together?&lt;/h2&gt;
&lt;p&gt;I wanted to see which colours were bundled together in same cluster. I took a sample because plotting more colours simply just took way too long on my machine…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;im_df %&amp;gt;% 
  sample_n(size=10000) %&amp;gt;% ## I&amp;#39;m just going to take sample to make the drawing bit faster...
  count(cluster_num,hexvalue) %&amp;gt;%
  treemap(index=c(&amp;quot;cluster_num&amp;quot;,&amp;quot;hexvalue&amp;quot;),
          type=&amp;quot;color&amp;quot;,
          vSize=&amp;quot;n&amp;quot;, 
          vColor=&amp;quot;hexvalue&amp;quot;,
          algorithm = &amp;quot;squarified&amp;quot;,
          fontfamily.labels=&amp;quot;Roboto Condensed&amp;quot;, 
          fontfamily.title=&amp;quot;Roboto Condensed&amp;quot;,
          border.col=c(&amp;quot;#ffffff&amp;quot;,&amp;quot;#ffffff50&amp;quot;),
          fontsize.labels=c(24,0),
          aspRatio=16/9,
          title=&amp;quot;Clustering with RGB&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-12-utilizing-k-means-to-extract-colours-from-your-favourite-images_files/figure-html/treemap_clustered_colour-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bonus-voronoi-abstract-art&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bonus: Voronoi Abstract Art&lt;/h2&gt;
&lt;p&gt;Below is more fun to do on other images, but I wanted to just use &lt;a href=&#34;https://cran.r-project.org/web/packages/ggvoronoi/index.html&#34;&gt;ggvoronoi&lt;/a&gt; package because I’m &lt;a href=&#34;https://chichacha.netlify.com/2018/11/10/voronoi-diagram-with-ggvoronoi-package-with-train-station-data/&#34;&gt;currently in love&lt;/a&gt;…&lt;/p&gt;
&lt;p&gt;Looks like stained glass! :)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Create Mini sets, choose to select grayscale value that are bigger more often.
im_df_mini &amp;lt;-im_df %&amp;gt;%
  sample_n(size=1000, weight=(1-value)) 

im_df_mini %&amp;gt;%
  ggplot(aes(x=x,y=y)) +
  geom_voronoi(aes(fill=hexvalue), color=&amp;quot;#000000&amp;quot;, size=0.1) +
  scale_fill_manual(values=sort(unique(im_df_mini$hexvalue)), guide=&amp;quot;none&amp;quot;) +
  theme_void() +
  scale_y_reverse() +
  coord_fixed()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-12-utilizing-k-means-to-extract-colours-from-your-favourite-images_files/figure-html/voronoi_art-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;using-plotly-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Using Plotly package&lt;/h2&gt;
&lt;p&gt;I’ve always been curious to use plotly, but I haven’t had chance to yet. Since RGB values are 3 different values, I wanted to use xyz axis to plot (and I didn’t know how to do that in ggplot2), so here’s yet another way to view how the colour got clustered more visually.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plotly)
im_df %&amp;gt;% sample_n(size=2000) %&amp;gt;% 
  plot_ly(x = ~red, y=~blue, z=~green, color=~cluster_num, colors=my_colour, size=~value) %&amp;gt;%
  add_markers()   &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;48a11aeef9e9&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;48a11aeef9e9&#34;,&#34;attrs&#34;:{&#34;48a11aeef9e9&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;z&#34;:{},&#34;color&#34;:{},&#34;size&#34;:{},&#34;colors&#34;:[&#34;#12AAD8&#34;,&#34;#F178C3&#34;,&#34;#E9E0CE&#34;,&#34;#DF3658&#34;,&#34;#933DB6&#34;,&#34;#659634&#34;,&#34;#E62AB1&#34;,&#34;#73D2B0&#34;,&#34;#F5E86F&#34;,&#34;#EAC547&#34;,&#34;#4363C2&#34;,&#34;#93D55F&#34;],&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter3d&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;inherit&#34;:true}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;scene&#34;:{&#34;xaxis&#34;:{&#34;title&#34;:&#34;red&#34;},&#34;yaxis&#34;:{&#34;title&#34;:&#34;blue&#34;},&#34;zaxis&#34;:{&#34;title&#34;:&#34;green&#34;}},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;yanchor&#34;:&#34;top&#34;,&#34;y&#34;:0.5}},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[0.849692400764017,0.893458377613741,0.284173748539943,0.919607813218061,0.951948113534965,0.941919424019608,0.327328431372549,0.973575367647059,0.974362451889936,0.980229994829963,0.949518465528301,0.950206801470588,0.688947610294118,0.0388784371170343,0.990425857843137,0.889828431372549,0.872385062423407,0.831640625,0.102046203613281,0.891380399816177,0.68817018995098,0.975985254025927,0.17693266027114,0.19010196760589,0.890808823529412,0.985409007352941,0.512837009803922,0.69386251112994,0.646186813653684,0.943433065975414,0.884338139552696,0.894087249157476,0.0396218692555147,0.85336243872549,0.929296875,0.519720294428807,0.0734975777420343,0.072003054151348,0.9956168978822,0.161741727941176,0.654910682229435,0.609863400926777,0.958703867594401,0.983471978879442,0.873360906862745,0.993910845588235,0.00993891697303922,0.184466911764706,0.197824994255515,0.859436274509804,0.0197110643573836,0.318588316674326,0.939636948529412,0.342165524351831,0.941622625612745,0.953332743925207,0.605775002872243,0.862109375,0.980484068627451,0.477442438462201,0.984949448529412,0.960892561370251,0.391904105392157,0.977609118293313,0.964338130576938,0.484911151960784,0.862924912396599,0.122406334970512,0.944205729166667,0.615223798564836,0.987722120098039,0.84730697332644,0.938556027879902,0.287994698917165,0.888005514705882,0.97562806372549,0.788131414675245,0.852382046568627,0.0452794692095588,0.335108528885187,0.915751857383578,0.795733762254902,0.993493412990196,0.30831179151348,0.118069338331036,0.707115218218635,0.36071149040671,0.476147371179917,0.987101715686274,0.990088608685662,0.843397671568627,0.0361060049019608,0.91817383111692,0.894171262254902,0.902765012254902,0.859535845588235,0.25026512893976,0.0464231004901961,0.96195618872549,0.918246325324563,0.954581466375613,0.709368657130821,0.972342218137255,0.881689288569432,0.420635148590686,0.972761296290977,0.013730546539905,0.842125986136642,0.734413296568627,0.966283700980392,0.916268382352941,0.0315738902372472,0.986504289215686,0.962124693627451,0.969469975490196,0.504108533672258,0.957326133578431,0.990849827785118,0.949019607843137,0.902382046568627,0.617248654833027,0.97682700063668,0.82577112235275,0.80907200831993,0.592335944082223,0.942831031948912,0.925274254294003,0.955131740196078,0.238335807650697,0.963025859757966,0.944726727055568,0.0110094257429534,0.956226962220435,0.27832701439951,0.846591605392157,0.623541828230316,0.617696126302083,0.0316379621917126,0.302640368891697,0.393479949352788,0.959353353462967,0.964200367647059,0.215390283921186,0.741229981067134,0.867356004901961,0.480165863037109,0.705767463235294,0.902995479808134,0.807194788315717,0.671592323452818,0.989724671606924,0.599243867163565,0.908072916666667,0.161100021063113,0.7481128468233,0.00459656060910692,0.285667703665939,0.489981617647059,0.84429381127451,0.356188725490196,0.975582825903799,0.972975248448989,0.564186904009651,0.209163486256319,0.954978553921568,0.954209002326517,0.716217474843941,0.785123084573185,0.911519607843137,0.362201286764706,0.937706322763481,0.898307291666667,0.342086612477022,0.955322265625,0.128472780713848,0.970182800292969,0.972648590686275,0.948690257352941,0.909091246361826,0.645626531862745,0.0392156862745098,0.950206801470588,0.043173277611826,0.603690293255974,0.804549407958984,0.662614889705882,0.963794424019608,0.59972230499866,0.906318933823529,0.967929122027229,0.931073835784314,0.978308823529412,0.945466404335172,0.974249955719592,0.873360906862745,0.471591605392157,0.993145766912722,0.975099571078431,0.00572870291915594,0.895205269607843,0.975509568756702,0.969446159811581,0.925643382352941,0.973381670783548,0.492210477941176,0.945871629901961,0.703147514193666,0.0521063112745098,0.954342830882353,0.944977599499273,0.952244178921569,0.53958906285903,0.904641544117647,0.770373774509804,0.887153879801432,0.806310571408739,0.945113357843137,0.865119485294118,0.783601409313726,0.863834366143919,0.861189658969056,0.842173243503945,0.616957720588235,0.180997048172296,0.901026348039216,0.631219362745098,0.981955988266889,0.88884397020527,0.682167322495404,0.980675551470588,0.990457213158701,0.849096200980392,0.965982594209559,0.477619485294118,0.994592524509804,0.418162357105928,0.00163785149069393,0.939878321628944,0.932774203431373,0.986470914354511,0.506448977601294,0.900942095588235,0.928088019875919,0.862847077612783,0.846798406862745,0.595581533394608,0.0311617682961857,0.468966136259191,0.332513786764706,0.904126455269608,0.397246416877298,0.959556504791858,0.868647481880936,0.829314991072112,0.871515012254902,0.986626838235294,0.981636451272403,0.495895565257353,0.77507755055147,0.950750612745098,0.910684742647059,0.854645702885646,0.969865866268382,0.991264851888021,0.925296992881625,0.865119485294118,0.267440257352941,0.645090379901961,0.509658394607843,0.414963441736558,0.986274509803922,0.969677135991115,0.671734215231503,0.960360837450214,0.542928538602941,0.997588767257391,0.910615479712393,0.857506247127757,0.981943915872013,0.961048500210631,0.997526041666667,0.00770526960784314,0.555351212445427,0.950206801470588,0.00430058498008578,0.917761948529412,0.286791378844018,0.961940271714155,0.546717864391851,0.985537555170994,0.0651960784313726,0.995380042580997,0.61270201439951,0.994944852941177,0.966479192995558,0.493803615196078,0.859106924019608,0.643713019875919,0.983240464154412,0.987878657322304,0.989931832107843,0.855581769756242,0.93804381127451,0.93076888439702,0.994097810633042,0.979265250411688,0.607192095588235,0.974716410917394,0.985665923473882,0.372005208333333,0.645090379901961,0.451213567397174,0.688505299886068,0.253839021570542,0.372005208333333,0.907838021072687,0.783969056372549,0.979529541614009,0.498987654143689,0.979866132549211,0.883724107929305,0.372005208333333,0.6644344255036,0.664583333333333,0.932513786764706,0.0156862745098039,0.748842620849609,0.795109752580231,0.549563419117647,0.989682904411765,0.25125181908701,0.893586701037837,0.98738068225337,0.245119625914331,0.943060661764706,0.852011287913603,0.83734681372549,0.968725944967831,0.715512204637714,0.0110989439721201,0.980109226002413,0.554189913880591,0.486488147810394,0.844668997970282,0.93606123082778,0.932789522058824,0.929434742647059,0.742787993187998,0.702014773499732,0.00730291628370098,0.97356154497932,0.213831718295228,0.473552030675552,0.198449258243336,0.00114699718998928,0.85267453661152,0.893516390931373,0.985580384497549,0.58469731947955,0.364976471545649,0.991888786764706,0.81593183629653,0.0545310076545267,0.442654718137255,0.00696997549019608,0.732068275002872,0.794605449601716,0.663956780527152,0.86116668102788,0.896456759583716,0.922707950367647,0.980484068627451,0.894091123693129,0.233017386642157,0.218319358077704,0.898307291666667,0.789948601816215,0.143688052308326,0.45722313675226,0.111351102941176,0.952992398131127,0.938265931372549,0.623208648083257,0.968149731205959,0.449090770646638,0.857255284926471,0.938011169433594,0.00620775409773284,0.901845894607843,0.694738051470588,0.512353395948223,0.340075922947304,0.966796875,0.963184072457108,0.86674088122798,0.0869140625,0.491644526462929,0.975608317057292,0.795733762254902,0.850996892592486,0.901680740655637,0.934029493144914,0.908773743872549,0.349768664790135,0.990425857843137,0.605545343137255,0.979939778645833,0.949916181377336,0.902565870098039,0.616798101686964,0.131058517156863,0.989585726868873,0.0246637531355316,0.98946808459712,0.890280330882353,0.963288430606618,0.888078278186275,0.975564874387255,0.408042279411765,0.00854013480392157,0.980981924019608,0.120151654411765,0.922447204589844,0.97854497572955,0.948257311652689,0.963823475557215,0.937757305070466,0.618060661764706,0.993910845588235,0.905629595588235,0.956495098039216,0.990281527650122,0.961534926470588,0.698264103309781,0.090655637254902,0.991115196078431,0.979916980219822,0.991115196078431,0.00282628676470588,0.834709406834023,0.00819546568627451,0.960379985734528,0.933714429069968,0.93812806372549,0.338074448529412,0.936159620098039,0.919405350030637,0.380540855258119,0.890388384052351,0.0349700179754519,0.477619485294118,0.505644914215686,0.723804877786075,0.954460353477328,0.992541025199142,0.904494566075942,0.0965431512570849,0.0838616015864354,0.911984312768076,0.984566348206763,0.80081148334578,0.952941176470588,0.903439031862745,0.942156862745098,0.945113357843137,0.936455730363434,0.562892106000115,0.599181650199142,0.803706644095627,0.957273834826899,0.943382352941176,0.941005213120404,0.940824142156863,0.990693933823529,0.848559525433709,0.95844056372549,0.660113645067402,0.991367953431373,0.993265787760417,0.958825773351333,0.878224780512791,0.907634645349839,0.467549941119026,0.039600357354856,0.873008354037416,0.981050857843137,0.975924323586857,0.0538679534313726,0.853200949874579,0.486121323529412,0.869626916623583,0.318037683823529,0.643933823529412,0.639247041590074,0.89945431877585,0.582176582486022,0.297822690477558,0.581706342510149,0.969399201636221,0.926053155637255,0.907123386158663,0.201918658088235,0.64398073682598,0.210700091193704,0.87956896015242,0.509658394607843,0.132856167063994,0.965134803921569,0.167172181372549,0.94503293504902,0.941449169084138,0.545058815152037,0.950674019607843,0.938901654411765,0.512837009803922,0.613684052112056,0.121192438462201,0.903316482843137,0.888150518080768,0.372005208333333,0.95844056372549,0.93542755725337,0.0141377766927083,0.732389053643918,0.342279411764706,0.88479840147729,0.942417279411765,0.916897583007812,0.892292980119294,0.6484375,0.98412052229339,0.889353553921569,0.990372242647059,0.993787593467563,0.99089817720301,0.831832571590648,0.449550194833793,0.627221200980392,0.828874176623774,0.933175240310968,0.898911794026693,0.236816825118719,0.776229319852941,0.97569699754902,0.861595557717716,0.991291360294118,0.993704044117647,0.335150400797526,0.120611213235294,0.980338601505055,0.612630208333333,0.990058210784313,0.0404187071557138,0.0371215969908471,0.656862745098039,0.550657908121745,0.908011642156863,0.944679529526654,0.552357991536458,0.651593601002413,0.0946702246572457,0.151937088311887,0.068344056372549,0.662372648949717,0.992991727941177,0.234163381539139,0.929673677332261,0.918821925742953,0.00628829656862745,0.942381855085784,0.0773456648284314,0.805352035223269,0.846017396216299,0.83454963833678,0.361779186772365,0.311832442938113,0.0313771565755208,0.892807395785463,0.594257369695925,0.721753557990579,0.990726725260417,0.00929074754901961,0.897702205882353,0.986455461090686,0.974257046568627,0.991015505323223,0.684888637767119,0.984459716198491,0.662859987745098,0.825270589192708,0.911305625765932,0.932484600590725,0.898307291666667,0.260569852941177,0.636014093137255,0.994087009803921,0.857866115196078,0.943246789072074,0.364261642156863,0.630124080882353,0.34909569235409,0.962378408394608,0.607192095588236,0.803461770450368,0.908748372395834,0.987478368422564,0.843706018784467,0.636014093137255,0.958526506610945,0.78976136749866,0.984512867647059,0.935329093185126,0.993022365196078,0.651643640854779,0.785983455882353,0.902669270833333,0.62716339709712,0.292356004901961,0.945961686676624,0.666516786463121,0.950674019607843,0.983854166666667,0.901960784313725,0.965632195566215,0.891350301106771,0.00672616397633272,0.450166859346278,0.916590073529412,0.96876703898112,0.905629595588235,0.604113051470588,0.710577512254902,0.862814031862745,0.772760533351524,0.980549651501226,0.988817401960784,0.990425857843137,0.510715379901961,0.512837009803922,0.982794309129902,0.795733762254902,0.989772183287377,0.937478862089269,0.939431044634651,0.977505941951976,0.785790731392655,0.978622855392157,0.409749274160348,0.534649553485945,0.126838280172909,0.780393009559781,0.940926376043582,0.689008884803922,0.00919811772365196,0.574908088235294,0.867201382506127,0.0106674792719822,0.95689146752451,0.974387254901961,0.0392156862745098,0.874011948529412,0.930784337660846,0.791628370098039,0.949961105047488,0.600451226327933,0.529072122012867,0.97601868872549,0.327033697390089,0.91266892377068,0.00348456887637868,0.0248927696078431,0.642525497137332,0.956280637254902,0.296029004863664,0.990579044117647,0.978289794921875,0.52617166556564,0.999364516314338,0.487314411238128,0.613799794514974,0.66644121057847,0.992133884803922,0.957130357330921,0.940732230392157,0.605545343137255,0.574908088235294,0.00751223096660539,0.252665441176471,0.381260007970473,0.860975796568627,0.0789133109298407,0.701746323529412,0.862277879901961,0.961213235294118,0.9578685984892,0.851731004901961,0.465203737745098,0.127438100179036,0.0214156805300245,0.979479711196002,0.973694760191674,0.348491683660769,0.990425857843137,0.880294650208716,0.488319546568627,0.0188982496074602,0.87884401807598,0.13650011548809,0.973598345588235,0.967777267156863,0.0103860294117647,0.871146991206151,0.859106924019608,0.136815329159007,0.950521312040441,0.938940713919845,0.488491881127451,0.19155943627451,0.975060317095588,0.0177636240042892,0.946914328780829,0.980591299019608,0.953178615196078,0.980675551470588,0.905981205958946,0.0718281166226256,0.885850135952819,0.585339340509153,0.962936580882353,0.0363925111060049,0.997939644607843,0.0371936274509804,0.887331495098039,0.489901553883272,0.897814821729473,0.940948246974571,0.915512847900391,0.0528698491115196,0.484911151960784,0.476439950980392,0.897488074209176,0.945113357843137,0.715029593075023,0.959744322533701,0.372005208333333,0.991450216255936,0.911140456854128,0.987318106258617,0.765545923569623,0.749195772058823,0.0362515318627451,0.570474288042854,0.615122552011527,0.694002443201402,0.0435968137254902,0.986136642156863,0.76336550245098,0.988733149509804,0.891053921568627,0.980484068627451,0.942547188553156,0.981663602941176,0.500467218137255,0.0431372549019608,0.905240137436811,0.926026348039216,0.981481454886642,0.805035804299747,0.980271522671569,0.376750811408548,0.489334749707989,0.694738051470588,0.784672022800819,0.535520022523169,0.917797313017004,0.935254265280331,0.322924325980392,0.200382038191253,0.987316176470588,0.977144607843137,0.960493259803922,0.949524524165135,0.465203737745098,0.16695006127451,0.646951593137255,0.943224768545113,0.623238357843137,0.992310049019608,0.990540238922717,0.563850417791628,0.0174096200980392,0.156670798507391,0.933852610868566,0.84778735590916,0.199920025993796,0.649927909701478,0.166559914981618,0.780892854578355,0.976425380332797,0.884486030129825,0.998058543485754,0.205190366857192,0.905275367288028,0.979068711224724,0.0363546034869026,0.548280095119102,0.915670955882353,0.54010560278799,0.902772671568627,0.96799041149663,0.0538679534313726,0.308930625167547,0.876222692751417,0.964920343137255,0.222487745098039,0.871996112898284,0.817708931717218,0.786803002450981,0.93463399550494,0.863551943909888,0.900942095588235,0.95594362745098,0.820105698529412,0.988620144713159,0.526260465734145,0.477619485294118,0.84395476696538,0.895895310944202,0.0694963043811274,0.576570159313726,0.0409160539215686,0.742716501273361,0.862583324955959,0.945136934168199,0.468344400443283,0.96537602742513,0.802726715686275,0.67875306372549,0.22123021144493,0.42539779064702,0.949050903320312,0.788517117967793,0.0738740808823529,0.0641007965686275,0.550403460334329,0.909239765242034,0.970588235294118,0.990425857843137,0.862277879901961,0.992567593443627,0.530748703900506,0.911075367647059,0.966630479401233,0.177719056372549,0.931531240425858,0.525139273849188,0.00769497740502451,0.892968002020144,0.929492785883885,0.88877612843233,0.438457414215686,0.916008997898476,0.940969669117647,0.933524816176471,0.995335477941176,0.847957296932445,0.569364674886068,0.87640884997798,0.325129774505017,0.992605890012255,0.914761502135034,0.988411458333333,0.640307497510723,0.896921988094554,0.944384645948223,0.4984375,0.860880294500613,0.299940341126685,0.429247897279029,0.966483755672679,0.898558433383119,0.872741714178347,0.765673289579504,0.574908088235294,0.956896643545113,0.0844626034007353,0.630124080882353,0.860493259803922,0.380303281896255,0.216193719003715,0.828575642903646,0.0380744485294118,0.862814031862745,0.505062806372549,0.26063112745098,0.939953673119639,0.601537173402076,0.981279201133578,0.892320311303232,0.544464874267578,0.913089767156863,0.986044730392157,0.987342011694815,0.488547964657054,0.906479779411765,0.496760110294118,0.884941789215686,0.541318332447725,0.287736331715303,0.984980085784314,0.927742034313725,0.937796319699755,0.434180151247511,0.322025343951057,0.461555690391391,0.343190870098039,0.937921262254902,0.502791490741805,0.464825080422794,0.407878711176854,0.604113051470588,0.988259229473039,0.857233743106618,0.952599379595588,0.880958946078431,0.915861885220397,0.950610231885723,0.865119485294118,0.978534907920688,0.969324448529412,0.860753676470588,0.968855435240502,0.940923713235294,0.993702129289216,0.947924325980392,0.0385876225490196,0.852967221129174,0.300487637987324,0.510065774356617,0.920163248099533,0.875240011776195,0.857866115196078,0.0712685678519455,0.980484068627451,0.915670955882353,0.645626531862745,0.95979321049709,0.943217632817287,0.716697303921569,0.908750287224265,0.90997864966299,0.992427930644914,0.604660782159544,0.576176901424632,0.634912393607345,0.0324351591222427,0.881470683976716,0.285103726854511,0.73862470739028,0.971844362745098,0.498188003839231,0.915272177901923,0.00821102366727941,0.141306678921569,0.911447023877911,0.341122855392157,0.977348881141812,0.0846157896752451,0.932621017156863,0.228737715178845,0.918318206188726,0.541097094965916,0.920949659160539,0.366176470588235,0.0500650892070695,0.596451927633846,0.935403382544424,0.957577694163603,0.977444218654259,0.859198835784314,0.870804027482575,0.910332414215686,0.283343984566483,0.00722741519703585,0.467202624152688,0.669811622769225,0.912366321040135,0.989453125,0.757026672363281,0.926914828431373,0.605122240851907,0.782636335784314,0.605639364205155,0.329906328986673,0.694738051470588,0.79853635301777,0.428023349537569,0.327328431372549,0.988693416819853,0.982689950980392,0.807352941176471,0.973718710506664,0.388722588034237,0.518563304227941,0.654615499459061,0.340292612711589,0.0102787990196078,0.822242647058823,0.314064130596086,0.98101256127451,0.785983455882353,0.991827033547794,0.175467218137255,0.592508607752183,0.0960921493231082,0.328247549019608,0.538069407145182,0.329166666666667,0.975908466413909,0.854626225490196,0.590484469544654,0.0380744485294118,0.892291932947495,0.215198516845703,0.856770833333333,0.928719838460287,0.617457969515931,0.869842319862515,0.991115196078431,0.0521063112745098,0.944911702473958,0.938129993513519,0.508106545840993,0.0347559012618719,0.891482843137255,0.955507046568627,0.991321174771178,0.968739004696117,0.0261557186351103,0.986580882352941,0.802973833271101,0.28518606447706,0.88515625,0.919580796185662,0.991556025486367,0.959660429113052,0.496741171444164,0.147549632951325,0.869195466883042,0.8097225114411,0.383432425704657,0.0181329016591988,0.0440951478247549,0.911037071078431,0.0953967524509804,0.122208449419807,0.0833975100049786,0.477619485294118,0.119863472732843,0.0538679534313726,0.298971363142425,0.453481427360983,0.852121629901961,0.649813663258272,0.0162930357689951,0.913466030943628,0.860646446078431,0.804972285850375,0.941774136412378,0.776532850078508,0.945963541666667,0.763228113511029,0.957200772154565,0.976232775519876,0.547831815831802,0.916346172257966,0.0801623774509804,0.0180774464326746,0.821508041082644,0.0287233539656097,0.0426776960784314,0.98368590111826,0.988320593740426,0.803840667126225,0.993137254901961,0.85119135239545,0.953303079044118,0.886004967783012,0.0445301579494102,0.449061898624196,0.848401716643689,0.986107904770795,0.54876963297526,0.0738740808823529,0.35643793741862,0.920082720588235,0.949908088235294,0.0191304225547641,0.455131740196078,0.972825562720205,0.927374387254902,0.716258927887561,0.00924120136335784,0.981702213661343,0.967783969056373,0.0155326693665748,0.911289349724264,0.978241490382774,0.881227022058823,0.0426776960784314,0.865119485294118,0.505591299019608,0.684176635742187,0.792936512068206,0.938901654411765,0.94750306372549,0.237486446605009,0.958846507352941,0.987101715686274,0.916859346277574,0.598040651807598,0.528824226528991,0.246096562404259,0.862435853247549,0.878895568847656,0.969584865196078,0.962339154411765,0.972831726074219,0.0443780637254902,0.988411458333333,0.884774750354243,0.445733762254902,0.367264093137255,0.760791973039216,0.922377642463235,0.89480364930396,0.884405637254902,0.0166436139275046,0.00448835784313725,0.935959505567364,0.442455665737975,0.556131849101945,0.354748774509804,0.963618259803922,0.979564950980392,0.22044194539388,0.630124080882353,0.945146627987132,0.978144238041897,0.834237581140855,0.960842925427007,0.0281862745098039,0.945373774509804,0.329166666666667,0.942269837622549,0.962911553476371,0.0408179189644608,0.937975984461167,0.957427739162071,0.0196025324802773,0.972923787434896,0.937492340686275,0.00692401960784314,0.0584666532628677,0.064483762254902,0.242227457083908,0.123784876804726,0.512837009803922,0.911220894607843,0.953478525199142,0.989506740196078,0.123307291666667,0.32640931372549,0.645090379901961,0.0197552849264706,0.862591911764706,0.963378666896446,0.938901654411765,0.94780943627451,0.920021446078431,0.0410403980928309,0.849096200980392,0.864499080882353,0.980957121007583,0.561219383688534,0.950390625,0.85199327655867,0.988016764322917,0.926674278109681,0.128499498554305,0.926731004901961,0.965272910922182,0.250535104788986,0.936969547645718,0.955970464968214,0.0831112132352941,0.98583786908318,0.827692233814913,0.75304297652899,0.969699994255515,0.911463060566023,0.856981823491115,0.0826516544117647,0.539562629250919,0.927519704781327,0.862487807928347,0.616855576459099,0.938901654411765,0.418947122611251,0.0332477644378064,0.0521063112745098,0.0206359713685279,0.779293539009842,0.616124336392272,0.958966423483456,0.314418987199372,0.571898052739162,0.975737687653186,0.946165152157054,0.919692095588235,0.836662860945159,0.979549632352941,0.260836821911382,0.0284101897594976,0.911075367647059,0.858282994289024,0.934302221560011,0.025530886182598,0.929754518995098,0.410690128102022,0.232586699841069,0.88599500469133,0.924264705882353,0.958879418466606,0.612630208333333,0.997658359303194,0.941919424019608,0.852768841911765,0.0734415690104167,0.542484717275582,0.969653799019608,0.963628133138021,0.70902219286152,0.0824257046568627,0.122855152803309,0.984635416666667,0.735513724532782,0.2297929502001,0.949896344951555,0.956280637254902,0.815804889155369,0.559781497132544,0.853981421975529,0.951211099063649,0.960782518573836,0.987286735983456,0.800812889547909,0.873360906862745,0.859685232125077,0.990962009803922,0.991306678921569,0.888938395182292,0.972778799019608,0.947934004839729,0.99126646752451,0.65689697265625,0.0486136642156863,0.92161984911152,0.884053308823529,0.383547794117647,0.889828431372549,0.493958955652574,0.819996463551241,0.522486817603018,0.56387939453125,0.976811876483992,0.960384593290441,0.187002144607843,0.785983455882353,0.925900089039522,0.0520297181372549,0.119952512254902,0.932215073529412,0.937735479018267,0.261584921444164,0.708187058392693,0.509658394607843,0.505062806372549,0.847058823529412,0.952978395948223,0.941360294117647,0.768310352400237,0.797924325980392,0.577974207261029,0.865010609346278,0.970882475609873,0.94762082567402,0.972449448529412,0.889828431372549,0.411514521580116,0.987175361782897,0.94476868872549,0.213707792992685,0.940866986443015,0.444410885081572,0.931376453474456,0.946049948299632,0.0559512867647059,0.438030168121936,0.974983005897672,0.338993566176471,0.956913173899931,0.861381740196078,0.785983455882353,0.846168712541169,0.946545649509804,0.943061020795037,0.905885703890931,0.4723705516142,0.916590073529412,0.977962867886413,0.856380208333333,0.940502450980392,0.714499080882353,0.424126090255438,0.799433674531824,0.563305290072572,0.957806979908663,0.921032475490196,0.783969056372549,0.825849346086091,0.0791905721028646,0.252665441176471,0.944462316176471,0.99327512254902,0.914345400941138,0.926660126330806,0.876090764064415,0.574908088235294,0.987140012254902,0.675161862840839,0.870492897781671,0.900291053921569,0.588126537846584,0.982100183823529,0.528793050728592,0.780779520670573,0.318106617647059,0.97491574754902,0.375692255356733,0.500769985423369,0.945268458946078,0.0104486951641008,0.98890931372549,0.494593392166437,0.968385569254557,0.689968692555147,0.480550489238664,0.963509952320772,0.532601779114966,0.682965895708869,0.941201004327512,0.980687040441176,0.494653799019608,0.992922794117647,0.13388276941636,0.975698897417854,0.869094010895374,0.970762484681372,0.604113051470588,0.922561256558287,0.509658394607843,0.627267156862745,0.785983455882353,0.0439223345588235,0.929499622419769,0.990372242647059,0.948606722962623,0.341122855392157,0.97706132776597,0.978226201674517,0.734255532657399,0.00868422564338235,0.950822329053692,0.0341930912990196,0.928691789215686,0.947013346354167,0.962124693627451,0.993711703431373,0.924646295285692,0.00903559666053922,0.911363414689606,0.865455537683823,0.973126430137485,0.225056681913488,0.988539048737171,0.420663661582797,0.889828431372549,0.785983455882353,0.905629595588235,0.943075980392157,0.862530637254902,0.962124693627451,0.862277879901961,0.645626531862745,0.975558965346392,0.50861463359758,0.863551899031097,0.0967966117110907,0.827930061489928,0.630089853324142,0.0807981004901961,0.934602086684283,0.28718339508655,0.147420621385761,0.645090379901961,0.940096507352941,0.989330575980392,0.853545589073031,0.645090379901961,0.96832945580576,0.535030858656939,0.921908988204657,0.968195028866039,0.842309585272097,0.783969056372549,0.859568577186734,0.9295166015625,0.97668337354473,0.898334652769799,0.372813310810164,0.916590073529412,0.0352935491823683,0.971798406862745,0.966460119509229,0.875855225207759,0.0422274421243107,0.959706175561045,0.672816826315487,0.995316090303309,0.988771446078431,0.694108072916667,0.965837306602328,0.923530458936504,0.86405985215131,0.600295811073453,0.1390380859375,0.617427661372166,0.662153894761029,0.641540168313419,0.969641472311581,0.621504809809666,0.902765012254902,0.0116571613386566,0.931004901960784,0.512676418528837,0.969249770220588,0.876505848005706,0.834643075980392,0.744955683689491,0.883716299019608,0.574908088235294,0.890808823529412,0.97608762254902,0.713648059321385,0.95882293102788,0.584584434359681,0.293939208984375,0.558082535687615,0.928357292624081,0.975268075980392,0.275106512331495,0.645626531862745,0.991674325980392,0.988005514705882,0.985671219171262,0.918186516855277,0.857322303921569,0.936465992647059,0.904641544117647,0.117479242063036,0.860048540900735,0.783969056372549,0.927336090686275,0.903684129901961,0.964200367647059,0.521098297717524,0.969546568627451,0.944476198682598,0.471522671568627,0.545911766501034,0.434384484384574,0.418954856722963,0.293003351548139,0.942261669682521,0.902606081495098,0.306346549239813,0.0433550666360294,0.35637524174709,0.945571001838235,0.899339503867953,0.076558640423943,0.880958946078431,0.899969841452206,0.44610320446538,0.847686887254902,0.97155024210612,0.481487962311389,0.980675551470588,0.976294424019608,0.0154561959060968,0.782190061083027,0.990608963311887,0.587015877517999,0.942892156862745,0.902274576822917,0.975915347828585,0.960255821078432,0.8524471208161,0.361726409313726,0.94084363451191,0.974555759803922,0.574908088235294,0.962124214920343,0.361669353410309,0.123897717045803,0.920211522719439,0.985365549723307,0.318387050254672,0.327328431372549,0.0308685003542433,0.956280637254902,0.35157953898112,0.700020763920803,0.995937691482843,0.169545476576861,0.916986727247051,0.898230698529412,0.90712724573472,0.970866304285386,0.99527774885589,0.949867457969516,0.878330125995711,0.716697303921569,0.477619485294118,0.798729990042892,0.00619855394550398,0.987622549019608,0.970680895038679,0.00253822476256127,0.93459758384555,0.973360906862745,0.95844056372549,0.97877405204025,0.969462181540097,0.93804381127451,0.626088579963235,0.848936312806372,0.986643712660845,0.911780024509804,0.953714767156863,0.328024860456878,0.656862745098039,0.97710631127451,0.89184689989277,0.36005848903282,0.164747529871324,0.0338126238654642,0.963807468788297,0.994048713235294,0.887547302246094,0.991896446078431,0.590380290910309,0.885206035539216,0.654384478400735,0.872671568627451,0.123064467486213,0.960379207835478,0.0396829044117647,0.090655637254902,0.253760723039216,0.576848856608073,0.932765826056985,0.803253368302888,0.978309631347656,0.380181331260532,0.319664076262829,0.576082117417279,0.943419093711704,0.0419123182109758,0.987752757352941,0.00575405943627451,0.238541247797947,0.795733762254902,0.834909596162684,0.989353553921569,0.480187150543811,0.0688423306334252,0.959106924019608,0.120641850490196,0.962515318627451,0.0226747400620404,0.982407768099916,0.975346000521791,0.312316176470588,0.744324448529412,0.862622549019608,0.694018075980392,0.954932598039216,0.941480808632047,0.890808823529412,0.809341370825674,0.796323529411765,0.943148743872549,0.0253864662320006,0.913485179227941,0.0794270833333333,0.338442095588235,0.831807215073529,0.962174404368681,0.546994302787033,0.952244178921569,0.20908764109892,0.168769387637868,0.885998774509804,0.758826790603937,0.975366943957759,0.993604473039216,0.969784007352941,0.940579044117647,0.696208639705882,0.391827512254902,0.456295955882353,0.956806257659314,0.518215134564568,0.0498851102941176,0.990198232613358,0.970417202220244,0.956280637254902,0.023929147159352,0.812035414751838,0.909756110696232,0.973644301470588,0.429368082682292,0.958853807636336,0.117647058823529,0.871204211665135,0.907771166633157,0.874725042604933,0.953422755821079,0.843371178122128,0.915589246562883,0.051852357153799,0.0917729396446079,0.902406460631128,0.850551350911458,0.811665134803921,0.977849264705883,0.961269722732843,0.66273743872549,0.952006276448568,0.0996693031460631,0.461489703608494,0.967071159213197,0.969265567555147,0.794725964116115,0.990949802772672,0.952582714604396,0.903538602941176,0.949019607843137,0.84429381127451,0.960766362208946,0.879073498295803,0.982811796898935,0.460033117556104,0.343474264705882,0.584179298550475,0.914390908035578,0.948577835980584,0.468139169730392,0.619546568627451,0.978484987745098,0.645090379901961,0.0322159561456418,0.136778109681373,0.531549401376762,0.605545343137255,0.0864817750220205,0.972870710784314,0.389956440645106,0.546942407944623,0.828033088235294,0.00950520833333333,0.785983455882353,0.893382352941176,0.0443780637254902,0.841746057248583,0.935096650965074,0.736554418825636,0.980675551470588,0.248384483187806,0.909489889705882,0.191812477859796,0.761536721622243,0.950206801470588,0.795733762254902,0.984818761488971,0.99165828929228,0.40217867084578,0.979488956227022,0.484911151960784,0.975965073529412,0.65366881127451,0.970649509803922,0.974378234264897,0.43113618738511,0.980492909749349,0.953103054271025,0.890196078431373,0.962339154411765,0.990743240655637,0.120611213235294,0.602600067737056,0.547326899509804,0.970696572696461,0.0162511339374617,0.980675551470588,0.851914828431373,0.322924325980392,0.891092218137255,0.718223915848078,0.850803868910846,0.774369782092524,0.930767074285769,0.187802812164905,0.629672181372549,0.902382046568627,0.974387254901961,0.78486328125,0.939761891084559,0.609346621644263,0.604113051470588,0.463796757716759,0.465203737745098,0.877563820633234,0.554210423488243,0.944799325980392,0.969607843137255,0.818872549019608,0.578316482843137,0.57810894835229,0.983609068627451,0.795733762254902,0.821883272657208,0.960292442172182,0.833371629901961,0.984545853558708,0.934103079403148,0.298151951210172,0.894300468295228,0.390516348446117,0.928079762178309,0.917761948529412,0.0281629375382966,0.965134803921568,0.862591911764706,0.987775735294118,0.360712387982537,0.0100337009803922,0.979198291254978,0.970757488175934,0.945404411764706,0.986377252316942,0.0538679534313726,0.52965176152248,0.980453431372549,0.990510110294118,0.937001995011872,0.837597297219669,0.126944358676088,0.830455495796951,0.532003604664522,0.038006472120098,0.715381442799288,0.836116745892693,0.946116727941176,0.777849264705882,0.634176441267425,0.880280677945006,0.629672181372549,0.0345082451315487,0.372671837900199,0.883271580116422,0.244311538397097,0.871469056372549,0.908149509803922,0.0464231004901961,0.340418198529412,0.606777565152037,0.93702512254902,0.977444727280561,0.653252096737132,0.552429782643038,0.317302389705882,0.989003095439836,0.0325444240196078,0.848942775352328,0.146498601576861,0.519553554759306,0.458647365196078,0.865119485294118,0.260968137254902,0.487677241306679,0.0889234355851716,0.977389705882353,0.927849264705882,0.0287451800178079,0.940916053921569,0.916498161764706,0.973160089231005,0.0815648696001838,0.933402267156863,0.894554227941177,0.996166558359184,0.152542892156863,0.96593137254902,0.989597335516238,0.989506740196078,0.941721478630515,0.710577512254902,0.928416053921569,0.719860600490196,0.0370643765318627,0.896178406360103,0.137317448036343,0.00724704218845742,0.134393370385263,0.278676231234681,0.606732536764706,0.991919424019608,0.854447069355086,0.689008884803922,0.892800245098039,0.509658394607843,0.232707319072649,0.950022484274472,0.938107329723882,0.280336522121055,0.0850796568627451,0.00788765701593137,0.89002773808498,0.199901984719669,0.0323377123066023,0.567268476299211,0.0152857163373162,0.806636795343137,0.972441864013672,0.985311231426164,0.986159620098039,0.0401654411764706,0.917761948529412,0.996743101232192,0.896484255323223,0.913089767156863,0.980759085860907,0.842367493872549,0.553083382400812,0.702397365196078,0.0168188506481694,0.992740406709559,0.572012867647059,0.988717830882353,0.828959835276884,0.600841641893574,0.888837313184551,0.598360906862745,0.876212595023361,0.963074448529412,0.993704044117647,0.614943321078431,0.968124255012063,0.917331471162684,0.981990500057445,0.977605946858724,0.988909672755821,0.211537574319279,0.119709867589614,0.135470461377911,0.989207428576899,0.815441176470588,0.757275435503791,0.874823835784314,0.623006289613013,0.136757764629289,0.904073827406939,0.801355698529412,0.933540134803922,0.357330741134344,0.978638174019608,0.996101409313725,0.773816561231426,0.873360906862745,0.963122334199793,0.0220541262159161,0.00628829656862745,0.843864889705882,0.962308517156863,0.114408784754136,0.975118719362745,0.916106325037339,0.993704044117647,0.604113051470588,0.386072734757966,0.926102941176471,0.800367003796147,0.92882199754902,0.337687413832721,0.946476880241843,0.545626427145565,0.989966299019608,0.838572303921569,0.94024834726371,0.96475004308364,0.897702205882353,0.152574247472426,0.806645172717524,0.890198561724495,0.973399697098077,0.467182712928922,0.716697303921569,0.01140609442019,0.512837009803922,0.987071078431372,0.915670955882353,0.0746629901960784,0.43183791216682,0.950919117647059,0.326941276999081,0.869037762810202,0.574908088235294,0.602107882032207,0.497202525419347,0.718245263193168,0.906952023973652,0.503112553615196,0.898307291666667,0.465203737745098,0.943748249727137,0.968089473948759,0.949191493614047,0.862270295386221,0.891444008023131,0.0196767769607843,0.0717064950980392,0.437022130629596,0.895072727577359,0.940939031862745,0.692287071078431,0.522886687634038,0.904044117647059,0.0794307933134191,0.532437133789063,0.991858149509804,0.84442018995098,0.00777420343137255,0.967588103051279,0.0887408088235294,0.523390227673101,0.889167576210172,0.971200980392157,0.961032643037684,0.536864830465878,0.922158394607843,0.0243662965063955,0.0641007965686275,0.996775428921569,0.148521243824678,0.207406556372549,0.135301776960784,0.119983149509804,0.943060661764706,0.979580299527037,0.8377140119964,0.628453034045649,0.216970885033701,0.965755283131319,0.894180088417203,0.884083946078431,0.903316482843137,0.558369834750306,0.978477328431373,0.835154469807943,0.0388529459635417,0.889966299019608,0.0211390775792739,0.955287080652574,0.00974031336167279,0.0210915958180147,0.801965840657552,0.302702062270221],&#34;y&#34;:[0.301257264380361,0.387943671731388,0.703015525668275,0.867965159696691,0.923014502431832,0.589721200980392,0.54969362745098,0.681073835784314,0.566078993853401,0.500489133947036,0.739898367489086,0.337071078431373,0.658501838235294,0.823828125,0.49913449754902,0.220427389705882,0.7692626953125,0.789713541666667,0.843172484753179,0.280059934129902,0.780928308823529,0.769310461306104,0.774074778837316,0.895494154387829,0.713457414215686,0.430912990196078,0.542095588235294,0.33625872742896,0.833839790493834,0.292257092045803,0.489663412056717,0.670363961014093,0.799884392233456,0.398996629901961,0.713886335784314,0.709617659624885,0.869569546568627,0.872156240425858,0.595824746524587,0.868466605392157,0.922686243992226,0.925233728745404,0.626167102888519,0.331730921128217,0.218428308823529,0.463319546568628,0.813760914522059,0.685922181372549,0.706235160079657,0.289115157781863,0.687328622855392,0.834703363156786,0.263786764705882,0.834351513432521,0.344414445465686,0.892451910879098,0.849532662185968,0.783854166666667,0.302052696078431,0.596323364856196,0.320994178921569,0.309912169213388,0.804610906862745,0.811078763475605,0.93524050245098,0.821147365196079,0.250560625861673,0.895481004901961,0.465774356617647,0.805177052815755,0.467738970588235,0.375460695752911,0.860967179840686,0.8809871598786,0.407779947916667,0.419753370098039,0.415734384574142,0.277795649509804,0.793518859264897,0.129693244485294,0.708149509803922,0.591681985294118,0.551761642156863,0.753448127297794,0.767810956169577,0.294615218218635,0.32282086540671,0.261709564807368,0.321484375,0.461995083678002,0.615854779411765,0.807444852941176,0.250229495179419,0.271101409313726,0.230438112745098,0.383777573529412,0.78637113384172,0.874241727941176,0.288606770833333,0.668943367752374,0.700994199865005,0.800223436542586,0.299563419117647,0.50685177971335,0.781304572610294,0.359771100212546,0.811390730913948,0.376525160845588,0.373246017156863,0.754518995098039,0.505246629901961,0.843865951837278,0.316482843137255,0.652565870098039,0.365563725490196,0.809586797976026,0.75620787377451,0.771659806195427,0.278737745098039,0.495917585784314,0.805483948950674,0.565847673603133,0.30023224774529,0.915590084300322,0.650937353395948,0.556996857886221,0.681863657633464,0.712944240196078,0.884200286865234,0.297301288679534,0.49022315530216,0.836440022786458,0.519469571581074,0.771433632046569,0.281693522135417,0.808950835583257,0.80155029296875,0.840271953507966,0.842483131558287,0.930261798933441,0.283781896852979,0.28530943627451,0.71186699960746,0.883102731143727,0.397457107843137,0.648882862165862,0.803285845588235,0.473081192315794,0.338429469688266,0.776434445848652,0.327194034352022,0.401350761862362,0.531155036477482,0.867110906862745,0.381032577215456,0.848886287913603,0.87803041046741,0.47335324754902,0.388480392156863,0.808915441176471,0.413172822840074,0.782868613448798,0.563283104990043,0.842236402922986,0.276332720588235,0.283620767032399,0.192213185628255,0.329102863984949,0.233976715686274,0.514261642156863,0.584880275352328,0.676233149509804,0.761301556755515,0.412577146642348,0.857536764705882,0.475327465580959,0.709497549019608,0.741942401960784,0.260906503714767,0.357958026960784,0.925114889705882,0.337071078431373,0.872189031862745,0.327430336148131,0.616044885971967,0.7890625,0.493466605392157,0.776552880979052,0.751141237745098,0.422055397781671,0.328331801470588,0.598774509803922,0.474892769607843,0.877443889543122,0.218428308823529,0.759389600566789,0.707525754442402,0.296208639705882,0.761872400022021,0.779289215686274,0.676212909174901,0.795378845813228,0.268152573529412,0.751751768822764,0.542746629901961,0.464973958333333,0.510699597526999,0.822863051470588,0.283141850490196,0.489310320685892,0.273230698529412,0.755549516864851,0.498177083333333,0.176570159313725,0.715700142056334,0.517460707122204,0.334719669117647,0.425451899509804,0.563357843137255,0.291577223235486,0.220242967792586,0.196451822916667,0.805193014705882,0.859056824328853,0.472487745098039,0.614276960784314,0.803247055352903,0.440735730937883,0.901467042810777,0.755438112745098,0.459009058335248,0.388480392156863,0.601809064079733,0.481357230392157,0.464001225490196,0.553893324908088,0.754659974341299,0.653941719204772,0.718466605392157,0.55889232859892,0.897145723829082,0.359765625,0.309360279756434,0.571198871088963,0.399739583333333,0.909633501838235,0.604389893774893,0.78371031518076,0.552627144607843,0.227870327818627,0.271940044328278,0.621206320968329,0.567308044433594,0.242532004562079,0.322863051470588,0.409780943627451,0.904405272240732,0.417199946384804,0.211329082414216,0.741130514705882,0.329863664215686,0.605871970980775,0.733512369791667,0.456782621495864,0.878204211066751,0.425451899509804,0.770358455882353,0.396047794117647,0.503002450980392,0.181314012116077,0.426815257352941,0.71466064453125,0.93106985653148,0.287283325195312,0.493280867034314,0.731473870370902,0.323901920692593,0.793231320848652,0.524725970099954,0.683220388375077,0.528894521675858,0.834589460784314,0.821115486294616,0.337071078431373,0.946971130371094,0.24125306372549,0.860570780436198,0.610554175283395,0.808311641917509,0.772501702402152,0.854204963235294,0.836421592562806,0.797069355085784,0.32660462622549,0.288047820446538,0.446760110294118,0.290173100490196,0.291019813687194,0.371734738817402,0.332293461818321,0.408223260617724,0.22163569132487,0.851991421568627,0.256259080475452,0.551396687825521,0.420880815094593,0.843282781862745,0.77893560072955,0.750986570470473,0.550045955882353,0.396047794117647,0.892506034701478,0.873510218601601,0.808616518506817,0.550045955882353,0.233205189424403,0.556602328431373,0.589443760292203,0.151767446480545,0.314010874430339,0.398797637341069,0.550045955882353,0.394776258281633,0.785914522058824,0.269048713235294,0.851758051853554,0.18352445714614,0.192337081011604,0.388556985294118,0.323240796257468,0.784094956341912,0.50348253437117,0.742289030785654,0.89920093311983,0.272778799019608,0.793662516276042,0.760669424019608,0.29778226964614,0.235844032437194,0.797155522365196,0.710389096129174,0.739504017549403,0.375118554807177,0.388480392156863,0.257227744308172,0.850811887254902,0.519619691138174,0.863084321863511,0.798573467778224,0.838330078125,0.302874486586627,0.468557514863856,0.791712143841912,0.770840184828814,0.91717508353439,0.799771656709559,0.825153709860409,0.714422742058249,0.400236286836512,0.777683273016238,0.339506740196078,0.277489740708295,0.788168693991268,0.785868566176471,0.837430587469363,0.325312999650544,0.670340743719363,0.480953141754749,0.32229398839614,0.233711661544501,0.472615081188726,0.302052696078431,0.228259322222541,0.734436274509804,0.614930949491613,0.676233149509804,0.174267174215878,0.708730944465188,0.320473749497358,0.802879901960784,0.747975547640932,0.852213541666667,0.387975804946002,0.379456015194164,0.804116477218329,0.795235428155637,0.590910862941368,0.828776879404105,0.235179227941176,0.664292279411765,0.265300077550551,0.784316119025735,0.405116421568627,0.287988759957108,0.225097192502489,0.868698299632353,0.47501615636489,0.732017606847426,0.591681985294118,0.296999942555147,0.243362725949755,0.825959329044118,0.260194546568627,0.904552968343099,0.49913449754902,0.389966299019608,0.759025783164828,0.322158678840188,0.234995404411765,0.656193662157246,0.752719056372549,0.508066214767157,0.818138257194968,0.441270895565257,0.558007333792892,0.647510244332108,0.604123104319853,0.29642884497549,0.768711703431372,0.83585324754902,0.426340379901961,0.874908088235294,0.250587523217295,0.795368942559934,0.926578207576976,0.615230934292662,0.555914815266927,0.800811887254902,0.457666973039216,0.239560355392157,0.472135416666667,0.501228616751876,0.660037725112017,0.243561045328776,0.851348039215686,0.316605392156863,0.791151308545879,0.538130457261029,0.928055692186543,0.790614737716376,0.836603860294118,0.895286066391889,0.435659416049134,0.457827818627451,0.779580269607843,0.304764093137255,0.827726715686274,0.801209034639246,0.829540940827014,0.907791137695312,0.481357230392157,0.76944699754902,0.364909781661688,0.712272853477328,0.537990196078431,0.47511547313017,0.804855376598882,0.864344907274433,0.252866617838542,0.326652870926203,0.193803046731388,0.735922181372549,0.237082088694853,0.267570465686274,0.334719669117647,0.261945926441866,0.695091860902076,0.687563189338235,0.232574597526999,0.321442727481618,0.463871974571079,0.263324453316483,0.582054227941176,0.495166973039216,0.848463619456572,0.754518995098039,0.786683804381127,0.439407169117647,0.622826699649586,0.385399582806756,0.931666415345435,0.250350637996898,0.367948225432751,0.922932478960823,0.614483537860945,0.310301776960784,0.742559515261183,0.824624693627451,0.213533124736711,0.438449754901961,0.633688967835669,0.566475183823529,0.433775718539369,0.766474615358839,0.634458863501455,0.410963065951478,0.677349344889323,0.371223315070657,0.819576772054036,0.711685001148897,0.346729218726065,0.71395143995098,0.429635171329274,0.766322356579351,0.70574083515242,0.503002450980392,0.773635550106273,0.734313725490196,0.784267769607843,0.822315410539216,0.920618334003523,0.830530802408854,0.748943014705882,0.732391237745098,0.542095588235294,0.416232972986558,0.841075538186466,0.230989583333333,0.816317853740617,0.550045955882353,0.754518995098039,0.354423104080499,0.804218965418198,0.187843218036726,0.786695772058824,0.830968744614545,0.267570465686274,0.951732141831342,0.554883874631396,0.815579044117647,0.592475472244562,0.400291053921569,0.384091605392157,0.54648723228305,0.321637157365388,0.212119412889668,0.886136163449755,0.785255821078431,0.315904624789369,0.708933273016238,0.248329686183555,0.789162011240043,0.565728400735294,0.60687806372549,0.51119727340399,0.432643995098039,0.498124664905024,0.88015017041973,0.875536151960784,0.800687184053309,0.796997549019608,0.575881598977482,0.918761967677696,0.852585751402612,0.720197610294118,0.815028186872894,0.326930147058824,0.822199802772672,0.391351557712929,0.322066946590648,0.805144066904105,0.776722627527574,0.852405024509804,0.383949234906365,0.369259344362745,0.752348028444776,0.517662811279297,0.773042207605699,0.956050857843137,0.697042547487745,0.766121927897135,0.231172898236443,0.780127671185662,0.304616965499579,0.774485988242954,0.840923234528186,0.909497354544845,0.226569650687423,0.238099281460631,0.317073717304305,0.514432540594363,0.837377450980392,0.471920955882353,0.324111519607843,0.304304534313726,0.513992249731924,0.22055487539254,0.811979630414177,0.789185049019608,0.257367781096814,0.750819546568627,0.907857139437806,0.676233149509804,0.759505208333333,0.37046568627451,0.373835784313725,0.665877757352941,0.340091151817172,0.751930147058823,0.613181678921569,0.129211710013595,0.652819584865196,0.843282781862745,0.68988037109375,0.759150486366422,0.482065522437002,0.221156999176624,0.37046568627451,0.902248965992647,0.665036668964461,0.305989583333333,0.833210245768229,0.380361519607843,0.344918763403799,0.572640931372549,0.783080575980392,0.763468544155944,0.716360294117647,0.836242017558977,0.79104190901214,0.748943014705882,0.427458639705882,0.489031862745098,0.616205417408663,0.402518747367111,0.767243568570006,0.766271434110754,0.533586090686274,0.82477960025563,0.239560355392157,0.657712928921569,0.801432291666667,0.221859681372549,0.179600300508387,0.747961186427696,0.379725796568627,0.500957414215686,0.490165441176471,0.542095588235294,0.427458639705882,0.591681985294118,0.535962632123162,0.380693188835593,0.29941878973269,0.81901065602022,0.219039812275008,0.735294117647059,0.140759905646829,0.398375043682024,0.77951405843099,0.204208957447725,0.294459234499464,0.80219056372549,0.837901754940257,0.617011335784314,0.816865569469976,0.80585199991862,0.28455690870098,0.681885723039216,0.903017769607843,0.436887254901961,0.370153210209865,0.56180300245098,0.377615984748392,0.149110427557253,0.368065688189338,0.438472732843137,0.292842520919501,0.402781856761259,0.836267822864009,0.757651654411765,0.201234017166437,0.75210631127451,0.787924732881434,0.525769521675858,0.735486677581189,0.718924518660003,0.685176639930875,0.783071151434207,0.773542321897021,0.82824540979722,0.457666973039216,0.515994008382161,0.267409620098039,0.389966299019608,0.617011335784314,0.767959863999311,0.743435968137255,0.182615975772633,0.798736213235294,0.869183349609375,0.806609987745098,0.386465992647059,0.748215379901961,0.630011674469593,0.284834558823529,0.482054227941177,0.822216093773935,0.89703488817402,0.705189843271293,0.730285001268574,0.157964893415862,0.500957414215686,0.388159119849112,0.440647977941176,0.786433500402114,0.237472713694853,0.845918917188457,0.429911594764859,0.723330269607843,0.838065592447917,0.401073321174173,0.290173100490196,0.892629122266582,0.61580930223652,0.289192244585823,0.503251378676471,0.759420955882353,0.712125651041667,0.843457270603554,0.659145519780178,0.424195772058824,0.282008272058824,0.755438112745098,0.239911965762868,0.758102626426547,0.229692047717525,0.216503741694432,0.653377757352941,0.908697360169654,0.577209218343099,0.819906556372549,0.323031077665441,0.890967365339691,0.680055625765931,0.684742647058824,0.690683716418696,0.945860380284927,0.821147365196078,0.498008578431373,0.273062522738588,0.334719669117647,0.458698841169769,0.47130797143076,0.550045955882353,0.786068127202053,0.287286002963197,0.463653758927888,0.203880788765702,0.715111825980392,0.807590379901961,0.328359072816138,0.90896920596852,0.793473950554343,0.871415441176471,0.459750306372549,0.540923713235294,0.513679534313725,0.411488970588235,0.302052696078431,0.332436894435509,0.415525428921569,0.514131433823529,0.870955882352941,0.876511592491,0.718428308823529,0.747015126546224,0.258134954115924,0.507735906862745,0.905919467701631,0.447729357551126,0.664292279411765,0.203112329221239,0.897858249439913,0.292372221105239,0.352112773820466,0.818700453814338,0.757989651549096,0.460929840686275,0.308501838235294,0.748085171568627,0.389897694307215,0.482054227941176,0.897411151960784,0.350497855392157,0.86793519562366,0.328324142156863,0.657312759698606,0.37296833711512,0.798454957849839,0.831410845588235,0.355927845076019,0.845620562983494,0.926478935690487,0.877390782973346,0.927497130749272,0.792740646063113,0.552119685154335,0.750291083840763,0.219119083180147,0.758144932167203,0.725694349700329,0.281132492364622,0.47134142108992,0.824862132352941,0.88473076913871,0.530656881893382,0.490423703661152,0.249188112745098,0.293480607575061,0.824624693627451,0.875302228740617,0.456993611653646,0.587017463235294,0.708302696078431,0.325942095588235,0.426633228975184,0.559620098039216,0.25524891872032,0.263804701262829,0.359765625,0.456842055975222,0.33422181372549,0.39525915407667,0.905539209702436,0.481357230392157,0.282042379940257,0.810737968893612,0.857512350643382,0.848085171568628,0.801669730392157,0.254365330116422,0.336727546243107,0.822451961741728,0.505239314658969,0.716034728405522,0.410324754901961,0.799655330882353,0.799506602567785,0.233528107287837,0.27736738616345,0.67259609745998,0.877795649509804,0.853109681372549,0.740084808947993,0.632329963235294,0.712032781862745,0.500957414215686,0.386465992647059,0.324223537071078,0.347882588704427,0.234819240196078,0.651740025539024,0.707130821078431,0.582873774509804,0.894478771733303,0.953589824601716,0.312503799737669,0.572400022020527,0.824059535007851,0.529940257352941,0.673746699912875,0.865096507352941,0.678270526960784,0.32679993872549,0.207180606617647,0.80152972352271,0.215762403899548,0.770880770215801,0.463319546568627,0.263712176154642,0.468428308823529,0.211086318072151,0.233073948878868,0.855091947667739,0.762239583333333,0.235331935508578,0.822147115071615,0.590797424316406,0.323346500770718,0.318862316655178,0.841596969903684,0.2818395726821,0.617011335784314,0.642391533945121,0.871426451439951,0.613181678921569,0.224594056372549,0.848997273164637,0.849266635670382,0.704630593692555,0.909535845588235,0.223544730392157,0.768864889705882,0.759566482843137,0.588564225739124,0.930316715614468,0.429752843520221,0.266975642185585,0.404732303993375,0.750344669117647,0.329716282264859,0.591534842696844,0.190586179845473,0.500015318627451,0.760562193627451,0.789859068627451,0.169781853170956,0.528731851016774,0.312216605392157,0.398100490196078,0.343606627221201,0.414694857129864,0.757703205183441,0.500533937940411,0.590885416666667,0.584450157015931,0.895691561231426,0.302026606541054,0.207796313715916,0.657712928921569,0.416345932904412,0.757754576439951,0.735580384497549,0.328416053921569,0.433996507233264,0.731875550513174,0.425451899509804,0.711356847426471,0.680825895421645,0.387561274509804,0.296091954848346,0.291268382352941,0.45510924096201,0.469492953431373,0.859443933823529,0.632867386761834,0.906114825080423,0.38135866651348,0.670443471272786,0.384176994772518,0.665877757352941,0.789972611969592,0.302052696078431,0.532666973039216,0.357958026960784,0.568815882065717,0.270540858250038,0.795121017156863,0.375960765165441,0.247673004748774,0.499091354070925,0.334521813486137,0.847812428193934,0.373007426542394,0.896414244408701,0.244997032015931,0.0890940946691176,0.824971307492724,0.702535232843137,0.576190544577206,0.770223804548675,0.864200367647059,0.629649203431373,0.258735626819087,0.76695006127451,0.755238028133617,0.846362783394608,0.259037990196078,0.762678527832031,0.249304438572304,0.129209391276042,0.263014610140931,0.550045955882353,0.796621778899548,0.796911486457376,0.281140869739009,0.71406800513174,0.478069110945159,0.753446691176471,0.231021551992379,0.440410539215686,0.240335038129021,0.942461380304075,0.57000711478439,0.211342949960746,0.526072513355928,0.329901960784314,0.197920167212393,0.253285845588235,0.367269912420535,0.179304534313726,0.223804234523399,0.873579735849418,0.664292279411765,0.352908983417586,0.887537174598843,0.54969362745098,0.343336397058824,0.31390931372549,0.761128982843137,0.30217306099686,0.808973095463771,0.905220779718137,0.225019342759076,0.213968987558402,0.837591911764706,0.70414368872549,0.275568419811772,0.593236825980392,0.572640931372549,0.379894825056487,0.908731617647059,0.352608998616536,0.7901533388624,0.550612745098039,0.906585229611864,0.551531862745098,0.502393370983647,0.214430147058824,0.395282401290594,0.909535845588235,0.431260426839193,0.541413714838963,0.664782475490196,0.259755377675973,0.807748592601103,0.274698324764476,0.538873650045956,0.822863051470588,0.363712430467793,0.854575377819585,0.742381496055453,0.888901654411765,0.238511029411765,0.706066176470588,0.33444439757104,0.308379289215686,0.894803275314032,0.428375124463848,0.539742952234605,0.745626427145565,0.217723651960784,0.248211310891544,0.490511426738664,0.304255586511949,0.369129345463771,0.935346401438993,0.294792893353631,0.694352183622472,0.505859375,0.811990132051356,0.869256472120098,0.749272365196078,0.863296568627451,0.848319049910003,0.789494996912339,0.481357230392157,0.820841710707721,0.824624693627451,0.539741890103209,0.901084166882085,0.404572610294118,0.78928773169424,0.744799325980392,0.626764035692402,0.302895220588235,0.905094146728516,0.287193866804534,0.603407811183555,0.523021189371745,0.541905062806373,0.632415232938879,0.788179165709252,0.694887692320581,0.692531211703431,0.843933823529412,0.850952088599112,0.908080575980392,0.907154726514629,0.820848651960784,0.343702847349877,0.521799738266889,0.701853075214461,0.324793198529412,0.230193343817019,0.736284083946078,0.395425684311811,0.868113184910195,0.19044771381453,0.285467768650429,0.377403857661229,0.50119706696155,0.877795649509804,0.858268603156595,0.513227634803922,0.275398284313725,0.699142994600184,0.537783394607843,0.76647673962163,0.712760416666667,0.227606620040594,0.794169826133578,0.747684628355737,0.723336971507353,0.778673448749617,0.309818761488971,0.507225111419079,0.485470281862745,0.820848651960784,0.425451899509804,0.764905024509804,0.503742995916628,0.88666353412703,0.732391237745098,0.844806985294118,0.743084447524127,0.282176776960784,0.321484375,0.255941951976103,0.202864613252528,0.837978422875498,0.756811942306219,0.386623965992647,0.222344940783931,0.705606617647059,0.637660845588235,0.37585272695504,0.822549019607843,0.474310661764706,0.868210048301547,0.867915134803922,0.741176470588235,0.729419424019608,0.653301164215686,0.334226137049058,0.220806525735294,0.827878241445504,0.861197916666667,0.82596742218616,0.526608111811619,0.490092049392999,0.505928308823529,0.75210631127451,0.314154411764706,0.922090343400544,0.613181678921569,0.274990066827512,0.761893971761068,0.377940473369524,0.529026166130515,0.918382352941176,0.300382965686275,0.551531862745098,0.354348575367647,0.809564433378332,0.822389610140931,0.888451220942478,0.508617745193781,0.728468307794309,0.713769950118719,0.710026041666667,0.911151960784314,0.782369695925245,0.853492647058824,0.877629792456533,0.887083898806104,0.542095588235294,0.252902879901961,0.473105516620711,0.458570772058823,0.78031556372549,0.54969362745098,0.396047794117647,0.861963848039216,0.768474264705882,0.288095272288603,0.732391237745098,0.506436576095282,0.708256740196078,0.912501795151654,0.388480392156863,0.225229779411765,0.318452678007238,0.834791280709061,0.442440257352941,0.204945433373545,0.503576525519876,0.253903138403799,0.871177194632736,0.257199754901961,0.391659246706495,0.899754557890051,0.814634988822189,0.450961961933211,0.874073223039216,0.45914338055779,0.237932736265893,0.453022766113281,0.610728185317096,0.798930987189798,0.450165034275429,0.873613664215686,0.377139222388174,0.255549711339614,0.834113222009995,0.724844240674785,0.732391237745098,0.615429777257583,0.891759775199142,0.822863051470588,0.785400435503791,0.897003817090801,0.903409157547296,0.480835005816291,0.847895259483188,0.695349405326095,0.713812136182598,0.308454939898323,0.769713218539369,0.711893119064032,0.308946078431373,0.893856766644646,0.835048436183555,0.234819240196078,0.925379779292088,0.274037783753638,0.904575003829657,0.523835784313725,0.806145402496936,0.880267648135915,0.34643435010723,0.694653799019608,0.283013916015625,0.796997549019608,0.671667031680836,0.589721200980392,0.771227787990196,0.869137034696691,0.816246840533088,0.685102634803922,0.410893578622855,0.785091983570772,0.855955116421569,0.849473422181373,0.311274509803922,0.194347187117034,0.812705021278531,0.480376314649395,0.75210631127451,0.375493921018114,0.674744250727635,0.804082892922794,0.455546270632276,0.752506630093444,0.329901960784314,0.226211173861635,0.216237745098039,0.796218842151118,0.495067401960784,0.449402573529412,0.227730305989583,0.714223345588235,0.269502632290709,0.325855928308824,0.720231837852328,0.819370404411765,0.692036752139821,0.488296568627451,0.51078431372549,0.220427389705882,0.807307209688074,0.715492787080653,0.177006859872855,0.789339013193168,0.3249813005036,0.574093807444853,0.764636948529412,0.572640931372549,0.265498741000306,0.824739583333333,0.801669730392157,0.851824188232422,0.262444425096699,0.865788807588465,0.493710476744409,0.503002450980392,0.765525428921569,0.78140318627451,0.290820192823223,0.81890318627451,0.197829212861903,0.593872549019608,0.387132352941176,0.206659863041896,0.780096630021637,0.425135803222656,0.713809742647059,0.220427389705882,0.527513571346507,0.431473391663794,0.270258884803922,0.767660193349801,0.461378628599877,0.918213444130094,0.366910777372472,0.284761077282475,0.825834865196078,0.52772611730239,0.296086808746936,0.788342524509804,0.556014640658509,0.381855085784314,0.572640931372549,0.294070060580385,0.292984068627451,0.391591629327512,0.328740138633578,0.654722535376455,0.533586090686274,0.612540061801088,0.436772365196078,0.343673406862745,0.37569699754902,0.26916285496132,0.5399091982374,0.891062643013748,0.345003988228592,0.698360906862745,0.556786151960784,0.780578493604473,0.85936060886757,0.743435968137255,0.326769301470588,0.516055357689951,0.329285371069815,0.796902405981924,0.2493615991929,0.617011335784314,0.427045036764706,0.670205329446232,0.295852885526769,0.684129901960784,0.924476384181602,0.427458639705882,0.493200219846239,0.216735899682138,0.566544117647059,0.910566606708601,0.763360760258693,0.683636639164943,0.86068270814185,0.696749444101371,0.407559742647059,0.400674887264476,0.750272144990809,0.659522920496323,0.494710765165441,0.490582275390625,0.644969910266353,0.856273232254327,0.343376249425551,0.80401731004902,0.773644301470588,0.65980203665939,0.692383530560662,0.684652769799326,0.237261903052237,0.75244140625,0.657712928921569,0.876031942928539,0.503002450980392,0.852987132352941,0.572640931372549,0.835675168504902,0.687925316305722,0.540073529411765,0.447487954532399,0.76695006127451,0.708020273844401,0.805248469932407,0.37443629246132,0.956050857843137,0.608091017779182,0.931024050245098,0.276279105392157,0.712591911764706,0.652565870098039,0.324272365196078,0.287682447246477,0.811890127144608,0.42560495114794,0.281586052389706,0.467241115196078,0.757884500540939,0.771765525668275,0.136276529349533,0.220427389705882,0.572640931372549,0.239560355392157,0.70968137254902,0.38671875,0.652565870098039,0.386465992647059,0.357958026960784,0.756948792700674,0.546474800857843,0.72331475650563,0.869913736979167,0.877370527678845,0.613147451363358,0.854327512254902,0.527794901529948,0.513569730870864,0.89141658708161,0.396047794117647,0.733586090686275,0.382552083333333,0.214575000837737,0.396047794117647,0.725055769378064,0.601800701664943,0.318967811734069,0.393577994552313,0.240149658801509,0.556786151960784,0.203425807578891,0.376875529569738,0.735294117647059,0.227383557487937,0.262139009961895,0.533586090686274,0.905991976868872,0.713733149509804,0.635418895646638,0.629172844980277,0.838196758195466,0.390251907647825,0.904832084506166,0.642480528588389,0.495067401960784,0.663662300857843,0.691490981158088,0.366512612735524,0.818954153621898,0.789503838034237,0.801830875172335,0.805662955489813,0.83575989966299,0.940167101691751,0.730157710056679,0.387703181248085,0.230438112745098,0.800197676116345,0.280024509803922,0.787926303639132,0.709544462316177,0.62165605133655,0.605404124540441,0.262141403497434,0.790625,0.617011335784314,0.713457414215686,0.804189644607843,0.30896821863511,0.791388507917816,0.571227787990196,0.827477907666973,0.597857591217639,0.398294486251532,0.735294117647059,0.93180150050743,0.357958026960784,0.507224647671568,0.425776702282476,0.52690528420841,0.804939943201402,0.274126838235294,0.340847120098039,0.498177083333333,0.865999917423024,0.220779239430147,0.556763174019608,0.253561580882353,0.360255821078431,0.285087316176471,0.328690233417586,0.495894607843137,0.853223134957108,0.392616421568627,0.500254597383387,0.356561638327206,0.575909513585708,0.754479995428347,0.333119321336933,0.234316837086397,0.903477178835401,0.862556966145833,0.81520643047258,0.449747242647059,0.246582150926777,0.879158259373085,0.328416053921569,0.336979645373775,0.868284577014399,0.284581801470588,0.513676467596316,0.898520181693283,0.750314031862745,0.721108350566789,0.834359711291743,0.668359973383885,0.523869443407246,0.342683769674862,0.288311887254902,0.455637135225184,0.767175113453585,0.748085171568627,0.405694669835708,0.774433210784314,0.901747954125498,0.387859030330882,0.617011335784314,0.286672315410539,0.92470791386623,0.724487469243068,0.843932641721239,0.515821494308172,0.813218928318398,0.54969362745098,0.75131913727405,0.75210631127451,0.112944943297143,0.864682844573376,0.388532571231618,0.762223172655293,0.250320060580385,0.470182291666667,0.896008420458027,0.345108032226562,0.470522787056717,0.914354062547871,0.368740665211397,0.795121017156863,0.481357230392157,0.190793744255515,0.848122510723039,0.559558823529412,0.360019130332797,0.851115507238051,0.376148523068896,0.407176776960784,0.754518995098039,0.771096592323453,0.438855563893038,0.851991421568627,0.790250651041666,0.214775773590686,0.324113075405944,0.694362745098039,0.464070159313725,0.920320907293582,0.720197610294118,0.527803308823529,0.238603659237132,0.151317027970856,0.897878370098039,0.901312480253332,0.648407341452206,0.323973651960784,0.930584926231235,0.376935891544118,0.836389788459329,0.236017922794118,0.838959099264706,0.44656862745098,0.84964994542739,0.30541597254136,0.863886335784314,0.851348039215686,0.793374693627451,0.84507802327474,0.289628571155025,0.210818107455385,0.432108396642348,0.904729327033548,0.718542315913182,0.356740689745136,0.335470042509191,0.848955476050283,0.361098345588235,0.83756223192402,0.746192902209712,0.591681985294118,0.63798708448223,0.519160251991421,0.494449989468444,0.737376987232881,0.752512254901961,0.849203431372549,0.466222426470588,0.545914309632544,0.830656612620634,0.37266030405082,0.721262254901961,0.71024050245098,0.818190870098039,0.663572303921569,0.302267156862745,0.263049436083027,0.713457414215686,0.762221272786458,0.752029718137255,0.842673866421568,0.86163033878102,0.696737431544884,0.846859681372549,0.779947916666667,0.415326286764706,0.539404925178079,0.816602145924288,0.27862429151348,0.727924735873353,0.902263566559436,0.219159055223652,0.895552242503447,0.750213757683249,0.326110600490196,0.727405024509804,0.586328125,0.665762867647059,0.80453431372549,0.538947610294118,0.649627266678156,0.538235054764093,0.817738970588235,0.536182897231158,0.621282614913641,0.75210631127451,0.862326109643076,0.689894732306985,0.848250505035999,0.623881740196078,0.810021852979473,0.478710279277727,0.848399203431373,0.688146613625919,0.463679384717754,0.831401391122855,0.388727958529603,0.554510348450904,0.420554396685432,0.82404665479473,0.868313419117647,0.228264303768382,0.287904387829351,0.415686274509804,0.747487745098039,0.422114473230699,0.789242493872549,0.270587771546607,0.945915072571998,0.892054254868451,0.49547285192153,0.781252393535539,0.682861687155331,0.350645581413718,0.31857536166322,0.236251531862745,0.854503676470588,0.388480392156863,0.636088053385417,0.804337744619332,0.734649284213197,0.33985860487994,0.59116881127451,0.883860973283356,0.266918481564989,0.390229184019799,0.522080604702819,0.802329867493873,0.721599264705882,0.396047794117647,0.882547849767348,0.860165824142157,0.879864457074334,0.389966299019608,0.782722293629366,0.703561580882353,0.872198366651348,0.889061452828202,0.401355698529412,0.813327205882353,0.572640931372549,0.241207107843137,0.822549019607843,0.245005050359988,0.627258540134804,0.186515987620634,0.757306985294118,0.64796537511489,0.491973039215686,0.794894154866536,0.538409782858456,0.337071078431373,0.591681985294118,0.312977674895642,0.45572037042356,0.899076977898093,0.751727923224954,0.821147365196078,0.742981196384804,0.781112132352941,0.752967310886757,0.704683430989583,0.520796113855699,0.797406469606886,0.868647033093022,0.220795036764706,0.637660845588235,0.512403779871323,0.875536151960784,0.198150185977711,0.386320465686275,0.948628204944087,0.809165416044348,0.755438112745098,0.208662683823529,0.818734681372549,0.459719669117647,0.905623626708984,0.399900548598346,0.212704647288603,0.670802307128906,0.700210900400199,0.787706801470588,0.495917585784314,0.681885723039216,0.415673828125,0.821100930606618,0.199939443550858,0.657712928921569,0.9115535661286,0.482054227941176,0.598404065300437,0.723228499468635,0.35132506127451,0.779625028722426,0.428699448529412,0.386037071078431,0.33787457335229,0.411213235294118,0.591681985294118,0.561447786817364,0.34124921910903,0.208034620098039,0.600283050537109,0.852584614473231,0.73054318895527,0.91418940226237,0.792365354650161,0.333846028645833,0.243252144607843,0.805105800254672,0.73875612745098,0.768474264705882,0.404541973039216,0.514261642156863,0.83734681372549,0.772760638068704,0.346772571638519,0.275122549019608,0.735318621467142,0.824624693627451,0.91918405271044,0.592953431372549,0.31905637254902,0.860907027300666,0.749744968788296,0.814698552150352,0.216469588934206,0.360277692009421,0.824117742800245,0.203900355918735,0.428895045261757,0.283371629901961,0.389889705882353,0.431483923220167,0.830870923808977,0.787706801470588,0.870838419596354,0.12097718481924,0.32195494408701,0.827041940128102,0.766306678921569,0.375359987745098,0.874241727941176,0.764407169117647,0.92440164603439,0.402282475490196,0.717028060613894,0.786056937423407,0.300538410859949,0.813112745098039,0.790364673090916,0.897464767156863,0.284447524126838,0.8639741934982,0.884236907958984,0.737323835784314,0.425451899509804,0.756181066176471,0.605477486404718,0.866749722349877,0.724532781862745,0.275337009803922,0.759725278966567,0.865042892156863,0.439698223039216,0.853054046630859,0.835226021560968,0.681280637254902,0.236848958333333,0.428074586157705,0.901317401960784,0.287040441176471,0.494508272058823,0.461129940257353,0.460915000765931,0.801432291666667,0.517394301470588,0.377491191789216,0.810319967830882,0.481212107340495,0.853233501957912,0.827790264054841,0.835427377738205,0.696185542087929,0.851439950980392,0.357371012369792,0.879088667327282,0.806747855392157,0.2265625,0.503002450980392,0.841790217979282,0.413311393588197,0.579337415508195,0.881640385646446,0.844033394607843,0.875687902113971,0.339882211124196,0.831462665632659,0.821434813854741,0.315354171453738,0.708685661764706,0.691514437806373,0.744598822500191,0.446978879442402,0.528033088235294,0.824754901960784,0.24125306372549,0.495424652099609,0.325726826985677,0.750344669117647,0.302052696078431,0.280965887331495,0.168477645574832,0.776753982843137,0.826146638159658,0.408731617647059,0.803025428921569,0.573514093137255,0.550505484786688,0.364542239320044,0.493862062342027,0.736205575980392,0.228353851916743,0.340004595588235,0.495304840686275,0.793252144607843,0.916449647791245,0.708097570082721,0.596132285922181,0.367937499401616,0.419888694613588,0.90535327686983,0.763935014313343,0.77040267645144,0.361261106004902,0.354679840686275,0.343461145139208,0.666818461698644,0.203122411989698,0.79351256127451,0.481587039723116,0.361665134803922,0.71851256127451,0.347695324467678,0.825949754901961,0.533134191176471,0.50037446863511,0.218428308823529,0.628864258410884,0.856720180137485,0.956050857843137,0.292639399509804,0.547495404411765,0.807567042930453,0.496197150735294,0.690177109662224,0.495304840686275,0.657712928921569,0.899079924938726,0.513802232929304,0.540007722144033,0.710899203431373,0.780446131089154,0.271522836124196,0.819605943268421,0.528507965686275,0.394018075980392,0.829831680597043,0.910425447950176,0.471920955882353,0.782681693282782,0.345883836933211,0.236261674469593,0.304364627015357,0.33043332567402,0.795121017156863,0.76501937567019,0.542095588235294,0.320442708333333,0.532666973039216,0.878584558823529,0.520641850490196,0.665996087766161,0.795898557176777,0.392643767712163,0.617011335784314,0.331828726974188,0.928347823199104,0.204259356330423,0.671460888432521,0.519021426930147,0.676233149509804,0.482054227941177,0.269817202698951,0.406600503360524,0.28189676322189,0.815693051207299,0.80486312567019,0.851432291666667,0.868497242647059,0.876142913219976,0.226646333582261,0.353017769607843,0.661841299019608,0.398548978917739,0.483976715686275,0.805869308172488,0.403786752738205,0.539989276960784,0.388606770833333,0.861726409313725,0.400094380098231,0.865096507352941,0.816824999042586,0.560919877594592,0.372824754901961,0.624462651271446,0.665801702761183,0.266888786764706,0.808735955930224,0.853109681372549,0.388916973039216,0.848924315209482,0.703056066176471,0.890050551470588,0.874908088235294,0.272778799019608,0.696826889935662,0.599212870878332,0.851239432540594,0.79422441370347,0.722618028229358,0.502437756108303,0.634375,0.230989583333333,0.751499430338542,0.399479166666667,0.871376037597656,0.79507230870864,0.400903799019608,0.82692200903799,0.282332117417279,0.903737415986903,0.856669706456801,0.817234473134957,0.573114133348652],&#34;z&#34;:[0.532942693373736,0.129526085947074,0.2837007559982,0.480381251316445,0.756014939850452,0.142095588235294,0.88719362745098,0.190272671568627,0.390930654488358,0.239039222866881,0.149518465528301,0.248337928921569,0.139192708333333,0.655134851792279,0.799724264705882,0.831280637254902,0.166432339537377,0.18726256127451,0.589216748405905,0.19361691942402,0.228010110294118,0.222110912846584,0.436857216030944,0.664486963608686,0.132743566176471,0.900459558823529,0.122066482843137,0.863002178715724,0.399618874344171,0.575568494609758,0.964819365856694,0.117950080422794,0.608914603439032,0.115670955882353,0.14008118872549,0.216434448840571,0.673944211473652,0.678268372778799,0.940366438323376,0.586504289215686,0.795663063198912,0.779510498046875,0.15478229896695,0.971145988913143,0.78602175245098,0.972280943627451,0.668348843443628,0.335654105392157,0.340056295955882,0.154319254557292,0.535326041427313,0.465309846167471,0.902864583333333,0.470183563232422,0.229628140318627,0.590341246361826,0.507107723460478,0.181181066176471,0.908892463235294,0.155067309211282,0.910225183823529,0.949127855487898,0.353553921568628,0.435092267803117,0.843372539445466,0.411511948529412,0.195347385780484,0.678699897317325,0.148127297794118,0.310380000694125,0.898445159313725,0.104604384478401,0.475657743566177,0.698815484140433,0.1203125,0.34366574754902,0.931747855392157,0.155361519607843,0.61023982926911,0.466190308215571,0.130508841720282,0.104028799019608,0.975375306372549,0.332561178768382,0.476424602433747,0.833340708414714,0.704530424230239,0.704772620107613,0.958555453431373,0.763045247395833,0.106058517156863,0.6421875,0.696932280297373,0.21773131127451,0.855514705882353,0.110286458333333,0.393364087273093,0.707038909313725,0.74988893995098,0.13811694874483,0.978679956174364,0.257090968711703,0.94422487745098,0.914543466007008,0.31685910692402,0.414619445800781,0.664828192018995,0.933559761795343,0.895067401960784,0.154518995098039,0.128776041666667,0.684085382199755,0.901907169117647,0.157284007352941,0.973613664215686,0.353633656221278,0.152611825980392,0.98369976866479,0.491597732843137,0.120825674019608,0.313733029833027,0.351192923153148,0.513664739272174,0.786637878417969,0.154422341141046,0.262651675355201,0.133396358116,0.147288602941176,0.630175377340878,0.541273408777573,0.16792937634038,0.702553543390012,0.976068414426317,0.362640739889706,0.14585631127451,0.311087784112669,0.315275783164828,0.70854887120864,0.507566145354626,0.821926281498928,0.782039642333984,0.881847426470588,0.338881399117264,0.669332721186619,0.113802083333333,0.186454114726945,0.265716911764706,0.124056797401578,0.898118501551011,0.227999818091299,0.905234781901042,0.0630555695178462,0.958599285050934,0.585662363089767,0.906905738980162,0.720162290685317,0.607271142099418,0.885998774509804,0.111810661764706,0.384359681372549,0.341958438648897,0.282991820690679,0.863068644205729,0.503847922530829,0.872625612745098,0.888277629777497,0.733619435628255,0.890622471828087,0.851348039215686,0.876631433823529,0.182169117647059,0.119738051470588,0.323200659658395,0.293461878159467,0.591875143612132,0.17465799369064,0.189782475490196,0.147594975490196,0.703653133616728,0.857092524509804,0.780376838235294,0.248337928921569,0.704636158662684,0.817670455633425,0.110398505715763,0.249348958333333,0.162837009803922,0.241447852639591,0.147372855392157,0.709498252120673,0.225191482843137,0.600612745098039,0.149962421492034,0.988726058660769,0.78602175245098,0.274325980392157,0.948577372233073,0.761274509803922,0.612537623386757,0.164384191176471,0.17844524009555,0.415348995433134,0.338817401960784,0.161616964901195,0.906801470588235,0.149793198529412,0.0835166931152344,0.635692401960784,0.511052389705882,0.161431361179726,0.759122242647059,0.250541761809704,0.123085171568627,0.271775428921569,0.135943708232805,0.0986226698931526,0.229028799019608,0.111856617647059,0.0973115808823529,0.901132935168696,0.314743580537684,0.605874798344631,0.313442095588235,0.541995343974992,0.12320006127451,0.135301776960784,0.7230525895661,0.726704616172641,0.712394534840303,0.362247242647059,0.763072563620175,0.109834558823529,0.98098430259555,0.102152267156863,0.97296262254902,0.883929039450253,0.61236099542356,0.275863572662952,0.137048100490196,0.974171193440755,0.700151660395604,0.151899509803922,0.229326195810355,0.112257475011489,0.103944546568627,0.746675139782475,0.430771906235639,0.298531087239583,0.889411956188726,0.843954886642157,0.690046661975337,0.155634936164407,0.950457569197112,0.169425291173598,0.139545036764706,0.723713235294118,0.835552679323682,0.852733417585784,0.7877685546875,0.150750612745098,0.187645526960784,0.111647243125766,0.977140538832721,0.762481150907629,0.63384339575674,0.111856617647059,0.365602022058824,0.881456801470588,0.104863664215686,0.575437852448108,0.898268995098039,0.981161603740617,0.803173244700712,0.792146989410999,0.901935891544117,0.873285779766008,0.598045124727137,0.192176370059743,0.967702858120787,0.3429277158251,0.903894282322304,0.701377045874502,0.400263483384076,0.248337928921569,0.845290868422564,0.862859987745098,0.702961491603477,0.983332734949449,0.322578415216184,0.834824146943934,0.656066176470588,0.986504289215686,0.270820886948529,0.902014399509804,0.939028212603401,0.871583946078431,0.153630514705882,0.808574960746017,0.6399658203125,0.908204800474877,0.884065261541628,0.295923375148399,0.416827512254902,0.875866923612707,0.81905626783184,0.243977864583333,0.510715379901961,0.356383993111405,0.805398395014744,0.893941482843137,0.881456801470588,0.667111654842601,0.646019086650774,0.469756870643765,0.893941482843137,0.74461373721852,0.0969439338235294,0.595448886646944,0.0558335098565793,0.579170092414407,0.118466754988128,0.893941482843137,0.0703106450099571,0.238962928921569,0.919217218137255,0.715403358609069,0.166935341030944,0.279706872678271,0.848154105392157,0.900283394607843,0.39649538526348,0.122385600968903,0.897538503011068,0.675860835056679,0.485638786764706,0.182724417892157,0.168864889705882,0.941064094094669,0.788692698759191,0.650787114162071,0.241611061844171,0.238350812126608,0.788431967940985,0.111656278722426,0.881894564161114,0.472886029411765,0.953599159390319,0.629999243044386,0.266200540580001,0.707474173751532,0.954248914531633,0.810829267314836,0.301799220664828,0.414009632783778,0.813068285175398,0.196194757199755,0.26829195209578,0.60329106648763,0.79339038624483,0.32662628772212,0.90991881127451,0.129473502963197,0.660982513427734,0.312147671568627,0.705803126914828,0.870187003939759,0.126292030484069,0.07863208546358,0.148900050742953,0.850922139485677,0.966013351141238,0.908892463235294,0.84357172648112,0.348349417892157,0.247544666365081,0.119738051470588,0.729715279971852,0.408845834171071,0.758915845085593,0.535761335784314,0.149080403645833,0.417049632352941,0.8680232926911,0.973869323730469,0.339456790101294,0.193638700597426,0.336894181195427,0.696342079312193,0.815571384803922,0.144983149509804,0.735204120710784,0.346188055300245,0.335148590686275,0.766960114123775,0.295126297894646,0.663129978553922,0.887661683325674,0.279817947686887,0.104028799019608,0.901167072969324,0.424559110753677,0.250649964575674,0.898609834558823,0.712630582323261,0.799724264705882,0.867003676470588,0.36156005859375,0.812601829977597,0.843642769607843,0.925734022551892,0.441980698529412,0.724934656479779,0.667437998453776,0.883864219515931,0.936642156862745,0.161557425704657,0.114740349264706,0.893211933210784,0.304266237745098,0.703370098039216,0.676148897058824,0.636420036764706,0.873289729099648,0.390722820805568,0.769273376464844,0.975336949965533,0.97159480674594,0.313921281403186,0.972939644607843,0.817761948529412,0.160416666666667,0.741066771862554,0.980830697452321,0.082081319771561,0.624808517156863,0.902029718137255,0.478129233565985,0.901271446078431,0.820870328417011,0.185850644579121,0.704120710784314,0.625283259971469,0.146660703771255,0.145235906862745,0.338625919117647,0.37179074754902,0.316116871553309,0.533319630342371,0.286181131998698,0.770674716725069,0.102152267156863,0.266934742647059,0.885563480152803,0.146617216222426,0.903454948874081,0.124798928055109,0.557808520747166,0.660018157958984,0.69818665747549,0.633046812169692,0.199586142745673,0.152941176470588,0.815571384803922,0.859505208333333,0.229028799019608,0.881553769579121,0.20196226531384,0.891560872395833,0.828668347526999,0.28425017712163,0.147303921568627,0.913178926355699,0.142095588235294,0.802749693627451,0.395954865100337,0.154518995098039,0.246725164675245,0.973491115196078,0.980773207720588,0.262250728233188,0.855235485002106,0.35639383652631,0.803724879844516,0.790762149586397,0.11581625844918,0.809260110294118,0.270476337507659,0.637454044117647,0.316723587933709,0.863488051470588,0.118151331882851,0.891750919117647,0.768940091600605,0.228941405053232,0.320308042040058,0.784613964604396,0.266105472340303,0.802673728793275,0.465272237740311,0.137579585056679,0.931495322433172,0.344381893382353,0.772244038301356,0.402575414321002,0.128190283681832,0.104863664215686,0.467069244384766,0.152765012254902,0.454120710784314,0.251428462009804,0.748127821380017,0.426627738803041,0.146752450980392,0.140755208333333,0.122066482843137,0.0638727823893229,0.577519749660118,0.856066176470588,0.226704990162569,0.893941482843137,0.154518995098039,0.898583026960784,0.651599480124081,0.13927672143076,0.344286151960784,0.28096108530082,0.859842218137255,0.903401872223499,0.958789541207108,0.422663909313725,0.41219581155216,0.12578125,0.901095281862745,0.820928640926585,0.835229566985486,0.231595132865158,0.669208511651731,0.247365196078431,0.893866639978745,0.139379523782169,0.306417921477673,0.406747795553768,0.0917777267156863,0.581901041666667,0.897755177815755,0.90086550245098,0.788970588235294,0.64832379210229,0.637216605392157,0.473130783380247,0.270749080882353,0.823437380323223,0.7760929182464,0.697178275912416,0.184819240196078,0.613296224556717,0.183363970588235,0.251537248200061,0.850948677810968,0.83663496129653,0.553225782805798,0.465203019684436,0.650827205882353,0.0660558812758502,0.966544117647059,0.367968720080806,0.426207074932024,0.156773825252757,0.851263786764706,0.136221852022059,0.521624755859375,0.156978098551432,0.173735495174632,0.123001861572266,0.323429002948836,0.475546444163603,0.764130566166896,0.81698018990311,0.741882982441023,0.859782050637638,0.728551288679534,0.704679840686274,0.124823835784314,0.964705882352941,0.951976102941177,0.899578737745098,0.758799010632085,0.392210941688687,0.249839154411765,0.168075382008272,0.14439697265625,0.684710319369447,0.119738051470588,0.359627757352941,0.867409620098039,0.965801164215686,0.119715073529412,0.639026507209329,0.301853553921569,0.134206495098039,0.411105496275659,0.157537722120098,0.510715379901961,0.169980277267157,0.152069450827206,0.618934541590074,0.239784450157016,0.867409620098039,0.660693000344669,0.12647871129653,0.90265012254902,0.310306713627834,0.902366727941177,0.853435920266544,0.104748774509804,0.163656556372549,0.231421975528493,0.312768075980392,0.32005022834329,0.241685291365081,0.146752450980392,0.675513174019608,0.120189950980392,0.152049150653914,0.730512327306411,0.614330336626838,0.492836896110983,0.131709558823529,0.488272438797296,0.817761948529412,0.158371629901961,0.258785232843137,0.339499080882353,0.236793667662377,0.336977251838235,0.900229779411765,0.798996629901961,0.901079963235294,0.122066482843137,0.676573031556373,0.104028799019608,0.97297243604473,0.178725941975911,0.279542870615043,0.440184230430453,0.809657152961282,0.279304534313725,0.504870291317211,0.853514443191828,0.48019910326191,0.166470995136336,0.287135015749464,0.265456495098039,0.704970894607843,0.142126225490196,0.246346866383272,0.663742454379213,0.816553691789216,0.191084558823529,0.748713235294118,0.115755208333333,0.964753394033395,0.098406862745098,0.970013053744447,0.614107782700483,0.827662808287377,0.374425551470588,0.642344665527344,0.937930238013174,0.71004233266793,0.596315870098039,0.713169741163067,0.152611825980392,0.376723345588235,0.976248228783701,0.278971473843444,0.263127854291131,0.940003757850796,0.288953504375383,0.236148056329465,0.398973906273935,0.971867340686275,0.265139890184589,0.904970894607843,0.867003676470588,0.142126225490196,0.624389139811198,0.345749080882353,0.566265465231503,0.194929534313726,0.669400562959559,0.264782475490196,0.114568014705882,0.180782781862745,0.155501870548024,0.145350796568627,0.102948835784314,0.538699894325406,0.762922459022672,0.187722883037492,0.318893253102022,0.511477451698453,0.798996629901961,0.777587651271446,0.865686274509804,0.624239050173292,0.866432578890931,0.569785219080308,0.978958877862668,0.275903799019608,0.705287873511221,0.122228809431487,0.153630514705882,0.738518449371936,0.14659974341299,0.568354064343022,0.901719515931372,0.406479779411765,0.191171204810049,0.705284328086703,0.268997790766697,0.672250306372549,0.758486519607843,0.362247242647059,0.820503264782475,0.511043802897135,0.799575626148897,0.709458519430721,0.158095894607843,0.77144245820887,0.977990243949142,0.650015318627451,0.158453010110294,0.659314862419577,0.12351899988511,0.140802480660233,0.131712505864162,0.824261115579044,0.411511948529412,0.89655330882353,0.22645559871898,0.229028799019608,0.0767314237706801,0.975477989047181,0.893941482843137,0.899920519660501,0.91898359410903,0.93924825331744,0.781393043667662,0.160179227941176,0.642333026960784,0.789614434335746,0.744004717060164,0.25538418339748,0.70421262254902,0.760301776960784,0.087109375,0.72719056372549,0.119301470588235,0.908892463235294,0.953377458160999,0.666842830882353,0.906027879901961,0.70375306372549,0.563833947275199,0.13578431372549,0.312366769828048,0.844274947222541,0.527573529411765,0.734815709731158,0.816310852649165,0.144983149509804,0.169889726825789,0.703555402568742,0.902450202493106,0.955730842141544,0.389232441023284,0.396383876426547,0.76148131127451,0.901631433823529,0.982582720588235,0.966337794883578,0.102948835784314,0.676585477941177,0.85265012254902,0.485674360686657,0.824126838235294,0.983189272413067,0.630121926700368,0.299749621223001,0.688143382352941,0.68187759997798,0.347238069422105,0.791099712895412,0.597313615387561,0.803627088958142,0.456930123123468,0.0955736048081342,0.166156035778569,0.845270343855316,0.895655314127604,0.355042925067976,0.87655294081744,0.977016015146293,0.698233899883196,0.689701663746553,0.131163832720588,0.899235385071998,0.356326593137255,0.744460999731924,0.637454044117647,0.609048985499962,0.486911833520029,0.983616727941176,0.327313112745098,0.143240176930147,0.948392980238971,0.0999617034313725,0.755364526486864,0.184653353223614,0.151899509803922,0.168193158916399,0.901838235294118,0.62355110318053,0.731087030148974,0.102152267156863,0.143868480009191,0.221424701167088,0.658235198376226,0.490801164215686,0.611037071078431,0.0948893079570696,0.921387197457108,0.251624372893689,0.119508616129557,0.165743674483954,0.940699199601716,0.253132659313726,0.429587001426547,0.654953765869141,0.496186319986979,0.131051979812921,0.685638786764706,0.654970894607843,0.23020788454542,0.128428739659927,0.193872549019608,0.798996629901961,0.114568014705882,0.776169002757353,0.807786081351486,0.850903799019608,0.155186611998315,0.348230698529412,0.972691195618873,0.694064016903148,0.85342347388174,0.175775714949066,0.136470181334252,0.237998139624502,0.900229779411765,0.137680726892808,0.478071384803922,0.221308210784314,0.902014399509804,0.794579060872396,0.533657672358494,0.692133421056411,0.349173796410654,0.971977203967524,0.901135583017387,0.89913449754902,0.724119986739813,0.810808323878868,0.430939229329427,0.259727328431373,0.861546295764399,0.425959747912837,0.164723280364392,0.958640618417777,0.581634581322763,0.378179797004251,0.0949532751943551,0.142126225490196,0.966037301456227,0.668446978400735,0.134206495098039,0.341138174019608,0.527286230349073,0.510878155278225,0.159418023801317,0.758057598039216,0.337814031862745,0.266352634803922,0.359689031862745,0.18772050446155,0.850882361916935,0.677574726179534,0.221496073404948,0.855861933091108,0.142792585784314,0.964705882352941,0.978159466911765,0.634957990459367,0.124923406862745,0.25804993872549,0.189744178921569,0.060694481344784,0.857609139236749,0.76929381127451,0.162339154411765,0.217243269378064,0.834938423306334,0.360518002977558,0.120624317842371,0.890831801470588,0.971634210324755,0.684608100442325,0.743159634459252,0.611141863056258,0.158371629901961,0.725345626531863,0.15680482153799,0.152599379595588,0.14227175245098,0.134389765122358,0.150610231885723,0.111856617647059,0.253185197418811,0.982459872376685,0.118068321078431,0.74881867053462,0.735906862745098,0.972951133578431,0.151845894607843,0.694270833333333,0.112403854669309,0.712004762537339,0.82674010033701,0.969864534864239,0.123117454379213,0.119715073529412,0.561319119322534,0.908892463235294,0.130790441176471,0.857092524509804,0.15573377422258,0.780035714542165,0.241390931372549,0.150830556832108,0.432521924785539,0.938925380332797,0.813727255428539,0.490407906326593,0.861605341294233,0.755420400582108,0.304488836550245,0.374118371103324,0.319296384325214,0.179220281862745,0.907689292758119,0.155632811901616,0.73861634497549,0.318045343137255,0.330495737113205,0.322817095588235,0.199006009569355,0.625757793351716,0.888005514705882,0.3825008317536,0.708189242493873,0.554860552619485,0.3562744140625,0.895036764705882,0.61907231947955,0.297087650673062,0.549065503887102,0.98334410424326,0.2080207974303,0.149655330882353,0.380209664737477,0.138572303921569,0.577973593917548,0.831125760545918,0.885817778344248,0.0750900268554687,0.965217934402765,0.904235600490196,0.147186309216069,0.691000306372549,0.844920034969554,0.28016237745098,0.729336936801088,0.62423843682981,0.144983149509804,0.0932989382276348,0.668679734772327,0.88719362745098,0.899176384420956,0.909129901960784,0.181571691176471,0.79943868599686,0.542983320647595,0.708468328737745,0.0767650978237975,0.596292458328546,0.701822916666667,0.161366421568627,0.60898878808115,0.576164215686275,0.104748774509804,0.910289495131549,0.697847732843137,0.837024539124732,0.541844970104741,0.888112745098039,0.744726188510072,0.889031862745098,0.47929510976754,0.348108149509804,0.0634159162932751,0.758057598039216,0.856372623817593,0.20095126582127,0.118619791666667,0.769161014930875,0.313807109757966,0.885528594372319,0.901257204541973,0.635692401960784,0.965222900989009,0.416357915541705,0.265625718060662,0.744780955595129,0.393244485294118,0.216505821078431,0.923338392669079,0.361770929074755,0.755284687117034,0.90030637254902,0.0928647658404182,0.330547153248506,0.801072303921569,0.835657695695466,0.884232973584942,0.36848264208027,0.814610350365732,0.818427501005285,0.906220589432062,0.137738366220512,0.877393535539216,0.655686516855277,0.704256184895833,0.144661458333333,0.639950980392157,0.579867763145297,0.664178795908012,0.102152267156863,0.546445719401042,0.637454044117647,0.874630064122817,0.74074795292873,0.110654105392157,0.246760110294118,0.592761948529412,0.948869772518382,0.144255514705882,0.760622346167471,0.365540986902574,0.138280247706993,0.977040877996706,0.0892094630821078,0.148936372644761,0.34060069065468,0.915394711961933,0.133817784926471,0.631709558823529,0.706437084721584,0.745974417293773,0.773821393181296,0.636534926470588,0.611769732306985,0.896156236237171,0.141018975949755,0.776738664215686,0.849065892836627,0.153303079044118,0.606839722278071,0.702633711870979,0.610678728889017,0.144970344094669,0.704586762072993,0.835408259373085,0.685638786764706,0.534400939941406,0.130507046568627,0.867555147058823,0.545943585564108,0.900130208333333,0.191951078527114,0.135738357843137,0.0951910131117877,0.646186379825368,0.235723368326823,0.275910500919118,0.619020290000766,0.202419864430147,0.263369227390663,0.117401960784314,0.636534926470588,0.111856617647059,0.269071691176471,0.0858484305587469,0.640791904225069,0.140755208333333,0.405637254901961,0.354650011249617,0.732077205882353,0.958555453431373,0.708256740196078,0.704750210631127,0.478815026376762,0.365313780541513,0.114725988051471,0.792621059043735,0.176708026960784,0.156050857843137,0.403374316645604,0.638235294117647,0.898904718137255,0.562516635071998,0.596024816176471,0.286842854817708,0.169638480392157,0.131852692248775,0.919236860088274,0.799363319546569,0.688396334180645,0.735991115196078,0.974006862266391,0.899088392070695,0.878457910874311,0.874655330882353,0.150421262254902,0.880361519607843,0.758890398810891,0.134206495098039,0.487938376034007,0.310942945293352,0.103836523317823,0.710561191334444,0.792892156862745,0.36890318627451,0.889031862745098,0.218633195465686,0.486425646613626,0.638680970435049,0.612320754107307,0.256728707107843,0.566269294888365,0.173986277860754,0.145764399509804,0.79891237745098,0.562967936197917,0.655353860294118,0.591972889619715,0.627083288454542,0.122066482843137,0.434099264705882,0.154114248238358,0.763671875,0.485608149509804,0.888112745098039,0.881456801470588,0.710636871936274,0.170358455882353,0.767154708563113,0.140755208333333,0.974549476773131,0.133057598039216,0.761023547602635,0.109834558823529,0.339499080882353,0.630111036113664,0.45339158002068,0.16655943627451,0.809841425278608,0.636811649098116,0.890912942325368,0.608087427475873,0.841888786764706,0.42869202856924,0.693437299541399,0.259150920194738,0.162415493235869,0.67679993872549,0.664810674330767,0.841425383324717,0.0833342608283548,0.984262144799326,0.173257446289063,0.109938318589154,0.676340379901961,0.839248597388174,0.71842394062117,0.324383215810738,0.202448407341452,0.140755208333333,0.899193004533356,0.74795867321538,0.635692401960784,0.630733759262983,0.698868306477865,0.744688550163718,0.97694829305013,0.499751850202972,0.192466945274203,0.194342160692402,0.617995393042471,0.964676741057751,0.141480569278493,0.76710324754902,0.733618119183709,0.682393526563457,0.850903799019608,0.819411977132161,0.921139690922756,0.771548043045343,0.133599494485294,0.34511599073223,0.613261234059053,0.138599171357996,0.134267769607843,0.785388303270527,0.270749080882353,0.946699927834903,0.142095588235294,0.174337469362745,0.673135196461397,0.380890685436772,0.193098958333333,0.206169846478631,0.231118235868566,0.646641390931373,0.588721421185662,0.902382046568627,0.747113994523591,0.445479224709903,0.151802212584252,0.152611825980392,0.0968634063122319,0.183175000957414,0.189117775711359,0.159054236318551,0.978429577397365,0.906019981234681,0.819088012096929,0.787117034313725,0.188736410701976,0.803385416666667,0.876141237745098,0.664335363051471,0.195572916666667,0.920483024447572,0.902112055759804,0.184853467754289,0.632199754901961,0.131595102945964,0.12022824754902,0.884321384803922,0.831280637254902,0.3377456964231,0.144873914531633,0.631552064185049,0.299593128877528,0.966647967170267,0.151407877604167,0.410929840686274,0.104748774509804,0.91352263805913,0.626516544117647,0.519316789215686,0.97542195039637,0.867936153037875,0.585723158892463,0.0783037671855852,0.104863664215686,0.261864276960784,0.175245098039216,0.941725906671262,0.263602941176471,0.161780233944164,0.106219362745098,0.856626263786765,0.825794923071768,0.260427512374579,0.925256467333027,0.195327818627451,0.831280637254902,0.88825704537186,0.928212169572419,0.86241574754902,0.405553675632851,0.151551729090074,0.75306276807598,0.190899314132391,0.368292116651348,0.626723345588235,0.901307947495404,0.893098240272671,0.344010416666667,0.145148468017578,0.942455575980392,0.104748774509804,0.139351923325483,0.735906862745098,0.442155531340954,0.187809723498775,0.205662117752374,0.131709558823529,0.293554208792892,0.108953737745098,0.228691789215686,0.887185968137255,0.696123639275046,0.094626288320504,0.671117790072572,0.85524923287186,0.128875612745098,0.0971277573529412,0.183347574869792,0.654780339259727,0.345749080882353,0.242501531862745,0.978048406862745,0.938564150941138,0.210348420984605,0.223334996840533,0.142126225490196,0.903056066176471,0.15198106952742,0.165476047291475,0.124280024509804,0.805844116210937,0.677267156862745,0.876740354650161,0.146548985499962,0.891819852941176,0.836715040019914,0.313284167121438,0.203233232685164,0.466538388121362,0.547915739171645,0.78773743872549,0.836007301480162,0.264259458055683,0.140213790594363,0.887328981885723,0.162795242608762,0.903656305051317,0.534764488070619,0.229390342562806,0.432552083333333,0.275091911764706,0.983438200109145,0.380780822155522,0.194702447629442,0.232291008444393,0.158852251838235,0.158371629901961,0.61532938340131,0.104863664215686,0.50750612745098,0.104748774509804,0.652077588848039,0.135688826617073,0.907383578431373,0.970319934919769,0.322817095588235,0.239860041001264,0.412844564400467,0.89356159883387,0.850065822227328,0.147996042288986,0.805849800857843,0.33187806372549,0.143897920496324,0.157284007352941,0.775122549019608,0.927549175187653,0.665725049785539,0.800004532757927,0.184320427389706,0.235668690999349,0.381521142697802,0.984342717189415,0.517267743278952,0.831280637254902,0.104748774509804,0.817761948529412,0.144546568627451,0.114820772058824,0.157284007352941,0.114568014705882,0.857092524509804,0.345761078479243,0.125376562978707,0.209877552705653,0.642111744600184,0.950343786501417,0.134172267539828,0.645013786764706,0.333799803490732,0.842767034792433,0.674024170520259,0.881456801470588,0.14195006127451,0.903462009803921,0.349478493484796,0.881456801470588,0.276455987668505,0.912671810972924,0.211568914675245,0.21751334994447,0.844975026448568,0.0971277573529412,0.805309998755361,0.593296425015319,0.279977596507353,0.728131896374272,0.661830991857192,0.131709558823529,0.768097746605967,0.195327818627451,0.967548624674479,0.946153543509689,0.673325856526693,0.65395585602405,0.730078917858647,0.941971124387255,0.804480698529412,0.144353170955882,0.979794491038603,0.168419781853171,0.251598148719937,0.257319401759727,0.49915033976237,0.313912036372166,0.428077607996323,0.875166186164407,0.164050173291973,0.0630245732326134,0.855514705882353,0.649339593625536,0.919240196078431,0.287297761206533,0.181825405943627,0.121686434278301,0.103844496783088,0.0933737062940411,0.189545036764706,0.142126225490196,0.132743566176471,0.441367953431372,0.851676551968444,0.980432652492149,0.921939864813113,0.460319608800551,0.139115920721316,0.162111888212316,0.28046875,0.821869360231886,0.857092524509804,0.970779718137255,0.9,0.976855648265165,0.191073309206495,0.154036458333333,0.227596507352941,0.123085171568627,0.619521885292203,0.335048540900735,0.0968635110294118,0.686894914215686,0.151263786764706,0.881847426470588,0.789198931525735,0.168589154411765,0.397984164368873,0.828255208333333,0.78905668071672,0.742596016678156,0.16500265084061,0.338521097220627,0.951445545869715,0.844042370366115,0.705412202722886,0.694886929381127,0.37724687164905,0.152690333946078,0.358163033279718,0.686758452770757,0.14227175245098,0.156350049785539,0.596394258386948,0.146446078431373,0.463385413674747,0.682470448811849,0.364437806372549,0.271949678308824,0.696344053979014,0.139378566367953,0.779684717514936,0.822792531929764,0.366659007352941,0.96249880323223,0.207645969764859,0.982529105392157,0.947820895325904,0.323376225490196,0.659211117613549,0.430132697610294,0.142126225490196,0.511909754136029,0.799081779928768,0.424090710808249,0.366276714848537,0.699383993709789,0.382674542595358,0.88719362745098,0.578065296247894,0.152611825980392,0.450042769488166,0.599573920754825,0.970816698261336,0.431585917753332,0.877771040972541,0.125919117647059,0.631014341466567,0.966300530527152,0.958283802107269,0.721099584242877,0.941282025505515,0.241390931372549,0.102152267156863,0.280708701937806,0.718986780503217,0.973337928921569,0.280752892587699,0.729729745902267,0.900558202406939,0.341207107843137,0.154518995098039,0.824257689831304,0.476462794285195,0.416827512254902,0.245719401041667,0.343115234375,0.902153822954963,0.129871323529412,0.159505208333333,0.781275177001953,0.184819240196078,0.550467218137255,0.393065688189338,0.506587009803922,0.678832529105392,0.764731597900391,0.157353599398744,0.898039215686275,0.832604666317211,0.972260359221814,0.451547570322074,0.310206035539216,0.416988836550245,0.120258884803922,0.581436097388174,0.368980617149203,0.707666973039216,0.624808517156863,0.396859681372549,0.491079861510034,0.924922688802083,0.799900832830691,0.429631221995634,0.736773517085057,0.351022024715648,0.05400577619964,0.23034392712163,0.689112300498813,0.624195772058823,0.707375919117647,0.357758465935202,0.104028799019608,0.114540130016851,0.973161764705882,0.867860562193627,0.495959966322955,0.980392156862745,0.589238664215686,0.170036764705882,0.388009045170803,0.54577044318704,0.331188665651808,0.296829044117647,0.155307904411765,0.246997549019608,0.144263174019608,0.948054534313726,0.886578847847733,0.132743566176471,0.177463307100184,0.171714154411765,0.326363357843137,0.717482054467295,0.967263554591759,0.637561274509804,0.338993566176471,0.943681544883578,0.714763611438228,0.391533212100758,0.758471919041054,0.357257065118528,0.690935441559436,0.826666618795956,0.725013732910156,0.233945375330308,0.902366727941176,0.978201593137255,0.974908088235294,0.146453737745098,0.353477328431373,0.904787071078431,0.977435631845512,0.11859946157418,0.617532169117647,0.928216029148476,0.208838743322036,0.152611825980392,0.721180231430951,0.133269425934436,0.361174729291131,0.619033394607843,0.365812653186275,0.974019248812806,0.58843443627451,0.125372434129902,0.880419757319432,0.290735386867149,0.194741133147595,0.957322393679151,0.135557077445236,0.637594784007353,0.648914052925858,0.846769205729167,0.143391807406556,0.943290441176471,0.361611519607843,0.196996711282169,0.249626608455882,0.871522207821117,0.828742277855967,0.750772767908433,0.168338536281212,0.982240445006127,0.134041221469056,0.860783999573951,0.266308204800475,0.665111825980392,0.398215379901961,0.111810661764706,0.154478065640319,0.206633982938879,0.871469490200865,0.775474294026693,0.891115196078431,0.658121146407782,0.285193604114009,0.640405348235485,0.897503303079044,0.313847680185355,0.27491574754902,0.881456801470588,0.734808888154871,0.582096354166667,0.663997844621247,0.867003676470588,0.657061722699334,0.180246629901961,0.588088645187079,0.67185697368547,0.943727022058824,0.667915134803922,0.104748774509804,0.874869791666667,0.638235294117647,0.178690248377183,0.947867838541667,0.136990535960478,0.362354473039216,0.262854123583027,0.126585477941176,0.451473505356732,0.0891217400045956,0.248337928921569,0.104028799019608,0.837618255615234,0.731510626101026,0.697358942966835,0.181578437954772,0.411511948529412,0.236097747204351,0.238082107843137,0.979702818627451,0.543745287726907,0.880523442287071,0.383591296626072,0.472471693450329,0.831648284313726,0.156050857843137,0.724819527420343,0.637216605392157,0.0639530406278722,0.845917585784314,0.876564609303194,0.659669808780446,0.362247242647059,0.637882965686274,0.389437806372549,0.124823835784314,0.761248195872587,0.11101349475337,0.790216902190564,0.137285150266161,0.339426586674709,0.249816176470588,0.120825674019608,0.191084558823529,0.93255495557598,0.266963225719975,0.0686179815554151,0.158371629901961,0.74701478247549,0.102948835784314,0.96275624293907,0.221991520301968,0.22335324754902,0.983250157973345,0.949402573529412,0.854572610294118,0.803767649332682,0.664238664215686,0.104028799019608,0.100473845238779,0.967059206495098,0.290579044117647,0.925567926145067,0.3925402024213,0.316924929151348,0.969227884330002,0.333498382568359,0.917806707643995,0.862859987745098,0.649890226476333,0.151669730392157,0.170358455882353,0.784643075980392,0.877624033011642,0.704863664215686,0.228378744686351,0.301409119250728,0.487982536764706,0.805692814845665,0.637454044117647,0.786951805563534,0.600666360294118,0.963809742647059,0.488155694101371,0.159954833984375,0.523069703345205,0.82425911099303,0.0569237353754979,0.656318933823529,0.113845959831687,0.950042470296224,0.369087009803922,0.92202818627451,0.0701902352127374,0.260429651596967,0.249816176470588,0.713405848484413,0.472862123975567,0.150284830729167,0.443467652563955,0.156862745098039,0.150229779411765,0.707038909313725,0.321377144607843,0.775971805348116,0.161879595588235,0.174669303146063,0.249139045266544,0.0530713848039216,0.383815870098039,0.840252371395335,0.756847426470588,0.145631199257047,0.58964568493413,0.662882711373123,0.250589767156863,0.111856617647059,0.353477328431373,0.163979324640012,0.658791695389093,0.271982230392157,0.916084558823529,0.597180923761106,0.478017769607843,0.140579044117647,0.708499983245251,0.623545568129596,0.13914675245098,0.418045343137255,0.921394692215265,0.684543504901961,0.883578431372549,0.803209731158088,0.763671875,0.147910204120711,0.258785232843137,0.134673713235294,0.892911305147059,0.641229128370098,0.118390416164024,0.576992693134383,0.689792408662684,0.552553603228401,0.300538665173101,0.508065257352941,0.86173215379902,0.957091417499617,0.264361213235294,0.816973039215686,0.104863664215686,0.492955480837355,0.176929653392119,0.139378775802313,0.621588927624272,0.624594056372549,0.757228956035539,0.144102492986941,0.479631371591605,0.656836700439453,0.0486157136804917,0.55519822064568,0.170586320465686,0.163595356660731,0.697932464001226,0.545909926470588,0.656740196078431,0.862859987745098,0.92811861225203,0.207127604765051,0.142792585784314,0.90866304285386,0.144178203507966,0.63595739626417,0.221155024509804,0.68422467100854,0.788325410730699,0.310294117647059,0.979273897058823,0.0995404112572763,0.83905611225203,0.904236602783203,0.221101409313725,0.329766516591988,0.28663449754902,0.788970588235294,0.251669730392157,0.746675124822878,0.13257781384038,0.394819416719324,0.423251507329006,0.974419088924632,0.692178284888174,0.470009358723958,0.460433989880132,0.623485729741115,0.913648897058823,0.887501840030446,0.948427132999196,0.0680984347474341,0.486937519148284,0.941229158289292,0.913610600490196,0.138610600490196,0.74483840044807,0.464139093137255,0.978615196078431,0.0890769958496094,0.78602175245098,0.152582639806411,0.711836601706112,0.851263786764706,0.133379289215686,0.959505208333333,0.532036575616575,0.516505821078431,0.131961388681449,0.788970588235294,0.158371629901961,0.794287932152842,0.965699797985601,0.927910434498506,0.139192708333333,0.342478434244792,0.794232701320274,0.38973321353688,0.898008578431372,0.100022977941176,0.315730884028416,0.686999421961167,0.124823835784314,0.463638963886336,0.904852893305759,0.390030056822534,0.499523701387293,0.768875421262255,0.241390931372549,0.609855083390778,0.122066482843137,0.885799632352941,0.130790441176471,0.686427696078431,0.899237359738817,0.976738649256089,0.370884554993872,0.117674404967065,0.142126225490196,0.0551654142491958,0.834648685829312,0.732851574467678,0.964557722503064,0.907574582567402,0.119738051470588,0.102948835784314,0.894796139586206,0.337276054831112,0.464423953785616,0.248727671305339,0.192462696748621,0.713403799019608,0.67359068627451,0.588939741546033,0.718126543830423,0.217302389705882,0.142532169117647,0.832543406767004,0.123651960784314,0.574839752795649,0.850762520584406,0.753477328431372,0.111937040441176,0.738426776960784,0.682937517353133,0.658609068627451,0.355322864008885,0.962916475183824,0.966214767156863,0.157111074410233,0.911072959151922,0.361864276960784,0.657482999913833,0.654970894607843,0.969087009803922,0.557243047976026,0.330238970588235,0.664047181372549,0.636588541666667,0.485638786764706,0.581916958678002,0.12543296065985,0.523244700712316,0.426817501292509,0.150069008621515,0.123783335966222,0.118742340686275,0.856066176470588,0.23529998180913,0.453936887254902,0.951485951741537,0.61553799498315,0.126393995098039,0.68317024380553,0.756520230162377,0.795023600260417,0.70980842440736,0.263560485839844,0.889206351485907],&#34;type&#34;:&#34;scatter3d&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;colorbar&#34;:{&#34;title&#34;:&#34;cluster_num&#34;,&#34;ticklen&#34;:2},&#34;cmin&#34;:1,&#34;cmax&#34;:12,&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0.0909090909090909&#34;,&#34;rgba(241,120,195,1)&#34;],[&#34;0.181818181818182&#34;,&#34;rgba(233,224,206,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.363636363636364&#34;,&#34;rgba(147,61,182,1)&#34;],[&#34;0.363636363636364&#34;,&#34;rgba(147,61,182,1)&#34;],[&#34;0.454545454545455&#34;,&#34;rgba(101,150,52,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.636363636363636&#34;,&#34;rgba(115,210,176,1)&#34;],[&#34;0.636363636363636&#34;,&#34;rgba(115,210,176,1)&#34;],[&#34;0.727272727272727&#34;,&#34;rgba(245,232,111,1)&#34;],[&#34;0.727272727272727&#34;,&#34;rgba(245,232,111,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.909090909090909&#34;,&#34;rgba(67,99,194,1)&#34;],[&#34;1&#34;,&#34;rgba(147,213,95,1)&#34;],[&#34;1&#34;,&#34;rgba(147,213,95,1)&#34;]],&#34;showscale&#34;:false,&#34;color&#34;:[10,4,11,2,3,7,8,7,2,4,7,4,5,1,9,10,7,7,1,4,5,7,11,1,7,9,5,12,5,10,9,7,1,4,7,5,1,1,9,1,3,8,7,9,10,9,1,11,11,4,1,11,10,11,4,2,5,7,9,5,9,9,11,2,3,5,4,1,4,5,9,4,2,1,4,4,9,4,1,6,7,7,9,11,11,12,6,6,9,9,7,1,10,4,10,4,11,1,10,7,3,5,9,9,11,4,1,9,12,7,4,1,9,7,9,5,7,3,10,4,5,2,10,3,5,7,7,7,1,10,4,1,9,11,4,5,5,1,11,8,10,10,11,3,4,5,5,4,10,5,9,4,9,1,12,1,1,12,4,11,4,7,8,11,10,10,10,10,10,8,7,7,11,4,1,4,7,7,10,12,1,4,1,12,7,5,4,5,7,10,4,2,4,3,10,5,3,10,1,7,7,2,4,7,8,4,4,1,10,4,10,5,4,4,7,7,4,4,7,10,4,10,5,1,4,5,3,10,3,2,9,4,9,5,9,8,1,7,7,9,8,4,4,7,4,8,11,5,8,10,6,7,9,4,4,10,3,12,10,7,4,7,3,9,2,4,11,12,5,6,9,3,3,10,12,3,10,7,9,2,9,1,5,4,1,10,1,9,5,3,1,3,5,9,9,12,4,12,10,9,9,4,2,10,9,4,5,2,3,8,12,8,2,11,8,10,7,2,4,10,4,8,4,5,10,1,4,4,12,9,11,4,3,1,10,7,7,9,12,1,7,5,12,4,10,2,9,2,5,1,9,8,5,11,1,7,7,2,12,11,9,4,1,5,1,12,7,4,4,10,9,9,10,11,11,7,10,11,12,1,7,2,12,9,5,7,7,1,10,5,12,11,4,10,4,1,12,7,7,10,4,7,10,8,9,12,2,10,10,8,11,9,1,9,9,7,7,10,11,1,10,1,10,2,3,9,9,5,9,10,4,9,3,4,1,9,2,9,1,7,1,2,4,4,11,4,2,11,7,1,5,5,12,7,9,4,1,1,10,10,4,7,10,10,4,10,5,8,10,4,4,10,7,9,2,7,5,9,9,4,3,4,12,1,7,10,7,1,4,12,7,8,12,5,7,12,11,12,2,7,9,11,12,11,7,5,11,7,11,7,3,5,7,7,5,4,1,10,7,8,7,9,1,4,11,7,10,3,9,5,2,4,9,9,10,4,8,5,10,7,4,11,7,2,9,9,9,1,1,2,5,9,1,1,5,8,4,7,12,12,1,11,1,4,9,11,2,7,1,7,1,4,7,4,11,11,1,10,12,12,9,1,4,9,9,9,12,2,5,4,7,3,7,11,12,9,7,10,11,5,6,7,5,7,7,10,4,12,2,7,9,2,9,12,7,7,5,11,2,5,7,10,4,7,10,1,11,7,2,10,5,5,4,4,2,9,9,12,5,10,7,9,4,4,2,10,7,6,12,11,4,4,5,1,5,7,1,10,7,1,4,9,7,9,6,12,4,6,9,1,1,12,7,11,9,7,5,3,5,5,5,9,4,10,12,5,1,11,6,7,1,5,4,7,7,4,5,1,1,7,2,6,9,10,12,1,10,1,9,7,1,4,4,1,7,10,12,11,7,1,7,10,10,2,10,1,10,12,7,1,9,1,4,8,7,7,7,1,5,12,4,4,4,9,8,3,10,9,10,7,1,12,8,5,1,9,7,9,4,9,9,10,12,1,2,7,2,10,2,8,12,5,4,8,10,9,11,11,9,9,3,9,5,1,12,2,12,3,10,5,1,6,2,3,1,3,11,7,7,10,3,11,10,9,1,8,7,12,4,10,1,1,4,9,11,4,9,7,10,4,4,4,10,10,8,5,4,7,1,5,1,4,9,7,5,7,9,5,11,6,10,7,1,1,5,7,7,9,4,10,12,10,7,11,9,8,1,4,7,7,8,7,2,7,9,10,5,10,11,9,10,9,12,10,2,5,10,11,5,9,10,2,4,5,3,1,5,4,11,11,7,1,4,5,11,7,8,10,4,12,7,9,9,6,4,5,7,4,8,10,4,4,12,11,5,8,9,8,12,6,5,10,7,7,4,4,7,4,7,3,4,10,10,9,4,1,7,1,12,3,4,7,1,9,7,12,7,10,5,4,4,9,12,5,12,1,4,6,5,7,8,7,1,11,4,11,7,1,10,11,10,6,4,8,1,5,10,3,4,7,4,4,6,1,8,4,9,9,4,10,12,4,12,1,5,4,8,8,9,9,7,10,11,8,4,6,1,7,6,2,7,9,1,12,1,8,8,8,2,4,4,1,9,11,7,10,5,10,9,1,9,2,5,1,4,7,9,4,1,9,7,11,10,10,9,4,12,1,10,7,8,1,1,7,1,1,1,5,1,1,8,8,4,5,1,3,4,3,4,7,9,7,7,2,8,7,1,1,3,1,1,10,9,7,10,10,7,10,1,6,4,10,12,1,11,7,10,1,8,7,7,4,1,7,7,1,4,4,4,1,4,5,4,2,7,2,11,10,9,10,12,5,11,4,10,7,7,4,1,9,2,8,11,7,7,9,10,1,1,3,8,12,8,7,9,1,5,10,2,4,9,1,4,8,4,2,1,2,4,1,7,7,1,1,1,1,1,5,4,4,9,11,8,12,1,7,10,7,9,7,1,4,4,10,5,4,10,10,10,1,10,4,1,7,4,1,10,10,4,9,7,4,1,12,10,2,5,7,8,1,1,1,3,8,9,11,5,7,10,3,7,10,1,1,10,3,10,1,7,11,1,4,7,10,5,3,7,7,1,5,7,4,5,1,1,9,10,11,4,7,4,5,7,4,3,9,10,10,7,9,9,10,7,10,9,5,1,7,4,8,10,5,7,6,5,9,7,11,7,10,1,1,3,10,1,4,5,5,7,9,7,4,7,12,10,7,9,7,10,8,9,10,11,4,8,4,4,1,8,10,11,7,9,7,4,10,4,4,5,7,7,4,4,12,6,7,8,9,7,7,7,1,11,4,9,9,7,4,5,9,5,4,7,8,10,12,4,8,3,11,5,2,1,9,12,7,5,12,4,8,2,4,2,5,3,11,7,4,7,5,2,5,5,7,1,7,9,9,11,7,2,12,1,7,1,4,7,7,10,9,1,9,4,4,11,3,6,10,7,10,7,4,7,4,12,2,5,7,1,3,5,1,4,8,1,12,7,9,4,12,7,8,4,4,10,7,10,10,7,10,6,7,1,7,3,3,1,10,3,3,9,5,3,4,7,5,11,5,5,3,7,4,10,1,10,5,7,7,7,4,7,5,7,2,12,3,8,11,5,4,7,1,12,9,9,9,7,4,4,4,1,4,7,10,4,10,12,4,2,12,12,12,5,11,9,10,1,1,11,4,4,1,4,4,8,4,2,8,2,7,1,7,9,12,4,9,7,3,9,11,2,4,5,10,8,11,2,9,11,8,1,7,6,2,9,11,10,4,2,9,9,3,9,5,5,4,1,9,4,1,9,4,7,3,4,2,5,4,9,7,4,8,5,2,4,6,1,1,7,9,3,9,5,4,5,4,1,4,1,1,11,5,9,10,4,8,11,4,4,1,10,1,11,7,7,9,12,1,3,1,4,11,2,4,11,7,7,5,9,10,7,7,7,2,1,3,1,11,9,9,5,10,11,1,10,3,7,9,3,9,5,11,8,3,5,1,9,7,7,1,7,2,2,11,9,1,7,9,7,4,9,4,1,1,10,4,9,2,4,5,10,1,8,4,3,7,9,4,10,2,4,7,7,3,12,8,8,4,10,8,5,7,12,1,1,8,12,1,7,11,8,9,1,7,10,1,4,3,4,2,11,4,11,7,4,7,10,9,8,7,5,7,5,3,2,8,2,2,10,7,9,1,4,12,3,1,2,10,11,4,3,4,10,7,11,5,4,7,9,7,4,5,8,5,9,5,4,3,9,12,12,10,7,7,9,4,9,2,11,3,11,9,10,1,7,7,9,8,1,7,4,10,3,1,8,2,9,2,7,1,10,4,1,4,9,4,9,4,7,5,1,6,4,11,7,4,1,11,8,4,7,5,4,11,3,1,4,1,8,5,4,11,5,1,7,10,1,2,4,3,1,7,4,9,1,10,9,9,4,5,7,12,1,4,1,1,1,11,5,9,3,5,10,5,11,4,7,1,1,1,4,11,1,4,1,7,7,10,2,1,10,9,4,7,9,4,6,5,1,9,5,9,7,12,9,5,4,4,9,5,3,7,2,4,9,1,11,11,10,9,12,3,4,11,9,9,7,6,2,9,4,10,7,1,1,4,9,1,2,7,9,5,8,9,9,7,11,10,5,9,4,2,3,4,11,9,4,10,12,5,1,5,9,7,1,8,3,11,4,5,4,8,10,3,12,7,5,10,4,4,7,7,1,1,11,10,4,5,12,4,1,12,9,4,1,10,1,5,9,9,7,8,4,1,1,9,1,11,1,1,10,2,7,5,11,7,4,7,10,5,4,3,1,4,1,10,1,1,7,8],&#34;size&#34;:[56.9187659936069,31.856167203944,25.2033423573737,63.0056105861941,83.7657263016526,36.9943486181809,66.1857797498795,42.5771272343941,54.9105393175922,43.8461793288181,39.6918971093713,41.3443817702603,28.8432477746254,43.6900249521182,82.6839724020353,77.7705331943022,38.536150393918,38.8056984185615,41.616884246219,34.8032691086346,36.4819927402145,45.9770155951321,32.8852121133548,50.5294820937563,36.1517666388341,88.552389553924,20.0283163421831,74.5895492923276,47.4769730202963,63.0033018215454,90.1949341360882,34.6987667229528,40.2357670650594,29.646394449958,38.004869369595,28.892962322623,46.7758330342488,47.0536838439246,93.7601514670041,43.838664749153,76.1131329614042,73.4638502405817,38.9180649255592,92.0686933908291,74.0623131806315,94.1956671322402,43.4580793010213,25.0706868874525,26.0993909776495,31.1055364935509,33.0467541879036,40.5608427328046,84.9799111337268,41.7141678838704,39.8539831088219,72.0469111946707,53.6475943740815,39.3768952643844,87.3098298335245,21.7527461702469,87.7997314775823,89.4891677242057,35.0616978193771,61.1926802837165,90.3531941195187,42.5003157482527,33.5509456907657,49.1417022068654,35.9015877865602,39.9014473029013,88.9662730531734,28.3737888764967,63.2532469960768,56.118757654578,31.2870800388043,49.8360667222632,83.6186908933085,30.7859000225937,40.4428026896943,32.1726511145835,36.8012342118704,29.3016653558943,95.5257885595408,30.0467086925312,33.4667353147669,72.4824522611754,51.904452150519,55.1690900379921,91.1997250124555,79.6781980588094,31.414636399929,42.494468198652,69.9167489237707,36.4418264925003,80.0143788164416,29.297377747117,32.6165353574453,48.1627939696174,75.5729153042191,36.908821920242,96.3045766892767,39.4659550715977,89.4197790493357,86.8703254901353,33.2468225527357,53.8400914895234,43.318374326203,85.1263282936492,78.680593756693,40.8077710409779,34.1027531685565,45.6793877999858,87.2251116758956,39.5472318883459,92.1823896777385,39.0483956135822,40.3856911669453,98.8201894215211,57.2594685426505,32.9525865146368,40.2063063290866,52.2650543736825,54.7467418053897,80.7849908366969,26.4190291896121,44.8851671373825,36.9954627919859,39.3897046070309,49.7129554264426,61.3970878955456,37.5924676748474,46.1344382942537,93.8588556257677,31.2954613779994,29.9809613652402,40.2887752470408,40.2775036996292,47.3153880821951,43.0051365897407,68.8858329558745,77.6278839182301,84.6699196933121,26.7040924274688,69.945746413031,29.9869339886676,24.6758504223466,39.971722985194,32.9035192724407,80.985483484541,35.8449541349687,87.7031605553046,17.1913889142525,91.1276847515667,43.7410942112245,80.0714577475699,47.2789695748989,49.7138147344696,70.8053350204423,28.9300785378265,35.9850936473206,49.633012568019,50.2258500759349,72.9729326850627,39.4830022302676,83.5998181163939,84.7409882294562,64.6420030472759,79.5807597676498,80.0792366989024,66.2244930241411,39.5369075871431,35.0440125474142,30.6837310019667,45.58801475374,42.905972509585,38.7525694804466,42.874986792177,39.5570728864543,70.1978077099655,72.7774389511554,53.5981358931557,41.3443817702603,47.858067190201,68.2155633282182,30.3587191420688,37.1591051109686,37.9500575060365,34.2605922291155,38.1802245460339,74.716438987671,38.9751525617144,69.8646015644908,36.1883436298504,99.9399791527953,74.0623131806315,31.8248559881696,95.6676537564286,76.910907747217,38.8145648018564,39.3206215134257,41.7703047395758,59.3510276404694,45.8172134639533,41.507543502117,73.199924409802,36.0638929437683,23.6239170548745,42.8045042088046,58.8375492492822,37.1433577695078,75.6709865552958,32.5166378613618,33.2155479677146,34.6202791361088,36.2726045994656,28.349566494931,39.810594469064,30.1336486515899,28.054238620126,82.5701950887354,41.3005179056731,60.3223830829842,40.1724472563943,41.3343010008905,32.7683441324786,25.9943857896131,81.0168371286166,73.3758573562874,71.0755388295836,55.5855718136753,79.6547165620845,28.9620617816788,95.5911104373463,16.6537632136517,94.2750012655416,69.1867716731882,38.5672757051376,46.9303380694989,37.9766478116138,95.2892101975796,64.0445105262167,33.2929834301853,38.9119426453091,31.9476657244478,28.6215400708643,70.5108758550934,25.2056193486742,33.7065716549218,66.5566969076368,79.2352908855787,51.5341489409,38.942872720185,89.6549579737598,30.4947750914743,30.9448267936759,76.1881827067883,90.0254553925293,68.0088001361056,70.6598933806562,39.8352950177582,35.7048213080775,32.0633004293407,97.1488080971235,79.6138030052196,73.8727229000076,30.1336486515899,31.1049302058363,74.9193000992384,18.2356501758924,43.1229864976531,88.3797353035964,97.17698607774,77.3235209218885,78.4019000218509,74.0033563314567,90.9594984955842,63.8059626519158,40.0912129201774,94.2496161535308,52.6492236291653,90.4656344103245,45.9146022583299,44.1868922890739,41.3443817702603,57.1161943152861,81.1807955967668,56.1000607366171,95.7231837498875,38.3873473776285,88.4230244448966,45.0617118383393,100,36.9933012293424,87.6567473017146,88.7108291220598,69.6085484207735,31.060289156446,68.5222630149348,69.832414414088,87.9079254910786,87.2941233708701,39.8302727743494,59.0809089316713,82.7201412317495,84.8086507148989,43.1324712860601,53.8647788065767,55.2757278538266,86.1315683319954,68.2134799715365,74.9193000992384,59.7879412285679,66.3812881082321,38.2715688308708,68.2134799715365,72.6119633535042,27.9553472858736,69.4331972660571,10,64.8011220253524,30.8958709758243,68.2134799715365,19.8814620854492,36.4743802289966,85.9214201031162,47.3761517467566,26.7587734718828,36.2303692016736,69.2014484356188,87.3111090024097,32.8368545049529,32.8494614731337,92.4068469861214,53.2788116366939,56.56596342233,39.2558676734466,37.3698397452809,89.0536843372094,68.9575126893685,42.0801335700878,46.705665677311,31.9839166077456,62.7264017400892,28.9325772287524,83.3312045937998,62.7315894138295,91.3825098249069,67.0430569114938,39.8135819646614,46.3670974789968,90.1930340550432,55.9409255671905,34.1935272393103,32.0262192779857,54.4120974153679,40.2821668084475,46.9835802426039,71.7828994104552,66.8173123211407,31.9278463454962,88.2579707799,27.7317681406061,44.1815410130577,33.7505363585408,46.229216398828,76.2766878296865,31.797942830554,21.5393969811003,31.2185958510509,79.5206927838025,91.3983175966646,87.3098298335245,78.8635861666262,28.2585730400888,19.2938067148765,35.0440125474142,66.718443550318,28.9645952230722,58.9783742302736,37.7554482028638,39.8865101034755,59.106759379601,73.1295765106061,92.3316962798351,36.08401959276,40.2085172666429,50.2488720516989,45.4421825193962,77.3002957185661,29.5171422103096,58.5687214437456,32.4865764785319,48.7555269127499,76.7800576824681,40.2094663931376,46.4905507779149,70.9988651788383,49.4488618323842,29.3016653558943,82.1937505348574,50.5506332721858,47.1969960252064,83.5642113528576,59.5258359497074,82.6839724020353,72.4683478194444,55.5586266215607,79.8882242432112,79.250587219595,80.3021219316544,31.3619638837854,77.633591839199,43.9656798317041,87.6871986001102,89.3425558502412,39.8165734993912,33.420568204518,85.9893889532762,31.7812581492049,46.0967816013391,72.9371055798852,45.8964851996218,82.1800286442393,57.9776344471023,84.5928709777772,95.299778866298,93.3733919611222,40.1877720036184,94.1685330758616,77.6389009306547,37.2559373233342,78.6780547440823,96.1707115514052,19.9349887388338,43.76774538235,87.396081190134,63.9732604380312,90.1799465693766,55.1457437129251,38.827430761998,46.1458974524055,74.7285178044588,35.04906292547,35.3891249412231,31.8368187843586,48.9171724378385,51.2042844115176,46.9649308715,48.15888473354,52.5619345637072,16.6537632136517,32.6350360466895,77.550908568662,39.3115682854331,90.3778616935709,33.0328591891202,38.7775897125493,46.1145736143421,69.8205383896073,68.8264847983298,30.946757934257,39.9955143112369,77.3802788986744,82.1390806154678,39.810594469064,83.3819792051551,29.2205870834,77.7421645561862,74.7397994497017,43.8569457235178,35.7919495742784,85.7299936363448,36.8579563065353,82.8502799216988,54.4782689908507,40.5339345718744,36.8611630991708,93.8838572465228,96.7982499429364,43.2193156813333,88.1154279314869,46.1674329229532,63.0234769053068,54.2967296066002,33.1009241427773,80.5940171706056,48.9534139719375,43.0095250027297,41.0716566893533,68.6780392626756,33.3890658959927,66.3891603774532,67.6360043116695,34.6527954061693,48.3213087143656,66.2639970456377,24.1431375777864,66.9789010720437,63.0871206802536,37.6916651474863,86.872460241296,26.6381154267476,67.811499395301,31.6109852808605,35.3479009979185,18.2356501758924,33.4151895424871,40.3885570010864,33.8603116227663,47.5879780610843,82.8269241777927,45.7583637736599,39.6581035681216,38.6233903630243,20.0283163421831,17.9421891115196,41.4553454447604,80.0785592388877,43.8275722815551,68.2134799715365,40.5339345718744,85.6992661796754,42.3324377024531,24.3404341749982,32.4633801584888,47.6235619129898,82.1713134498519,93.0298551075449,90.8935786694799,48.9041580743981,57.0493191995279,31.6137829024108,88.1699277198305,84.8635351609718,82.8661214689609,34.4621974490396,59.7922994351135,35.7384179764385,81.1620891729165,38.0286913373326,42.4054391027737,33.1017132360572,27.4472166190516,68.5923227429198,85.071641016436,88.8078008934168,82.0471039974757,54.2874573601304,45.9752666681744,63.766841825704,36.984944403503,85.2818906762887,53.2646559571745,46.8837278037398,31.6457750602107,58.5728863464635,35.2799469114842,47.5816289626529,69.5266821692427,71.1215934534746,38.4012224593103,33.9927606268592,44.7888469895202,19.3787197258279,92.5655156009253,29.8750376227636,55.1526893842612,39.5426417624732,57.7119583487908,37.9810891859866,35.1269258744025,28.6580310388045,38.2561050817768,28.2846996811125,31.5557447469566,41.1074838641711,52.0089848122844,76.9712405477662,61.5387090731189,75.0966292972209,78.0032638299062,46.232434055337,32.7565242380115,91.6331100004836,90.0795627060293,89.7512231580822,65.639952329609,58.4989712665178,37.202890421393,30.450802866712,38.1458749276647,77.9960362027484,35.0440125474142,30.3158943094942,73.3103682200947,92.61132883442,33.4978972567397,67.9664751809967,29.8721936556501,25.866916339477,28.8724657273974,39.5767593396449,53.8647788065767,35.3571286050103,38.6900689192747,69.9487138000162,35.5547619648934,73.3103682200947,77.1843351148755,31.5737321704038,87.0722642170507,51.4314961645173,88.3020056808561,72.5695155530554,28.7669176416523,39.5797945387897,34.3627490627049,27.6557495083161,52.5105699430376,36.7944548065485,39.6581035681216,73.0080516885308,32.8060768725084,38.8447633062703,73.2355700499885,39.0412469758386,46.1688710282199,34.678210881314,64.7109522923873,77.6389009306547,27.1881327331633,39.6399725987805,43.0777523573689,32.3403972618152,53.7503064491077,88.0003220395691,82.6573464406678,72.7800061680532,20.0283163421831,73.0438222458536,29.3016653558943,95.0286164770028,36.6785686134279,42.6288077953106,61.6402579476284,72.6356161651588,49.5608040215499,37.5762845597391,69.1744977419272,34.1818910731412,28.0932443658819,43.1388353223177,39.3547084489027,46.2558970974048,24.5319278968076,44.4518623052422,43.0659722796949,79.9217406164039,42.6716150785509,51.1410864732294,30.8582099652163,90.2820814662981,28.3897952621485,91.4083112287149,51.842120397229,66.8166610458469,52.20145401941,46.0748885282856,88.2255059391386,46.3837237670254,38.3157700326611,60.7804257387439,40.2966809435653,33.0916030088763,95.1512272685959,49.5287711938643,32.4435306079139,95.0099630841764,33.6813637076187,34.3496472311539,48.0682332121551,94.0328627939686,45.0303554086552,85.2091600371253,72.4683478194444,24.5319278968076,39.768544383885,28.8812301051869,41.3331099791079,40.4718667550005,46.6479873876695,39.809720902203,29.7215212000102,42.3534317203267,38.987528881502,30.1658993138691,16.2838967874633,38.7664257940904,51.4186915922255,42.916922058051,52.042957154787,36.1114609539988,82.6573464406678,75.8981448594302,68.9338695577039,40.3922685285925,80.0189238154547,41.5207165756082,93.5173266911089,48.7954703117751,46.3212346442588,30.74420417978,31.060289156446,53.7156812469964,37.9379278518916,62.3118442280158,72.2155304386921,31.1224461127955,43.0881911470857,46.6475971239028,46.7711771331927,72.6283175223913,75.7723292251277,55.5855718136753,77.8439094679019,34.1050876478547,75.5732306351141,58.7244713326648,39.6417197325027,52.6759176116132,96.1863545021833,43.2294677448735,32.7975033263189,60.5836387512177,35.3353700768528,38.0881009871875,36.651943835944,57.3537318667531,42.5003157482527,71.37289497566,37.1817848398944,39.810594469064,22.9071565073781,93.3245621920603,68.2134799715365,93.2729449166895,85.3926179222578,91.7015927954327,69.7939815113334,33.1125027338983,42.5114046990198,65.1412917745186,71.0012664605131,38.7258552849263,47.833869304581,79.3231021830115,26.3599913488669,77.8305864590271,31.3715731192572,87.3098298335245,89.4288097138985,72.1834580553641,73.0687556714278,47.7803856192093,68.3436227876686,37.6537846309196,52.0808619409688,76.1850452061672,63.7524637153368,62.0087189472212,65.6696309175853,29.5171422103096,28.4633490834772,65.302339229438,84.5548924426074,89.5876651734002,35.2835473106166,30.7189263311108,79.4603769754657,86.7772214666973,97.381815065102,91.2979372501482,16.2838967874633,50.576432464917,72.4231630192528,64.1932415867537,69.3528340070636,97.3722645363317,69.4271462103372,37.2918044716356,45.3040464167588,43.6489308878152,54.0746940018852,82.5824713877638,46.028090512506,76.5475977732011,34.1403102759633,27.6964652173293,41.9067855639351,78.5278551803247,92.8533321691553,27.6347097368211,82.1955875915076,94.1052927963224,46.574519014885,64.628530242298,34.5711493569994,73.6827900243444,45.9781815290272,75.4732824409539,43.0095250027297,50.6131687927459,56.6780769786556,95.5454170720723,26.1119340161126,31.2547664217704,85.9338192648945,28.3001387775703,74.5679201556902,33.0080863538825,33.2929834301853,37.5748687219313,81.637804774321,69.1942892822027,66.967825509608,16.6537632136517,29.7568709911519,43.6639738881382,45.4031260581535,51.4897198763252,40.4495462303054,22.504775343214,84.4952726185826,47.6068093324307,17.8274314206784,41.0541473285743,84.673659651436,38.1179695362612,34.2581923576551,49.6156502003245,57.5580910786326,31.9410861343137,47.6972898000367,44.9342423882033,31.3000210014578,35.4604100584369,43.1163497503122,82.6573464406678,29.7215212000103,78.9021543803193,65.2519909554809,80.0440087781375,39.549958633567,25.9701665940872,93.5764218805715,64.2449194317018,57.8778594481576,34.0489832618998,35.9524741704611,44.7239612161531,70.7079947130658,36.8622461437995,63.5561117354158,43.2739483432077,87.6728860037756,73.6189595439803,53.5848708945803,67.687806168431,31.9977614307539,94.1292495875169,83.9917302669877,89.046498581231,61.5810069730042,76.7743770604635,60.3109601899746,31.796233581109,79.0288155861162,37.0470666442053,20.6623548295426,90.5095529424808,62.1936631808795,54.0141476322056,23.6624056349814,24.5319278968076,94.7670848071859,46.8049746787548,25.866916339477,43.1442771480238,47.1541339351166,40.3011842280895,35.6975365237129,51.8263105362648,42.9836210711146,32.5672900452186,30.3230254675438,40.0437164826782,78.1389317092118,73.0890744577736,36.5828901305097,69.7597652539766,38.0919229814851,91.6905210457988,96.0113613329937,49.8977486975241,33.4294827092017,31.6010181295021,40.8389252877069,12.0423336156435,62.5037016980798,78.0114504550593,35.4362708098783,38.8596484148151,64.6001048474065,32.499619812302,17.6067809250262,67.5167480021985,93.7471273191133,62.8309058145462,57.9257397425237,45.6662495814224,27.1881327331633,76.4413076187316,37.1987610351849,39.9557358202417,31.5328710003909,33.5618904166468,39.7022738496563,30.1336486515899,47.4578208816578,96.8206697049384,29.9226733406934,75.8361313619242,73.9125856034333,94.1292910930852,36.3343599406933,46.8230722207925,32.4022414117276,57.7822538611348,66.2598880814227,94.1064814155176,30.7318225499259,33.4978972567397,37.9456756044076,87.3098298335245,34.5712435105705,72.7774389511554,38.287228965372,76.7574104058826,38.5784729812596,33.6995285221044,51.4422898755915,92.3114950113527,68.0694733380274,51.4454951361421,72.9058944371002,51.280356875694,41.6213737768007,23.5849585077745,45.0755272731767,42.0325296080961,73.8977306491017,39.3042774423698,48.8683524184068,21.6342887907362,44.6296023804952,30.6960563451167,44.2579857215951,43.5582302874886,83.6538722944096,30.8156947530391,70.6829008364354,45.4468700719301,46.7862375609796,68.0851815242772,41.2560901468523,38.2275163109402,60.7608295218623,96.8968177635685,41.3320339333208,36.7213054904105,46.2693768664043,33.7381370574821,39.4572990713933,56.1880089641233,71.234946605633,18.0490895928363,91.6669858042377,87.6597379311217,25.872747175426,69.8537443763604,70.6466576309712,35.6593066918261,60.8916307340001,52.3664425533951,29.5171422103096,25.6060176295772,59.0223352777813,66.1857797498795,87.4578105555615,87.5549366496357,37.201018492405,79.5595757016286,48.0135359067509,65.1419074636623,17.8086309651273,42.3659332184014,46.0735072842548,35.603977819309,43.1105621261169,68.2093617277628,28.7669176416523,88.7983099418508,52.4786867025345,69.4764362315821,37.4775008718496,66.292747120623,68.3300415702854,66.3997144913665,60.2167236599448,43.2879075850897,16.8326187510538,51.8263105362648,82.2785267898359,15.04437592232,33.3704278066037,75.3664523310748,40.2476926733734,81.4924123005269,90.188482927691,42.8045042088046,90.7251109277469,59.0847527233563,32.2846096866098,50.5346564139853,47.9822687035925,44.0675214388588,89.0947944884021,49.412929396381,51.0311734606579,88.550296726173,28.1229576172754,29.0008692791517,75.4985551536573,79.4655459508082,88.4157877296906,49.5040239862258,64.8052297534535,60.1242353952908,83.1478811142829,33.4190900213074,66.9105249136744,42.852043753597,47.826620593848,38.1348525529435,45.1259903142087,41.7447741491551,45.4258406594171,16.6537632136517,39.0162326283341,43.0095250027297,64.2056453970164,65.0331368291831,29.3299760533511,36.5372826142111,37.6069557645246,91.8718812283652,30.6331773590146,78.7211416676073,48.4591303566106,31.1332525680291,93.612758038313,26.5119591125118,38.5441657041414,54.36325272589,77.6796345197931,36.849247936889,43.78032296236,46.8336549916545,78.3309127036078,52.5517553056629,42.5073755947218,67.5530361256015,89.5220786105463,33.5350171628746,78.9684518653114,77.7677903447813,40.0376327134672,64.4662209937271,47.7157661152055,46.8502304249158,30.0316427283472,74.4422682107139,69.7405489766998,47.6972898000367,46.9281138828917,34.4569577888786,83.0626636363101,33.9067757485336,71.3837343358953,43.7595109840093,37.6251352034555,21.2591869698499,41.6611425181658,46.8344599803135,48.7962502821868,39.8170755705236,36.4837911291352,45.5335928579773,31.8451444113815,42.5073755947218,30.1336486515899,32.7217509285722,23.0326151311167,69.836880092896,38.6233903630243,58.5508232120042,28.9579461842333,74.1589938558885,91.1997250124555,70.7215731622504,58.6700270301628,48.8703039983911,30.1665207831507,29.7399062168568,74.7588294045824,41.8204578816495,39.2792340548956,53.2762840276685,42.7052652305973,89.1060259230498,67.4323634560212,54.4006675061066,28.808652604857,34.350052815768,36.4226821187459,85.4405433434834,75.3944681022197,45.2494468862169,48.5196816881556,96.9334201906733,70.7265598369192,72.8114122338009,65.7219246605978,40.4024538453355,85.4736012054984,58.4114213462231,25.866916339477,56.8250016242371,52.0570564779622,27.8965031145672,75.9114409001316,53.9862224281608,48.9845173116691,66.3997144913665,39.2487929239715,64.1849215831783,42.6095272052949,72.9687385334544,44.3687587560057,35.6943320292046,41.8546517844972,38.6318229574179,53.5646818479557,37.5145913898136,44.9788121260131,47.141560028628,45.5381059269517,20.0283163421831,51.6609211532002,36.7302829498488,79.657072142368,34.4402797929902,66.2168002873951,74.9193000992384,47.3215825097083,38.45372228513,76.8015770661261,38.6233903630243,93.2938212600093,37.1266850836858,52.1714892275587,28.9620617816788,43.1797279174778,68.3939104398182,48.2148639412079,37.0844418861896,74.7792405164436,71.4704147284614,83.5801483768549,44.194736423648,80.2581128846283,54.9531550902404,54.6818549525993,47.7383867892287,37.1038091260432,47.3652274254585,72.748052695393,76.5217854532893,24.6150776523269,96.0601529740377,40.7489771499069,30.034184039085,47.3117437400867,68.0946186091366,71.7868747873271,49.8664202980266,31.5189421216427,38.6233903630243,71.0500442779743,50.736786721133,42.8045042088046,40.8856703769229,73.4807089005988,71.0120190316301,93.5203239015163,42.9490976829982,28.8863277515389,43.3511631854763,66.2192743256848,95.0046511897021,34.8412024124845,77.6295680275573,57.7250236540487,45.3398789190531,80.0440087781375,84.8788937533407,86.1797367627523,52.2511693334499,35.1427857718614,35.1578539645323,48.3004840440856,31.6871923943932,37.1837878317677,77.8314394123844,36.984944403503,95.2372351456026,36.9943486181809,38.4192253080652,46.7127899757994,42.3451184718521,42.6858506528073,39.8625910224576,37.4767433255872,45.0385266607307,42.3900633092717,87.1257924721603,66.2696314439493,35.817348823253,36.5395391138781,40.2966809435653,26.7428153817203,27.5614776532872,39.8970500630151,36.7655285592284,97.1633436814276,87.7066239024933,73.899473952612,74.1094768771818,39.9693330722844,82.9020164733485,87.3251974791213,66.3697363285939,43.3376295845903,86.5525308635931,87.5254403971532,31.6497584805274,42.3980281999792,36.8744245460952,32.1740690764178,67.4532985234525,77.7705331943022,37.5739100373171,34.5383940817199,50.6749882029717,37.1653697009988,91.440899524168,38.0784083227377,31.3356677384776,28.7669176416523,85.2540467771953,42.195797471641,36.9111101758473,97.2308674087413,82.497995491034,47.2366882667949,23.2244332718691,18.2356501758924,32.2163479297042,38.4124507079181,88.4601875801951,48.2520225847126,27.2676273523409,29.5566042561664,70.7568854869562,76.3511163669398,48.5679293346575,88.8617557993056,43.3040061743866,77.7705331943022,68.914138708876,90.5268534870741,82.4645377549026,31.9376242321594,35.9638817948535,65.7813236380896,37.1249462197392,48.7661774087213,42.3609372641739,70.7387645458062,85.9568881433435,32.3508059147288,37.2959605996863,86.4776860867728,28.7669176416523,29.6780185592199,74.1308346955403,55.1012448166244,35.5341582107865,25.7973502213383,34.678210881314,48.9447282005411,29.7741224045734,39.7410924199234,77.475508271844,52.8543492838446,28.1224382927797,63.9581295865765,83.3845494688124,36.7481453865196,27.9703227177777,38.2177347159355,45.5280281521112,28.8812301051869,40.6111828414464,95.2446075547681,87.3866746773291,43.8004332110809,35.917025612084,24.5319278968076,88.7415970048742,29.3898628779614,32.3439000427758,35.5262392826211,74.503415314301,73.0672492142898,71.7787565488655,26.8991724462669,66.3971829302589,89.9494971557161,31.2024941279443,26.9922683043897,62.8577881215464,33.7084356623353,80.6356274778249,66.6032941506757,48.3620618549945,28.9620818380608,70.8408090497282,37.9003327209273,75.7028387536729,58.327978335757,39.8096434622835,61.0353231334476,32.8651317751064,97.4426178674645,26.4859050191824,43.0012537995351,36.1328013797135,41.2350878592031,27.1881327331633,72.47814262868,18.2356501758924,54.4695544928654,28.7669176416523,43.8078670603264,37.3779995937712,90.5985683888769,92.2765867914063,30.6960563451167,46.4486926211693,59.6119593424212,78.5869280849184,57.7133525459016,37.9455054037214,55.2475125808749,45.5511945268617,38.8689278342271,39.5472318883459,78.8708708813506,86.4573893067351,43.2224296261516,79.0015042953896,33.2793228055466,42.9410922268653,30.5585323103319,98.7850116765314,38.7512203579652,77.7705331943022,28.7669176416523,77.6389009306547,38.7387368444761,29.7509372269647,39.5472318883459,29.7215212000102,72.7774389511554,54.2942559339216,20.1642426911479,40.6226727631633,45.4079450217737,92.1949059569489,25.8629329191603,44.849105275039,49.109371562799,61.2711675223594,49.6419662453238,74.9193000992384,38.7624479449909,88.2763602537203,43.3461264569027,74.9193000992384,48.8747548612432,75.8540472126401,37.5999065033682,40.5792646415552,77.3042530238021,27.9703227177777,74.7131235562997,64.8179726419246,49.5393041371522,71.0739163692569,48.6182016659597,34.678210881314,52.3732514339382,43.2802950738718,95.1154969807277,90.4030606572862,45.2399739192364,70.2084075775004,72.0064422035304,94.4571145373966,82.9007417788471,29.4438249916125,96.6524349271358,35.3023670216872,44.7294928429169,35.5362238788535,36.1948106465764,40.227139199502,50.0131356051209,81.3291419995745,41.2675886691358,17.7917681092873,80.0143788164416,42.0391751997443,86.0108269971627,34.5153208159373,42.2105522833429,33.7179303048327,30.8231647803765,22.5784346346488,40.7922696861676,24.5319278968076,36.1517666388341,61.4822818351256,74.1533073144657,97.730226646702,77.8291644058301,39.2650887343582,23.4925735195598,35.4446304213262,49.5236150323214,64.7687276082588,72.7774389511554,94.5765667970234,88.5457350135081,95.0361227520722,42.283963916762,30.8204326554487,39.4887742202346,33.2155479677146,44.5288360530854,42.6617718519556,27.9518842172458,69.5900876353727,33.3513430448735,84.6670761440398,63.3930802307617,38.5769397822789,58.0273895257052,65.1623426884481,66.4459959160289,57.5223812475776,20.1315720287301,29.9346721408738,89.2949236143222,79.2707426299956,57.5003712137825,47.0716799898087,35.5837445511476,36.0573969044826,45.9510524867441,47.8853441483014,31.5328710003909,33.2729292766578,54.44366337505,30.0966735971029,59.1165732876656,61.9765420513402,55.6703880247274,48.7928872169081,45.8366901956355,32.237692934263,81.6310131819613,68.180367302672,48.5892461349291,90.2262298743248,44.9540104597263,97.3698436335263,86.8393392852459,31.5496024799647,76.4587860592549,55.3275308596517,24.5319278968076,59.2132966523746,66.1354868573037,29.5221269872826,54.8840974501339,75.8311065592375,34.6046637106259,66.1857797498795,37.1901731953413,40.2966809435653,31.4245505202635,63.4812001388088,93.2084790564108,32.1136212998731,82.2936637173994,32.8279249579828,73.2720129487701,91.4671178639452,93.374499588747,81.1847670389665,86.8209544076798,38.5784729812596,16.6537632136517,36.4057992413439,47.2444082328651,95.280735227115,44.5787520702259,47.8925871485368,86.0840384497828,49.4270858941729,40.5339345718744,87.4433540303118,58.9837758039353,59.0809089316713,35.6498088806988,42.7508377875078,87.3445970146247,36.4422900177736,36.9930293539417,63.6819747772948,31.6457750602107,65.4708365856724,47.9838882564402,36.0944013993706,50.6598068449509,52.0305050490351,39.5575261746159,87.3188240066145,86.8731370571387,93.0180516481686,49.1268380948456,42.0294097264494,49.0214238401843,31.2445939362371,41.8993881017021,49.5781678342789,47.8380232041449,43.76774538235,33.0682628121483,51.4800898880693,86.585443456119,72.4701434227564,55.9906344917407,62.247688475616,31.2638095867519,15.1902249573658,39.8513494551586,46.4506713782476,68.7709493381139,46.296443998536,29.248008127106,29.3016653558943,31.9840026830518,94.8118989125113,69.4879957761043,32.6997908268115,97.239673257279,42.3448475888245,38.0509901342806,21.2244157844373,69.2105148256121,48.3666076026399,27.3209505518365,32.5455756689576,44.3536413277026,29.4333511032272,89.1095112765465,83.9165969707553,36.1517666388341,37.0023260441271,36.0225857107662,52.9281858792677,47.983941879406,94.0313387874963,44.1939123013398,31.879605732656,85.9577906805342,76.3793527756969,43.2378790990014,75.6953804084817,27.9513656413824,51.6874056056502,77.3037677011415,74.5428094261277,46.5235619809857,87.6278170849023,97.1406214719704,94.0887621591296,29.6882900034993,35.0527838718152,71.7590471840441,95.6392204573727,19.9286057430276,41.414391914412,91.9731353680733,42.9762539720155,40.2966809435653,48.1959014328758,33.1359219026305,54.2240070282917,71.2880074530274,37.2807304935148,93.2880702317471,42.1747694693423,34.6371280290857,84.885178138602,47.9485453074497,38.4377710719388,89.0799927740152,33.4604404312431,42.9414160364565,45.6791378090229,79.3735261558827,30.0294992025194,85.2323006449962,55.3414633596911,39.2940287008007,37.1847527665913,83.3467328297332,59.2960919217879,65.8854882164969,38.4679051417434,98.0891925163158,32.494536076583,84.99396776745,42.4244751859934,67.0418931016253,58.2182883982052,28.9300785378265,39.0961917129279,41.9791226662417,90.3595097210065,60.4616219558413,67.5497296081777,63.7023251454782,41.7264932444305,68.8891413884042,71.4564777192181,40.2540303508095,49.0793171439906,74.9193000992384,49.6799089331927,42.5581472115478,62.2171547232055,72.4683478194444,44.9581317502593,42.1519765054264,51.9631498858626,63.4119701913996,85.6502934740716,43.4076040729517,28.7669176416523,81.1536615403882,42.7052652305973,31.5966283759389,92.5646292202646,24.3118935777806,55.6168597696178,21.8176230644865,33.5457473272523,34.6748750453596,26.4021360750985,41.3443817702603,29.3016653558943,82.7070244971925,77.487365319366,60.2369645188897,43.0911133723912,42.5003157482527,46.5996464929193,35.9713483401801,97.6011653257039,67.1784238057888,68.982192624559,57.5820465292529,63.640691900958,77.8133201425996,39.2792340548956,77.7216290494904,45.9752666681744,14.7688479097963,68.9411611668096,93.0256978478406,43.0236925559058,55.5855718136753,63.0166485429135,35.2980867947728,32.3695430325041,75.7421480611275,29.2488337814989,70.8209065725897,37.3126560752688,25.6291146426733,36.0236642984212,32.9525865146368,42.6716150785509,83.5592306846573,48.4550831458566,15.347619730761,27.1881327331633,65.9576242326818,16.2838967874633,91.2088333258585,30.6529733562639,39.6225012615591,98.1496409196225,86.070220629768,70.6138010291785,66.5014888608933,72.0173644704421,29.3016653558943,29.5835003519293,91.1006345942376,38.5137398940646,92.4145575681725,57.2832397426712,28.3251056304479,96.2801892081706,33.4793762325526,86.4992837460328,81.2063875402172,42.7161023623457,40.3702210109515,38.45372228513,80.3449436478293,66.2406657106271,46.2706035787973,46.5637422263832,45.8301950964926,56.838730217726,85.9760411524847,43.0095250027297,71.0968355908833,69.8686395827364,91.6484263908819,64.0563846530016,36.6269273992331,37.5797095873993,75.1647808833059,13.8969015417147,43.744593074923,22.2059986586153,86.7187292918593,48.8053023959359,82.2614423736509,19.2866886143673,46.0547966297614,36.0236642984212,48.1404109254189,33.8306772389167,32.0811144312417,36.3696685570577,37.8092349624527,33.6296097459152,48.1627939696174,30.5400266069921,73.1024761600917,35.7823637379189,42.1011059994946,36.7793208038741,13.5807708636574,34.6438030437249,89.1454262850858,51.395606417966,30.082849596519,43.4646550957637,61.7777353582891,29.4606010409241,30.1336486515899,29.8649287883871,22.8392143816508,46.2378749060802,48.8772022969707,85.6239616729736,38.5362183801782,63.5498719721224,34.0820817241603,80.3481103102907,43.1572374706572,37.6666296293564,49.7711642700646,90.3291438189251,50.6698595493139,84.8713749082124,82.8351487742733,79.6898342423885,35.7377368951326,39.6399725987805,35.0873521604604,78.0787975573768,42.4989296294068,32.3805185393604,42.1377908632043,45.0161080477923,40.129650001345,26.0801312796985,53.7711912711236,85.1790237910639,93.6060427890394,39.3378432601155,76.970408347193,18.2356501758924,39.5513791372692,37.4107507950981,36.5417723188932,50.5570189491403,43.4646979070861,50.2821496285933,32.1219951179249,37.3589037244267,43.5478788614219,13.9825740488545,34.5301697812104,35.5305146347205,41.5190052369568,74.8482283596443,65.4769426397524,43.8570542229733,81.1807955967668,91.6731736681606,36.4937912029054,38.0919229814851,87.3036787918655,29.7089386059048,51.9365413867791,36.4545823514615,44.9469522498023,80.824761806549,38.3593324943964,95.9052196514632,29.6263969835658,70.0596415923954,86.2458846605619,32.2994615767719,42.9604076195785,44.46081371924,82.0110050168975,35.7076826852448,83.6051465330093,36.9977850842465,55.8286239126434,54.7064995453805,93.6118746347715,53.3055137148168,33.0338942864607,33.0094722289876,68.7750668854854,82.5478207669739,78.5780188032508,91.0050991697316,15.8296089057834,35.1701181635733,89.1607866706902,82.1428333873914,38.1112662476946,54.8725821967886,63.4134707465293,95.6008439980125,26.3408813251486,74.0623131806315,38.9558220396644,47.4170947614325,57.7119583487908,29.1691595253858,93.2926664163185,37.6664498879606,62.6648818872496,36.6832684922799,82.0110050168975,27.1881327331633,66.3302572382945,92.0225927869859,85.3733207578709,37.8890415349749,32.098921434301,77.8586043193784,43.104979070054,89.7926049061147,27.9918142453496,51.9324437565092,79.3126158812579,32.7565242380115,33.9838984916174,81.5241374577411,47.6879160877731,58.9829828804436,60.1374746792167,38.5784729812596,38.868877971833,20.0283163421831,86.1895783876227,34.5712435105705,47.7891034599249,70.2896995758155,95.5953692847147,33.8720408456731,30.249922462149,24.5319278968076,15.859599029263,73.356293539516,64.8142900847481,93.2938579952228,73.3299198498284,35.0440125474142,16.2838967874633,84.6466388996878,48.9657371562408,55.440037273842,44.4281639488868,41.4446901436142,47.374007663807,46.6752967981103,53.71534605123,70.2635787149297,39.0939130850824,29.2318958883269,67.3260683570963,33.0518165788965,39.3625474301008,68.9775735283567,80.0814740997405,28.9447865513037,48.808413363635,72.5996114077919,46.1977944551112,39.9302505656011,91.1451037193463,91.8277393600383,39.1374561868379,76.6276259582986,47.26186128953,43.1513725458228,44.9342423882033,93.1238808192328,41.1176968803098,25.7191230888997,48.516294388082,45.9021722981664,56.56596342233,69.8805096877988,32.3334853311635,55.569265766177,33.8516934546089,40.0753741585239,32.9527787564512,33.9431845932499,80.0785592388877,32.0739348036023,57.2477110458163,92.4488256378495,40.60210899995,31.6850944829065,45.0353137745764,75.7150760541807,53.3010695026053,47.2435789049508,43.360905956061,65.7639996073337],&#34;sizemode&#34;:&#34;area&#34;,&#34;line&#34;:{&#34;colorbar&#34;:{&#34;title&#34;:&#34;&#34;,&#34;ticklen&#34;:2},&#34;cmin&#34;:1,&#34;cmax&#34;:12,&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0.0909090909090909&#34;,&#34;rgba(241,120,195,1)&#34;],[&#34;0.181818181818182&#34;,&#34;rgba(233,224,206,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.363636363636364&#34;,&#34;rgba(147,61,182,1)&#34;],[&#34;0.363636363636364&#34;,&#34;rgba(147,61,182,1)&#34;],[&#34;0.454545454545455&#34;,&#34;rgba(101,150,52,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.636363636363636&#34;,&#34;rgba(115,210,176,1)&#34;],[&#34;0.636363636363636&#34;,&#34;rgba(115,210,176,1)&#34;],[&#34;0.727272727272727&#34;,&#34;rgba(245,232,111,1)&#34;],[&#34;0.727272727272727&#34;,&#34;rgba(245,232,111,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.909090909090909&#34;,&#34;rgba(67,99,194,1)&#34;],[&#34;1&#34;,&#34;rgba(147,213,95,1)&#34;],[&#34;1&#34;,&#34;rgba(147,213,95,1)&#34;]],&#34;showscale&#34;:false,&#34;color&#34;:[10,4,11,2,3,7,8,7,2,4,7,4,5,1,9,10,7,7,1,4,5,7,11,1,7,9,5,12,5,10,9,7,1,4,7,5,1,1,9,1,3,8,7,9,10,9,1,11,11,4,1,11,10,11,4,2,5,7,9,5,9,9,11,2,3,5,4,1,4,5,9,4,2,1,4,4,9,4,1,6,7,7,9,11,11,12,6,6,9,9,7,1,10,4,10,4,11,1,10,7,3,5,9,9,11,4,1,9,12,7,4,1,9,7,9,5,7,3,10,4,5,2,10,3,5,7,7,7,1,10,4,1,9,11,4,5,5,1,11,8,10,10,11,3,4,5,5,4,10,5,9,4,9,1,12,1,1,12,4,11,4,7,8,11,10,10,10,10,10,8,7,7,11,4,1,4,7,7,10,12,1,4,1,12,7,5,4,5,7,10,4,2,4,3,10,5,3,10,1,7,7,2,4,7,8,4,4,1,10,4,10,5,4,4,7,7,4,4,7,10,4,10,5,1,4,5,3,10,3,2,9,4,9,5,9,8,1,7,7,9,8,4,4,7,4,8,11,5,8,10,6,7,9,4,4,10,3,12,10,7,4,7,3,9,2,4,11,12,5,6,9,3,3,10,12,3,10,7,9,2,9,1,5,4,1,10,1,9,5,3,1,3,5,9,9,12,4,12,10,9,9,4,2,10,9,4,5,2,3,8,12,8,2,11,8,10,7,2,4,10,4,8,4,5,10,1,4,4,12,9,11,4,3,1,10,7,7,9,12,1,7,5,12,4,10,2,9,2,5,1,9,8,5,11,1,7,7,2,12,11,9,4,1,5,1,12,7,4,4,10,9,9,10,11,11,7,10,11,12,1,7,2,12,9,5,7,7,1,10,5,12,11,4,10,4,1,12,7,7,10,4,7,10,8,9,12,2,10,10,8,11,9,1,9,9,7,7,10,11,1,10,1,10,2,3,9,9,5,9,10,4,9,3,4,1,9,2,9,1,7,1,2,4,4,11,4,2,11,7,1,5,5,12,7,9,4,1,1,10,10,4,7,10,10,4,10,5,8,10,4,4,10,7,9,2,7,5,9,9,4,3,4,12,1,7,10,7,1,4,12,7,8,12,5,7,12,11,12,2,7,9,11,12,11,7,5,11,7,11,7,3,5,7,7,5,4,1,10,7,8,7,9,1,4,11,7,10,3,9,5,2,4,9,9,10,4,8,5,10,7,4,11,7,2,9,9,9,1,1,2,5,9,1,1,5,8,4,7,12,12,1,11,1,4,9,11,2,7,1,7,1,4,7,4,11,11,1,10,12,12,9,1,4,9,9,9,12,2,5,4,7,3,7,11,12,9,7,10,11,5,6,7,5,7,7,10,4,12,2,7,9,2,9,12,7,7,5,11,2,5,7,10,4,7,10,1,11,7,2,10,5,5,4,4,2,9,9,12,5,10,7,9,4,4,2,10,7,6,12,11,4,4,5,1,5,7,1,10,7,1,4,9,7,9,6,12,4,6,9,1,1,12,7,11,9,7,5,3,5,5,5,9,4,10,12,5,1,11,6,7,1,5,4,7,7,4,5,1,1,7,2,6,9,10,12,1,10,1,9,7,1,4,4,1,7,10,12,11,7,1,7,10,10,2,10,1,10,12,7,1,9,1,4,8,7,7,7,1,5,12,4,4,4,9,8,3,10,9,10,7,1,12,8,5,1,9,7,9,4,9,9,10,12,1,2,7,2,10,2,8,12,5,4,8,10,9,11,11,9,9,3,9,5,1,12,2,12,3,10,5,1,6,2,3,1,3,11,7,7,10,3,11,10,9,1,8,7,12,4,10,1,1,4,9,11,4,9,7,10,4,4,4,10,10,8,5,4,7,1,5,1,4,9,7,5,7,9,5,11,6,10,7,1,1,5,7,7,9,4,10,12,10,7,11,9,8,1,4,7,7,8,7,2,7,9,10,5,10,11,9,10,9,12,10,2,5,10,11,5,9,10,2,4,5,3,1,5,4,11,11,7,1,4,5,11,7,8,10,4,12,7,9,9,6,4,5,7,4,8,10,4,4,12,11,5,8,9,8,12,6,5,10,7,7,4,4,7,4,7,3,4,10,10,9,4,1,7,1,12,3,4,7,1,9,7,12,7,10,5,4,4,9,12,5,12,1,4,6,5,7,8,7,1,11,4,11,7,1,10,11,10,6,4,8,1,5,10,3,4,7,4,4,6,1,8,4,9,9,4,10,12,4,12,1,5,4,8,8,9,9,7,10,11,8,4,6,1,7,6,2,7,9,1,12,1,8,8,8,2,4,4,1,9,11,7,10,5,10,9,1,9,2,5,1,4,7,9,4,1,9,7,11,10,10,9,4,12,1,10,7,8,1,1,7,1,1,1,5,1,1,8,8,4,5,1,3,4,3,4,7,9,7,7,2,8,7,1,1,3,1,1,10,9,7,10,10,7,10,1,6,4,10,12,1,11,7,10,1,8,7,7,4,1,7,7,1,4,4,4,1,4,5,4,2,7,2,11,10,9,10,12,5,11,4,10,7,7,4,1,9,2,8,11,7,7,9,10,1,1,3,8,12,8,7,9,1,5,10,2,4,9,1,4,8,4,2,1,2,4,1,7,7,1,1,1,1,1,5,4,4,9,11,8,12,1,7,10,7,9,7,1,4,4,10,5,4,10,10,10,1,10,4,1,7,4,1,10,10,4,9,7,4,1,12,10,2,5,7,8,1,1,1,3,8,9,11,5,7,10,3,7,10,1,1,10,3,10,1,7,11,1,4,7,10,5,3,7,7,1,5,7,4,5,1,1,9,10,11,4,7,4,5,7,4,3,9,10,10,7,9,9,10,7,10,9,5,1,7,4,8,10,5,7,6,5,9,7,11,7,10,1,1,3,10,1,4,5,5,7,9,7,4,7,12,10,7,9,7,10,8,9,10,11,4,8,4,4,1,8,10,11,7,9,7,4,10,4,4,5,7,7,4,4,12,6,7,8,9,7,7,7,1,11,4,9,9,7,4,5,9,5,4,7,8,10,12,4,8,3,11,5,2,1,9,12,7,5,12,4,8,2,4,2,5,3,11,7,4,7,5,2,5,5,7,1,7,9,9,11,7,2,12,1,7,1,4,7,7,10,9,1,9,4,4,11,3,6,10,7,10,7,4,7,4,12,2,5,7,1,3,5,1,4,8,1,12,7,9,4,12,7,8,4,4,10,7,10,10,7,10,6,7,1,7,3,3,1,10,3,3,9,5,3,4,7,5,11,5,5,3,7,4,10,1,10,5,7,7,7,4,7,5,7,2,12,3,8,11,5,4,7,1,12,9,9,9,7,4,4,4,1,4,7,10,4,10,12,4,2,12,12,12,5,11,9,10,1,1,11,4,4,1,4,4,8,4,2,8,2,7,1,7,9,12,4,9,7,3,9,11,2,4,5,10,8,11,2,9,11,8,1,7,6,2,9,11,10,4,2,9,9,3,9,5,5,4,1,9,4,1,9,4,7,3,4,2,5,4,9,7,4,8,5,2,4,6,1,1,7,9,3,9,5,4,5,4,1,4,1,1,11,5,9,10,4,8,11,4,4,1,10,1,11,7,7,9,12,1,3,1,4,11,2,4,11,7,7,5,9,10,7,7,7,2,1,3,1,11,9,9,5,10,11,1,10,3,7,9,3,9,5,11,8,3,5,1,9,7,7,1,7,2,2,11,9,1,7,9,7,4,9,4,1,1,10,4,9,2,4,5,10,1,8,4,3,7,9,4,10,2,4,7,7,3,12,8,8,4,10,8,5,7,12,1,1,8,12,1,7,11,8,9,1,7,10,1,4,3,4,2,11,4,11,7,4,7,10,9,8,7,5,7,5,3,2,8,2,2,10,7,9,1,4,12,3,1,2,10,11,4,3,4,10,7,11,5,4,7,9,7,4,5,8,5,9,5,4,3,9,12,12,10,7,7,9,4,9,2,11,3,11,9,10,1,7,7,9,8,1,7,4,10,3,1,8,2,9,2,7,1,10,4,1,4,9,4,9,4,7,5,1,6,4,11,7,4,1,11,8,4,7,5,4,11,3,1,4,1,8,5,4,11,5,1,7,10,1,2,4,3,1,7,4,9,1,10,9,9,4,5,7,12,1,4,1,1,1,11,5,9,3,5,10,5,11,4,7,1,1,1,4,11,1,4,1,7,7,10,2,1,10,9,4,7,9,4,6,5,1,9,5,9,7,12,9,5,4,4,9,5,3,7,2,4,9,1,11,11,10,9,12,3,4,11,9,9,7,6,2,9,4,10,7,1,1,4,9,1,2,7,9,5,8,9,9,7,11,10,5,9,4,2,3,4,11,9,4,10,12,5,1,5,9,7,1,8,3,11,4,5,4,8,10,3,12,7,5,10,4,4,7,7,1,1,11,10,4,5,12,4,1,12,9,4,1,10,1,5,9,9,7,8,4,1,1,9,1,11,1,1,10,2,7,5,11,7,4,7,10,5,4,3,1,4,1,10,1,1,7,8]}},&#34;textfont&#34;:{&#34;size&#34;:[56.9187659936069,31.856167203944,25.2033423573737,63.0056105861941,83.7657263016526,36.9943486181809,66.1857797498795,42.5771272343941,54.9105393175922,43.8461793288181,39.6918971093713,41.3443817702603,28.8432477746254,43.6900249521182,82.6839724020353,77.7705331943022,38.536150393918,38.8056984185615,41.616884246219,34.8032691086346,36.4819927402145,45.9770155951321,32.8852121133548,50.5294820937563,36.1517666388341,88.552389553924,20.0283163421831,74.5895492923276,47.4769730202963,63.0033018215454,90.1949341360882,34.6987667229528,40.2357670650594,29.646394449958,38.004869369595,28.892962322623,46.7758330342488,47.0536838439246,93.7601514670041,43.838664749153,76.1131329614042,73.4638502405817,38.9180649255592,92.0686933908291,74.0623131806315,94.1956671322402,43.4580793010213,25.0706868874525,26.0993909776495,31.1055364935509,33.0467541879036,40.5608427328046,84.9799111337268,41.7141678838704,39.8539831088219,72.0469111946707,53.6475943740815,39.3768952643844,87.3098298335245,21.7527461702469,87.7997314775823,89.4891677242057,35.0616978193771,61.1926802837165,90.3531941195187,42.5003157482527,33.5509456907657,49.1417022068654,35.9015877865602,39.9014473029013,88.9662730531734,28.3737888764967,63.2532469960768,56.118757654578,31.2870800388043,49.8360667222632,83.6186908933085,30.7859000225937,40.4428026896943,32.1726511145835,36.8012342118704,29.3016653558943,95.5257885595408,30.0467086925312,33.4667353147669,72.4824522611754,51.904452150519,55.1690900379921,91.1997250124555,79.6781980588094,31.414636399929,42.494468198652,69.9167489237707,36.4418264925003,80.0143788164416,29.297377747117,32.6165353574453,48.1627939696174,75.5729153042191,36.908821920242,96.3045766892767,39.4659550715977,89.4197790493357,86.8703254901353,33.2468225527357,53.8400914895234,43.318374326203,85.1263282936492,78.680593756693,40.8077710409779,34.1027531685565,45.6793877999858,87.2251116758956,39.5472318883459,92.1823896777385,39.0483956135822,40.3856911669453,98.8201894215211,57.2594685426505,32.9525865146368,40.2063063290866,52.2650543736825,54.7467418053897,80.7849908366969,26.4190291896121,44.8851671373825,36.9954627919859,39.3897046070309,49.7129554264426,61.3970878955456,37.5924676748474,46.1344382942537,93.8588556257677,31.2954613779994,29.9809613652402,40.2887752470408,40.2775036996292,47.3153880821951,43.0051365897407,68.8858329558745,77.6278839182301,84.6699196933121,26.7040924274688,69.945746413031,29.9869339886676,24.6758504223466,39.971722985194,32.9035192724407,80.985483484541,35.8449541349687,87.7031605553046,17.1913889142525,91.1276847515667,43.7410942112245,80.0714577475699,47.2789695748989,49.7138147344696,70.8053350204423,28.9300785378265,35.9850936473206,49.633012568019,50.2258500759349,72.9729326850627,39.4830022302676,83.5998181163939,84.7409882294562,64.6420030472759,79.5807597676498,80.0792366989024,66.2244930241411,39.5369075871431,35.0440125474142,30.6837310019667,45.58801475374,42.905972509585,38.7525694804466,42.874986792177,39.5570728864543,70.1978077099655,72.7774389511554,53.5981358931557,41.3443817702603,47.858067190201,68.2155633282182,30.3587191420688,37.1591051109686,37.9500575060365,34.2605922291155,38.1802245460339,74.716438987671,38.9751525617144,69.8646015644908,36.1883436298504,99.9399791527953,74.0623131806315,31.8248559881696,95.6676537564286,76.910907747217,38.8145648018564,39.3206215134257,41.7703047395758,59.3510276404694,45.8172134639533,41.507543502117,73.199924409802,36.0638929437683,23.6239170548745,42.8045042088046,58.8375492492822,37.1433577695078,75.6709865552958,32.5166378613618,33.2155479677146,34.6202791361088,36.2726045994656,28.349566494931,39.810594469064,30.1336486515899,28.054238620126,82.5701950887354,41.3005179056731,60.3223830829842,40.1724472563943,41.3343010008905,32.7683441324786,25.9943857896131,81.0168371286166,73.3758573562874,71.0755388295836,55.5855718136753,79.6547165620845,28.9620617816788,95.5911104373463,16.6537632136517,94.2750012655416,69.1867716731882,38.5672757051376,46.9303380694989,37.9766478116138,95.2892101975796,64.0445105262167,33.2929834301853,38.9119426453091,31.9476657244478,28.6215400708643,70.5108758550934,25.2056193486742,33.7065716549218,66.5566969076368,79.2352908855787,51.5341489409,38.942872720185,89.6549579737598,30.4947750914743,30.9448267936759,76.1881827067883,90.0254553925293,68.0088001361056,70.6598933806562,39.8352950177582,35.7048213080775,32.0633004293407,97.1488080971235,79.6138030052196,73.8727229000076,30.1336486515899,31.1049302058363,74.9193000992384,18.2356501758924,43.1229864976531,88.3797353035964,97.17698607774,77.3235209218885,78.4019000218509,74.0033563314567,90.9594984955842,63.8059626519158,40.0912129201774,94.2496161535308,52.6492236291653,90.4656344103245,45.9146022583299,44.1868922890739,41.3443817702603,57.1161943152861,81.1807955967668,56.1000607366171,95.7231837498875,38.3873473776285,88.4230244448966,45.0617118383393,100,36.9933012293424,87.6567473017146,88.7108291220598,69.6085484207735,31.060289156446,68.5222630149348,69.832414414088,87.9079254910786,87.2941233708701,39.8302727743494,59.0809089316713,82.7201412317495,84.8086507148989,43.1324712860601,53.8647788065767,55.2757278538266,86.1315683319954,68.2134799715365,74.9193000992384,59.7879412285679,66.3812881082321,38.2715688308708,68.2134799715365,72.6119633535042,27.9553472858736,69.4331972660571,10,64.8011220253524,30.8958709758243,68.2134799715365,19.8814620854492,36.4743802289966,85.9214201031162,47.3761517467566,26.7587734718828,36.2303692016736,69.2014484356188,87.3111090024097,32.8368545049529,32.8494614731337,92.4068469861214,53.2788116366939,56.56596342233,39.2558676734466,37.3698397452809,89.0536843372094,68.9575126893685,42.0801335700878,46.705665677311,31.9839166077456,62.7264017400892,28.9325772287524,83.3312045937998,62.7315894138295,91.3825098249069,67.0430569114938,39.8135819646614,46.3670974789968,90.1930340550432,55.9409255671905,34.1935272393103,32.0262192779857,54.4120974153679,40.2821668084475,46.9835802426039,71.7828994104552,66.8173123211407,31.9278463454962,88.2579707799,27.7317681406061,44.1815410130577,33.7505363585408,46.229216398828,76.2766878296865,31.797942830554,21.5393969811003,31.2185958510509,79.5206927838025,91.3983175966646,87.3098298335245,78.8635861666262,28.2585730400888,19.2938067148765,35.0440125474142,66.718443550318,28.9645952230722,58.9783742302736,37.7554482028638,39.8865101034755,59.106759379601,73.1295765106061,92.3316962798351,36.08401959276,40.2085172666429,50.2488720516989,45.4421825193962,77.3002957185661,29.5171422103096,58.5687214437456,32.4865764785319,48.7555269127499,76.7800576824681,40.2094663931376,46.4905507779149,70.9988651788383,49.4488618323842,29.3016653558943,82.1937505348574,50.5506332721858,47.1969960252064,83.5642113528576,59.5258359497074,82.6839724020353,72.4683478194444,55.5586266215607,79.8882242432112,79.250587219595,80.3021219316544,31.3619638837854,77.633591839199,43.9656798317041,87.6871986001102,89.3425558502412,39.8165734993912,33.420568204518,85.9893889532762,31.7812581492049,46.0967816013391,72.9371055798852,45.8964851996218,82.1800286442393,57.9776344471023,84.5928709777772,95.299778866298,93.3733919611222,40.1877720036184,94.1685330758616,77.6389009306547,37.2559373233342,78.6780547440823,96.1707115514052,19.9349887388338,43.76774538235,87.396081190134,63.9732604380312,90.1799465693766,55.1457437129251,38.827430761998,46.1458974524055,74.7285178044588,35.04906292547,35.3891249412231,31.8368187843586,48.9171724378385,51.2042844115176,46.9649308715,48.15888473354,52.5619345637072,16.6537632136517,32.6350360466895,77.550908568662,39.3115682854331,90.3778616935709,33.0328591891202,38.7775897125493,46.1145736143421,69.8205383896073,68.8264847983298,30.946757934257,39.9955143112369,77.3802788986744,82.1390806154678,39.810594469064,83.3819792051551,29.2205870834,77.7421645561862,74.7397994497017,43.8569457235178,35.7919495742784,85.7299936363448,36.8579563065353,82.8502799216988,54.4782689908507,40.5339345718744,36.8611630991708,93.8838572465228,96.7982499429364,43.2193156813333,88.1154279314869,46.1674329229532,63.0234769053068,54.2967296066002,33.1009241427773,80.5940171706056,48.9534139719375,43.0095250027297,41.0716566893533,68.6780392626756,33.3890658959927,66.3891603774532,67.6360043116695,34.6527954061693,48.3213087143656,66.2639970456377,24.1431375777864,66.9789010720437,63.0871206802536,37.6916651474863,86.872460241296,26.6381154267476,67.811499395301,31.6109852808605,35.3479009979185,18.2356501758924,33.4151895424871,40.3885570010864,33.8603116227663,47.5879780610843,82.8269241777927,45.7583637736599,39.6581035681216,38.6233903630243,20.0283163421831,17.9421891115196,41.4553454447604,80.0785592388877,43.8275722815551,68.2134799715365,40.5339345718744,85.6992661796754,42.3324377024531,24.3404341749982,32.4633801584888,47.6235619129898,82.1713134498519,93.0298551075449,90.8935786694799,48.9041580743981,57.0493191995279,31.6137829024108,88.1699277198305,84.8635351609718,82.8661214689609,34.4621974490396,59.7922994351135,35.7384179764385,81.1620891729165,38.0286913373326,42.4054391027737,33.1017132360572,27.4472166190516,68.5923227429198,85.071641016436,88.8078008934168,82.0471039974757,54.2874573601304,45.9752666681744,63.766841825704,36.984944403503,85.2818906762887,53.2646559571745,46.8837278037398,31.6457750602107,58.5728863464635,35.2799469114842,47.5816289626529,69.5266821692427,71.1215934534746,38.4012224593103,33.9927606268592,44.7888469895202,19.3787197258279,92.5655156009253,29.8750376227636,55.1526893842612,39.5426417624732,57.7119583487908,37.9810891859866,35.1269258744025,28.6580310388045,38.2561050817768,28.2846996811125,31.5557447469566,41.1074838641711,52.0089848122844,76.9712405477662,61.5387090731189,75.0966292972209,78.0032638299062,46.232434055337,32.7565242380115,91.6331100004836,90.0795627060293,89.7512231580822,65.639952329609,58.4989712665178,37.202890421393,30.450802866712,38.1458749276647,77.9960362027484,35.0440125474142,30.3158943094942,73.3103682200947,92.61132883442,33.4978972567397,67.9664751809967,29.8721936556501,25.866916339477,28.8724657273974,39.5767593396449,53.8647788065767,35.3571286050103,38.6900689192747,69.9487138000162,35.5547619648934,73.3103682200947,77.1843351148755,31.5737321704038,87.0722642170507,51.4314961645173,88.3020056808561,72.5695155530554,28.7669176416523,39.5797945387897,34.3627490627049,27.6557495083161,52.5105699430376,36.7944548065485,39.6581035681216,73.0080516885308,32.8060768725084,38.8447633062703,73.2355700499885,39.0412469758386,46.1688710282199,34.678210881314,64.7109522923873,77.6389009306547,27.1881327331633,39.6399725987805,43.0777523573689,32.3403972618152,53.7503064491077,88.0003220395691,82.6573464406678,72.7800061680532,20.0283163421831,73.0438222458536,29.3016653558943,95.0286164770028,36.6785686134279,42.6288077953106,61.6402579476284,72.6356161651588,49.5608040215499,37.5762845597391,69.1744977419272,34.1818910731412,28.0932443658819,43.1388353223177,39.3547084489027,46.2558970974048,24.5319278968076,44.4518623052422,43.0659722796949,79.9217406164039,42.6716150785509,51.1410864732294,30.8582099652163,90.2820814662981,28.3897952621485,91.4083112287149,51.842120397229,66.8166610458469,52.20145401941,46.0748885282856,88.2255059391386,46.3837237670254,38.3157700326611,60.7804257387439,40.2966809435653,33.0916030088763,95.1512272685959,49.5287711938643,32.4435306079139,95.0099630841764,33.6813637076187,34.3496472311539,48.0682332121551,94.0328627939686,45.0303554086552,85.2091600371253,72.4683478194444,24.5319278968076,39.768544383885,28.8812301051869,41.3331099791079,40.4718667550005,46.6479873876695,39.809720902203,29.7215212000102,42.3534317203267,38.987528881502,30.1658993138691,16.2838967874633,38.7664257940904,51.4186915922255,42.916922058051,52.042957154787,36.1114609539988,82.6573464406678,75.8981448594302,68.9338695577039,40.3922685285925,80.0189238154547,41.5207165756082,93.5173266911089,48.7954703117751,46.3212346442588,30.74420417978,31.060289156446,53.7156812469964,37.9379278518916,62.3118442280158,72.2155304386921,31.1224461127955,43.0881911470857,46.6475971239028,46.7711771331927,72.6283175223913,75.7723292251277,55.5855718136753,77.8439094679019,34.1050876478547,75.5732306351141,58.7244713326648,39.6417197325027,52.6759176116132,96.1863545021833,43.2294677448735,32.7975033263189,60.5836387512177,35.3353700768528,38.0881009871875,36.651943835944,57.3537318667531,42.5003157482527,71.37289497566,37.1817848398944,39.810594469064,22.9071565073781,93.3245621920603,68.2134799715365,93.2729449166895,85.3926179222578,91.7015927954327,69.7939815113334,33.1125027338983,42.5114046990198,65.1412917745186,71.0012664605131,38.7258552849263,47.833869304581,79.3231021830115,26.3599913488669,77.8305864590271,31.3715731192572,87.3098298335245,89.4288097138985,72.1834580553641,73.0687556714278,47.7803856192093,68.3436227876686,37.6537846309196,52.0808619409688,76.1850452061672,63.7524637153368,62.0087189472212,65.6696309175853,29.5171422103096,28.4633490834772,65.302339229438,84.5548924426074,89.5876651734002,35.2835473106166,30.7189263311108,79.4603769754657,86.7772214666973,97.381815065102,91.2979372501482,16.2838967874633,50.576432464917,72.4231630192528,64.1932415867537,69.3528340070636,97.3722645363317,69.4271462103372,37.2918044716356,45.3040464167588,43.6489308878152,54.0746940018852,82.5824713877638,46.028090512506,76.5475977732011,34.1403102759633,27.6964652173293,41.9067855639351,78.5278551803247,92.8533321691553,27.6347097368211,82.1955875915076,94.1052927963224,46.574519014885,64.628530242298,34.5711493569994,73.6827900243444,45.9781815290272,75.4732824409539,43.0095250027297,50.6131687927459,56.6780769786556,95.5454170720723,26.1119340161126,31.2547664217704,85.9338192648945,28.3001387775703,74.5679201556902,33.0080863538825,33.2929834301853,37.5748687219313,81.637804774321,69.1942892822027,66.967825509608,16.6537632136517,29.7568709911519,43.6639738881382,45.4031260581535,51.4897198763252,40.4495462303054,22.504775343214,84.4952726185826,47.6068093324307,17.8274314206784,41.0541473285743,84.673659651436,38.1179695362612,34.2581923576551,49.6156502003245,57.5580910786326,31.9410861343137,47.6972898000367,44.9342423882033,31.3000210014578,35.4604100584369,43.1163497503122,82.6573464406678,29.7215212000103,78.9021543803193,65.2519909554809,80.0440087781375,39.549958633567,25.9701665940872,93.5764218805715,64.2449194317018,57.8778594481576,34.0489832618998,35.9524741704611,44.7239612161531,70.7079947130658,36.8622461437995,63.5561117354158,43.2739483432077,87.6728860037756,73.6189595439803,53.5848708945803,67.687806168431,31.9977614307539,94.1292495875169,83.9917302669877,89.046498581231,61.5810069730042,76.7743770604635,60.3109601899746,31.796233581109,79.0288155861162,37.0470666442053,20.6623548295426,90.5095529424808,62.1936631808795,54.0141476322056,23.6624056349814,24.5319278968076,94.7670848071859,46.8049746787548,25.866916339477,43.1442771480238,47.1541339351166,40.3011842280895,35.6975365237129,51.8263105362648,42.9836210711146,32.5672900452186,30.3230254675438,40.0437164826782,78.1389317092118,73.0890744577736,36.5828901305097,69.7597652539766,38.0919229814851,91.6905210457988,96.0113613329937,49.8977486975241,33.4294827092017,31.6010181295021,40.8389252877069,12.0423336156435,62.5037016980798,78.0114504550593,35.4362708098783,38.8596484148151,64.6001048474065,32.499619812302,17.6067809250262,67.5167480021985,93.7471273191133,62.8309058145462,57.9257397425237,45.6662495814224,27.1881327331633,76.4413076187316,37.1987610351849,39.9557358202417,31.5328710003909,33.5618904166468,39.7022738496563,30.1336486515899,47.4578208816578,96.8206697049384,29.9226733406934,75.8361313619242,73.9125856034333,94.1292910930852,36.3343599406933,46.8230722207925,32.4022414117276,57.7822538611348,66.2598880814227,94.1064814155176,30.7318225499259,33.4978972567397,37.9456756044076,87.3098298335245,34.5712435105705,72.7774389511554,38.287228965372,76.7574104058826,38.5784729812596,33.6995285221044,51.4422898755915,92.3114950113527,68.0694733380274,51.4454951361421,72.9058944371002,51.280356875694,41.6213737768007,23.5849585077745,45.0755272731767,42.0325296080961,73.8977306491017,39.3042774423698,48.8683524184068,21.6342887907362,44.6296023804952,30.6960563451167,44.2579857215951,43.5582302874886,83.6538722944096,30.8156947530391,70.6829008364354,45.4468700719301,46.7862375609796,68.0851815242772,41.2560901468523,38.2275163109402,60.7608295218623,96.8968177635685,41.3320339333208,36.7213054904105,46.2693768664043,33.7381370574821,39.4572990713933,56.1880089641233,71.234946605633,18.0490895928363,91.6669858042377,87.6597379311217,25.872747175426,69.8537443763604,70.6466576309712,35.6593066918261,60.8916307340001,52.3664425533951,29.5171422103096,25.6060176295772,59.0223352777813,66.1857797498795,87.4578105555615,87.5549366496357,37.201018492405,79.5595757016286,48.0135359067509,65.1419074636623,17.8086309651273,42.3659332184014,46.0735072842548,35.603977819309,43.1105621261169,68.2093617277628,28.7669176416523,88.7983099418508,52.4786867025345,69.4764362315821,37.4775008718496,66.292747120623,68.3300415702854,66.3997144913665,60.2167236599448,43.2879075850897,16.8326187510538,51.8263105362648,82.2785267898359,15.04437592232,33.3704278066037,75.3664523310748,40.2476926733734,81.4924123005269,90.188482927691,42.8045042088046,90.7251109277469,59.0847527233563,32.2846096866098,50.5346564139853,47.9822687035925,44.0675214388588,89.0947944884021,49.412929396381,51.0311734606579,88.550296726173,28.1229576172754,29.0008692791517,75.4985551536573,79.4655459508082,88.4157877296906,49.5040239862258,64.8052297534535,60.1242353952908,83.1478811142829,33.4190900213074,66.9105249136744,42.852043753597,47.826620593848,38.1348525529435,45.1259903142087,41.7447741491551,45.4258406594171,16.6537632136517,39.0162326283341,43.0095250027297,64.2056453970164,65.0331368291831,29.3299760533511,36.5372826142111,37.6069557645246,91.8718812283652,30.6331773590146,78.7211416676073,48.4591303566106,31.1332525680291,93.612758038313,26.5119591125118,38.5441657041414,54.36325272589,77.6796345197931,36.849247936889,43.78032296236,46.8336549916545,78.3309127036078,52.5517553056629,42.5073755947218,67.5530361256015,89.5220786105463,33.5350171628746,78.9684518653114,77.7677903447813,40.0376327134672,64.4662209937271,47.7157661152055,46.8502304249158,30.0316427283472,74.4422682107139,69.7405489766998,47.6972898000367,46.9281138828917,34.4569577888786,83.0626636363101,33.9067757485336,71.3837343358953,43.7595109840093,37.6251352034555,21.2591869698499,41.6611425181658,46.8344599803135,48.7962502821868,39.8170755705236,36.4837911291352,45.5335928579773,31.8451444113815,42.5073755947218,30.1336486515899,32.7217509285722,23.0326151311167,69.836880092896,38.6233903630243,58.5508232120042,28.9579461842333,74.1589938558885,91.1997250124555,70.7215731622504,58.6700270301628,48.8703039983911,30.1665207831507,29.7399062168568,74.7588294045824,41.8204578816495,39.2792340548956,53.2762840276685,42.7052652305973,89.1060259230498,67.4323634560212,54.4006675061066,28.808652604857,34.350052815768,36.4226821187459,85.4405433434834,75.3944681022197,45.2494468862169,48.5196816881556,96.9334201906733,70.7265598369192,72.8114122338009,65.7219246605978,40.4024538453355,85.4736012054984,58.4114213462231,25.866916339477,56.8250016242371,52.0570564779622,27.8965031145672,75.9114409001316,53.9862224281608,48.9845173116691,66.3997144913665,39.2487929239715,64.1849215831783,42.6095272052949,72.9687385334544,44.3687587560057,35.6943320292046,41.8546517844972,38.6318229574179,53.5646818479557,37.5145913898136,44.9788121260131,47.141560028628,45.5381059269517,20.0283163421831,51.6609211532002,36.7302829498488,79.657072142368,34.4402797929902,66.2168002873951,74.9193000992384,47.3215825097083,38.45372228513,76.8015770661261,38.6233903630243,93.2938212600093,37.1266850836858,52.1714892275587,28.9620617816788,43.1797279174778,68.3939104398182,48.2148639412079,37.0844418861896,74.7792405164436,71.4704147284614,83.5801483768549,44.194736423648,80.2581128846283,54.9531550902404,54.6818549525993,47.7383867892287,37.1038091260432,47.3652274254585,72.748052695393,76.5217854532893,24.6150776523269,96.0601529740377,40.7489771499069,30.034184039085,47.3117437400867,68.0946186091366,71.7868747873271,49.8664202980266,31.5189421216427,38.6233903630243,71.0500442779743,50.736786721133,42.8045042088046,40.8856703769229,73.4807089005988,71.0120190316301,93.5203239015163,42.9490976829982,28.8863277515389,43.3511631854763,66.2192743256848,95.0046511897021,34.8412024124845,77.6295680275573,57.7250236540487,45.3398789190531,80.0440087781375,84.8788937533407,86.1797367627523,52.2511693334499,35.1427857718614,35.1578539645323,48.3004840440856,31.6871923943932,37.1837878317677,77.8314394123844,36.984944403503,95.2372351456026,36.9943486181809,38.4192253080652,46.7127899757994,42.3451184718521,42.6858506528073,39.8625910224576,37.4767433255872,45.0385266607307,42.3900633092717,87.1257924721603,66.2696314439493,35.817348823253,36.5395391138781,40.2966809435653,26.7428153817203,27.5614776532872,39.8970500630151,36.7655285592284,97.1633436814276,87.7066239024933,73.899473952612,74.1094768771818,39.9693330722844,82.9020164733485,87.3251974791213,66.3697363285939,43.3376295845903,86.5525308635931,87.5254403971532,31.6497584805274,42.3980281999792,36.8744245460952,32.1740690764178,67.4532985234525,77.7705331943022,37.5739100373171,34.5383940817199,50.6749882029717,37.1653697009988,91.440899524168,38.0784083227377,31.3356677384776,28.7669176416523,85.2540467771953,42.195797471641,36.9111101758473,97.2308674087413,82.497995491034,47.2366882667949,23.2244332718691,18.2356501758924,32.2163479297042,38.4124507079181,88.4601875801951,48.2520225847126,27.2676273523409,29.5566042561664,70.7568854869562,76.3511163669398,48.5679293346575,88.8617557993056,43.3040061743866,77.7705331943022,68.914138708876,90.5268534870741,82.4645377549026,31.9376242321594,35.9638817948535,65.7813236380896,37.1249462197392,48.7661774087213,42.3609372641739,70.7387645458062,85.9568881433435,32.3508059147288,37.2959605996863,86.4776860867728,28.7669176416523,29.6780185592199,74.1308346955403,55.1012448166244,35.5341582107865,25.7973502213383,34.678210881314,48.9447282005411,29.7741224045734,39.7410924199234,77.475508271844,52.8543492838446,28.1224382927797,63.9581295865765,83.3845494688124,36.7481453865196,27.9703227177777,38.2177347159355,45.5280281521112,28.8812301051869,40.6111828414464,95.2446075547681,87.3866746773291,43.8004332110809,35.917025612084,24.5319278968076,88.7415970048742,29.3898628779614,32.3439000427758,35.5262392826211,74.503415314301,73.0672492142898,71.7787565488655,26.8991724462669,66.3971829302589,89.9494971557161,31.2024941279443,26.9922683043897,62.8577881215464,33.7084356623353,80.6356274778249,66.6032941506757,48.3620618549945,28.9620818380608,70.8408090497282,37.9003327209273,75.7028387536729,58.327978335757,39.8096434622835,61.0353231334476,32.8651317751064,97.4426178674645,26.4859050191824,43.0012537995351,36.1328013797135,41.2350878592031,27.1881327331633,72.47814262868,18.2356501758924,54.4695544928654,28.7669176416523,43.8078670603264,37.3779995937712,90.5985683888769,92.2765867914063,30.6960563451167,46.4486926211693,59.6119593424212,78.5869280849184,57.7133525459016,37.9455054037214,55.2475125808749,45.5511945268617,38.8689278342271,39.5472318883459,78.8708708813506,86.4573893067351,43.2224296261516,79.0015042953896,33.2793228055466,42.9410922268653,30.5585323103319,98.7850116765314,38.7512203579652,77.7705331943022,28.7669176416523,77.6389009306547,38.7387368444761,29.7509372269647,39.5472318883459,29.7215212000102,72.7774389511554,54.2942559339216,20.1642426911479,40.6226727631633,45.4079450217737,92.1949059569489,25.8629329191603,44.849105275039,49.109371562799,61.2711675223594,49.6419662453238,74.9193000992384,38.7624479449909,88.2763602537203,43.3461264569027,74.9193000992384,48.8747548612432,75.8540472126401,37.5999065033682,40.5792646415552,77.3042530238021,27.9703227177777,74.7131235562997,64.8179726419246,49.5393041371522,71.0739163692569,48.6182016659597,34.678210881314,52.3732514339382,43.2802950738718,95.1154969807277,90.4030606572862,45.2399739192364,70.2084075775004,72.0064422035304,94.4571145373966,82.9007417788471,29.4438249916125,96.6524349271358,35.3023670216872,44.7294928429169,35.5362238788535,36.1948106465764,40.227139199502,50.0131356051209,81.3291419995745,41.2675886691358,17.7917681092873,80.0143788164416,42.0391751997443,86.0108269971627,34.5153208159373,42.2105522833429,33.7179303048327,30.8231647803765,22.5784346346488,40.7922696861676,24.5319278968076,36.1517666388341,61.4822818351256,74.1533073144657,97.730226646702,77.8291644058301,39.2650887343582,23.4925735195598,35.4446304213262,49.5236150323214,64.7687276082588,72.7774389511554,94.5765667970234,88.5457350135081,95.0361227520722,42.283963916762,30.8204326554487,39.4887742202346,33.2155479677146,44.5288360530854,42.6617718519556,27.9518842172458,69.5900876353727,33.3513430448735,84.6670761440398,63.3930802307617,38.5769397822789,58.0273895257052,65.1623426884481,66.4459959160289,57.5223812475776,20.1315720287301,29.9346721408738,89.2949236143222,79.2707426299956,57.5003712137825,47.0716799898087,35.5837445511476,36.0573969044826,45.9510524867441,47.8853441483014,31.5328710003909,33.2729292766578,54.44366337505,30.0966735971029,59.1165732876656,61.9765420513402,55.6703880247274,48.7928872169081,45.8366901956355,32.237692934263,81.6310131819613,68.180367302672,48.5892461349291,90.2262298743248,44.9540104597263,97.3698436335263,86.8393392852459,31.5496024799647,76.4587860592549,55.3275308596517,24.5319278968076,59.2132966523746,66.1354868573037,29.5221269872826,54.8840974501339,75.8311065592375,34.6046637106259,66.1857797498795,37.1901731953413,40.2966809435653,31.4245505202635,63.4812001388088,93.2084790564108,32.1136212998731,82.2936637173994,32.8279249579828,73.2720129487701,91.4671178639452,93.374499588747,81.1847670389665,86.8209544076798,38.5784729812596,16.6537632136517,36.4057992413439,47.2444082328651,95.280735227115,44.5787520702259,47.8925871485368,86.0840384497828,49.4270858941729,40.5339345718744,87.4433540303118,58.9837758039353,59.0809089316713,35.6498088806988,42.7508377875078,87.3445970146247,36.4422900177736,36.9930293539417,63.6819747772948,31.6457750602107,65.4708365856724,47.9838882564402,36.0944013993706,50.6598068449509,52.0305050490351,39.5575261746159,87.3188240066145,86.8731370571387,93.0180516481686,49.1268380948456,42.0294097264494,49.0214238401843,31.2445939362371,41.8993881017021,49.5781678342789,47.8380232041449,43.76774538235,33.0682628121483,51.4800898880693,86.585443456119,72.4701434227564,55.9906344917407,62.247688475616,31.2638095867519,15.1902249573658,39.8513494551586,46.4506713782476,68.7709493381139,46.296443998536,29.248008127106,29.3016653558943,31.9840026830518,94.8118989125113,69.4879957761043,32.6997908268115,97.239673257279,42.3448475888245,38.0509901342806,21.2244157844373,69.2105148256121,48.3666076026399,27.3209505518365,32.5455756689576,44.3536413277026,29.4333511032272,89.1095112765465,83.9165969707553,36.1517666388341,37.0023260441271,36.0225857107662,52.9281858792677,47.983941879406,94.0313387874963,44.1939123013398,31.879605732656,85.9577906805342,76.3793527756969,43.2378790990014,75.6953804084817,27.9513656413824,51.6874056056502,77.3037677011415,74.5428094261277,46.5235619809857,87.6278170849023,97.1406214719704,94.0887621591296,29.6882900034993,35.0527838718152,71.7590471840441,95.6392204573727,19.9286057430276,41.414391914412,91.9731353680733,42.9762539720155,40.2966809435653,48.1959014328758,33.1359219026305,54.2240070282917,71.2880074530274,37.2807304935148,93.2880702317471,42.1747694693423,34.6371280290857,84.885178138602,47.9485453074497,38.4377710719388,89.0799927740152,33.4604404312431,42.9414160364565,45.6791378090229,79.3735261558827,30.0294992025194,85.2323006449962,55.3414633596911,39.2940287008007,37.1847527665913,83.3467328297332,59.2960919217879,65.8854882164969,38.4679051417434,98.0891925163158,32.494536076583,84.99396776745,42.4244751859934,67.0418931016253,58.2182883982052,28.9300785378265,39.0961917129279,41.9791226662417,90.3595097210065,60.4616219558413,67.5497296081777,63.7023251454782,41.7264932444305,68.8891413884042,71.4564777192181,40.2540303508095,49.0793171439906,74.9193000992384,49.6799089331927,42.5581472115478,62.2171547232055,72.4683478194444,44.9581317502593,42.1519765054264,51.9631498858626,63.4119701913996,85.6502934740716,43.4076040729517,28.7669176416523,81.1536615403882,42.7052652305973,31.5966283759389,92.5646292202646,24.3118935777806,55.6168597696178,21.8176230644865,33.5457473272523,34.6748750453596,26.4021360750985,41.3443817702603,29.3016653558943,82.7070244971925,77.487365319366,60.2369645188897,43.0911133723912,42.5003157482527,46.5996464929193,35.9713483401801,97.6011653257039,67.1784238057888,68.982192624559,57.5820465292529,63.640691900958,77.8133201425996,39.2792340548956,77.7216290494904,45.9752666681744,14.7688479097963,68.9411611668096,93.0256978478406,43.0236925559058,55.5855718136753,63.0166485429135,35.2980867947728,32.3695430325041,75.7421480611275,29.2488337814989,70.8209065725897,37.3126560752688,25.6291146426733,36.0236642984212,32.9525865146368,42.6716150785509,83.5592306846573,48.4550831458566,15.347619730761,27.1881327331633,65.9576242326818,16.2838967874633,91.2088333258585,30.6529733562639,39.6225012615591,98.1496409196225,86.070220629768,70.6138010291785,66.5014888608933,72.0173644704421,29.3016653558943,29.5835003519293,91.1006345942376,38.5137398940646,92.4145575681725,57.2832397426712,28.3251056304479,96.2801892081706,33.4793762325526,86.4992837460328,81.2063875402172,42.7161023623457,40.3702210109515,38.45372228513,80.3449436478293,66.2406657106271,46.2706035787973,46.5637422263832,45.8301950964926,56.838730217726,85.9760411524847,43.0095250027297,71.0968355908833,69.8686395827364,91.6484263908819,64.0563846530016,36.6269273992331,37.5797095873993,75.1647808833059,13.8969015417147,43.744593074923,22.2059986586153,86.7187292918593,48.8053023959359,82.2614423736509,19.2866886143673,46.0547966297614,36.0236642984212,48.1404109254189,33.8306772389167,32.0811144312417,36.3696685570577,37.8092349624527,33.6296097459152,48.1627939696174,30.5400266069921,73.1024761600917,35.7823637379189,42.1011059994946,36.7793208038741,13.5807708636574,34.6438030437249,89.1454262850858,51.395606417966,30.082849596519,43.4646550957637,61.7777353582891,29.4606010409241,30.1336486515899,29.8649287883871,22.8392143816508,46.2378749060802,48.8772022969707,85.6239616729736,38.5362183801782,63.5498719721224,34.0820817241603,80.3481103102907,43.1572374706572,37.6666296293564,49.7711642700646,90.3291438189251,50.6698595493139,84.8713749082124,82.8351487742733,79.6898342423885,35.7377368951326,39.6399725987805,35.0873521604604,78.0787975573768,42.4989296294068,32.3805185393604,42.1377908632043,45.0161080477923,40.129650001345,26.0801312796985,53.7711912711236,85.1790237910639,93.6060427890394,39.3378432601155,76.970408347193,18.2356501758924,39.5513791372692,37.4107507950981,36.5417723188932,50.5570189491403,43.4646979070861,50.2821496285933,32.1219951179249,37.3589037244267,43.5478788614219,13.9825740488545,34.5301697812104,35.5305146347205,41.5190052369568,74.8482283596443,65.4769426397524,43.8570542229733,81.1807955967668,91.6731736681606,36.4937912029054,38.0919229814851,87.3036787918655,29.7089386059048,51.9365413867791,36.4545823514615,44.9469522498023,80.824761806549,38.3593324943964,95.9052196514632,29.6263969835658,70.0596415923954,86.2458846605619,32.2994615767719,42.9604076195785,44.46081371924,82.0110050168975,35.7076826852448,83.6051465330093,36.9977850842465,55.8286239126434,54.7064995453805,93.6118746347715,53.3055137148168,33.0338942864607,33.0094722289876,68.7750668854854,82.5478207669739,78.5780188032508,91.0050991697316,15.8296089057834,35.1701181635733,89.1607866706902,82.1428333873914,38.1112662476946,54.8725821967886,63.4134707465293,95.6008439980125,26.3408813251486,74.0623131806315,38.9558220396644,47.4170947614325,57.7119583487908,29.1691595253858,93.2926664163185,37.6664498879606,62.6648818872496,36.6832684922799,82.0110050168975,27.1881327331633,66.3302572382945,92.0225927869859,85.3733207578709,37.8890415349749,32.098921434301,77.8586043193784,43.104979070054,89.7926049061147,27.9918142453496,51.9324437565092,79.3126158812579,32.7565242380115,33.9838984916174,81.5241374577411,47.6879160877731,58.9829828804436,60.1374746792167,38.5784729812596,38.868877971833,20.0283163421831,86.1895783876227,34.5712435105705,47.7891034599249,70.2896995758155,95.5953692847147,33.8720408456731,30.249922462149,24.5319278968076,15.859599029263,73.356293539516,64.8142900847481,93.2938579952228,73.3299198498284,35.0440125474142,16.2838967874633,84.6466388996878,48.9657371562408,55.440037273842,44.4281639488868,41.4446901436142,47.374007663807,46.6752967981103,53.71534605123,70.2635787149297,39.0939130850824,29.2318958883269,67.3260683570963,33.0518165788965,39.3625474301008,68.9775735283567,80.0814740997405,28.9447865513037,48.808413363635,72.5996114077919,46.1977944551112,39.9302505656011,91.1451037193463,91.8277393600383,39.1374561868379,76.6276259582986,47.26186128953,43.1513725458228,44.9342423882033,93.1238808192328,41.1176968803098,25.7191230888997,48.516294388082,45.9021722981664,56.56596342233,69.8805096877988,32.3334853311635,55.569265766177,33.8516934546089,40.0753741585239,32.9527787564512,33.9431845932499,80.0785592388877,32.0739348036023,57.2477110458163,92.4488256378495,40.60210899995,31.6850944829065,45.0353137745764,75.7150760541807,53.3010695026053,47.2435789049508,43.360905956061,65.7639996073337]},&#34;error_y&#34;:{&#34;width&#34;:[]},&#34;error_x&#34;:{&#34;width&#34;:[]},&#34;frame&#34;:null},{&#34;x&#34;:[0.00114699718998928,0.999364516314338],&#34;y&#34;:[0.0890940946691176,0.956050857843137],&#34;type&#34;:&#34;scatter3d&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;opacity&#34;:0,&#34;hoverinfo&#34;:&#34;none&#34;,&#34;showlegend&#34;:false,&#34;marker&#34;:{&#34;colorbar&#34;:{&#34;title&#34;:&#34;cluster_num&#34;,&#34;ticklen&#34;:2,&#34;len&#34;:0.5,&#34;lenmode&#34;:&#34;fraction&#34;,&#34;y&#34;:1,&#34;yanchor&#34;:&#34;top&#34;},&#34;cmin&#34;:1,&#34;cmax&#34;:12,&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0&#34;,&#34;rgba(18,170,216,1)&#34;],[&#34;0.0909090909090909&#34;,&#34;rgba(241,120,195,1)&#34;],[&#34;0.181818181818182&#34;,&#34;rgba(233,224,206,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.272727272727273&#34;,&#34;rgba(223,54,88,1)&#34;],[&#34;0.363636363636364&#34;,&#34;rgba(147,61,182,1)&#34;],[&#34;0.363636363636364&#34;,&#34;rgba(147,61,182,1)&#34;],[&#34;0.454545454545455&#34;,&#34;rgba(101,150,52,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.545454545454545&#34;,&#34;rgba(230,42,177,1)&#34;],[&#34;0.636363636363636&#34;,&#34;rgba(115,210,176,1)&#34;],[&#34;0.636363636363636&#34;,&#34;rgba(115,210,176,1)&#34;],[&#34;0.727272727272727&#34;,&#34;rgba(245,232,111,1)&#34;],[&#34;0.727272727272727&#34;,&#34;rgba(245,232,111,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.818181818181818&#34;,&#34;rgba(234,197,71,1)&#34;],[&#34;0.909090909090909&#34;,&#34;rgba(67,99,194,1)&#34;],[&#34;1&#34;,&#34;rgba(147,213,95,1)&#34;],[&#34;1&#34;,&#34;rgba(147,213,95,1)&#34;]],&#34;showscale&#34;:true,&#34;color&#34;:[1,12],&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;}},&#34;z&#34;:[0.0486157136804917,0.988726058660769],&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Voronoi diagram with ggvoronoi package with Train Station data</title>
      <link>/2018/11/10/voronoi-diagram-with-ggvoronoi-package-with-train-station-data/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/10/voronoi-diagram-with-ggvoronoi-package-with-train-station-data/</guid>
      <description>&lt;p&gt;I’ve always been curious to make Voronoi diagram, I just think they are beautiful! When I came across data set with train stations in Japan. I instantly thought this would be great data sets to make Voronoi diagram! I’ve gotten data sets from (Ekidata)[&lt;a href=&#34;http://www.ekidata.jp/&#34; class=&#34;uri&#34;&gt;http://www.ekidata.jp/&lt;/a&gt;] site. I’m amazed how many train stations we have in Japan, as well as coverage of train systems in Japan.&lt;/p&gt;
&lt;p&gt;There are couple of packages I could’ve used to make Voronoi diagram, but I’ve utilized package &lt;a href=&#34;https://cran.r-project.org/web/packages/ggvoronoi/index.html&#34;&gt;ggvoronoi&lt;/a&gt;. I really like using “outline” inside of geom_voronoi function to mask out the shape! (Which I wasn’t sure how to do before using &lt;a href=&#34;https://cran.r-project.org/web/packages/deldir/index.html&#34;&gt;deldir&lt;/a&gt; package).&lt;/p&gt;
&lt;div id=&#34;voronoi-diagram-with-train-station-as-a-seed.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Voronoi Diagram with Train Station as a seed.&lt;/h2&gt;
&lt;p&gt;ggvoronoi makes it easy to plot voronoi diagram! All I really needed to produce voronoi diagram was longitude &amp;amp; latitude.&lt;/p&gt;
&lt;p&gt;Initially I’ve plotted all the train station as a point (using geom_point), you can see that station will reveal shape of Japan, as JR (Japan Railway) really covers coast line of Japan. There are total of 10828 points, as there were 10828 stations listed in most recent data set downloaded today.&lt;/p&gt;
&lt;p&gt;I also used treemap package to create treemap.&lt;br /&gt;
I’ve colour coded rectangle inside of treemap with company types. 47% of 10K+ stations are JR &lt;a href=&#34;https://en.wikipedia.org/wiki/Japan_Railways_Group&#34;&gt;Japan Railway&lt;/a&gt; stations in Japan.&lt;/p&gt;
&lt;p&gt;Tokyo (area: 2,188 sq.km) has 943 stations all together, followed by Hokkaido 650 stations, but Hokkaido is the biggest prefecture in terms of area (83,456.87 sq.km) . It would be interesting to get &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_Japanese_prefectures_by_area&#34;&gt;area data&lt;/a&gt; for each prefecture, so we can calculate stations per area.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;jp &amp;lt;- ggplot2::map_data(&amp;#39;world2&amp;#39;, region=&amp;#39;japan&amp;#39;)
names(jp) &amp;lt;- c(&amp;quot;lon&amp;quot;,&amp;quot;lat&amp;quot;, &amp;quot;group&amp;quot;,&amp;quot;order&amp;quot;,&amp;quot;region&amp;quot;,&amp;quot;subregion&amp;quot;)
## for train, I&amp;#39;m going to tidy up the map bit. (I&amp;#39;ve excluded Okinawa for now)
jp_outline &amp;lt;- jp %&amp;gt;% filter(subregion %in% c(&amp;quot;Honshu&amp;quot;,&amp;quot;Hokkaido&amp;quot;,&amp;quot;Kyushu&amp;quot;,&amp;quot;Shikoku&amp;quot;))

## I also wanted prefecture level data, so I&amp;#39;ve used map data from mapdata package.
jp_outline_detailed &amp;lt;- map_data(&amp;quot;japan&amp;quot;)


## station_master lists all stations of all lines
plotPoints &amp;lt;-station_master %&amp;gt;%
  ggplot(aes(x=lon, y=lat)) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  geom_polygon(data=jp_outline, aes(group=group), fill=&amp;quot;#ffffff&amp;quot;, color=&amp;quot;#33333380&amp;quot;) +
  geom_point(aes(color=pref_cd),size=0.1, alpha=0.8) +
  scale_color_viridis_c(end=0.5, guide=&amp;quot;none&amp;quot;) +
  labs(title=&amp;quot;Each Train Station as a point&amp;quot;) +
  coord_quickmap()

## station_master2 is reduced version of station_master
plotVoronoi &amp;lt;-station_master2 %&amp;gt;%
  ggplot(aes(x=lon, y=lat)) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  geom_polygon(data=jp_outline, aes(group=group), fill=&amp;quot;#ffffff00&amp;quot;, color=&amp;quot;#33333380&amp;quot;) +
  geom_path(stat=&amp;quot;voronoi&amp;quot;, size=0.1, aes(color=pref_cd)) +
  coord_quickmap() +
  scale_color_viridis_c(end=0.5, guide=&amp;quot;none&amp;quot;) +
  labs(title=&amp;quot;Voronoi Diagram with station as a seed&amp;quot;)

## use patchwork package to plot 2 plots side by side
plotPoints + plotVoronoi&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/voronoi_japan-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## All of Japan - Takes long time to draw on my machine.
station_master2 %&amp;gt;% 
  ggplot(aes(x=lon, y=lat)) +
  theme_void(base_family=&amp;quot;Hiragino Sans W5&amp;quot;) +
  geom_voronoi(aes(fill=station_cnt),size=0.05, color=&amp;quot;#ffffff&amp;quot;, 
               outline=jp_outline) + ## this outline feature is awesome!
  coord_quickmap() +
  scale_fill_viridis_c(end=0.8, option=&amp;quot;magma&amp;quot;, guide=&amp;quot;none&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/voronoi_japan-2.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;treemap-with-treemap-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Treemap with treemap package&lt;/h2&gt;
&lt;p&gt;With treemap, I can easily see which prefecture has more stations. Also I wanted to see which railway company are dominant in each prefecture.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Treemap to see which prefecture has more stations.
station_master %&amp;gt;% 
  count(pref_name,company_type_descr,company_name_r) %&amp;gt;%
  add_count(pref_name,wt=n) %&amp;gt;%
  mutate(pref_descr = paste(pref_name,&amp;quot;:&amp;quot;,nn,&amp;quot;駅&amp;quot;)) %&amp;gt;%
  treemap(index=c(&amp;quot;pref_descr&amp;quot;,&amp;quot;company_type_descr&amp;quot;,&amp;quot;company_name_r&amp;quot;),
          vSize=&amp;quot;n&amp;quot;, vColor=&amp;quot;company_type_descr&amp;quot;, type=&amp;quot;categorical&amp;quot;,
          fontfamily.labels=&amp;quot;Hiragino Sans W3&amp;quot;,
          align.labels=list(c(&amp;quot;left&amp;quot;,&amp;quot;top&amp;quot;),c(&amp;quot;center&amp;quot;,&amp;quot;center&amp;quot;),c(&amp;quot;right&amp;quot;,&amp;quot;bottom&amp;quot;)),
          fontsize.labels=c(13,0,11),
          palette=viridis_pal(end=0.6)(4),
          border.col=&amp;quot;white&amp;quot;,
          bg.labels=0,
          position.legend=&amp;quot;bottom&amp;quot;,
          title.legend=&amp;quot;&amp;quot;, 
          title=&amp;quot;Number of Stations by Prefecture\ncoloured by operating company types&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/treemap_prefecture_train_company-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;writing-function-to-plot-prefecture-level-voronoi&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Writing Function to Plot Prefecture Level Voronoi&lt;/h3&gt;
&lt;p&gt;There are 47 prefectures in Japan. So I’ve decided to write function to draw voronoi as below. I think below can be simplified…, but for now it does the job…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## function to draw voronoi map at prefecture level
draw_pref &amp;lt;- function(pref_no=1,zoom=T,save_file=F,folder_name=&amp;quot;prefecture&amp;quot;,...){
  region &amp;lt;- prefs %&amp;gt;% filter(pref_cd==pref_no) %&amp;gt;% pull(pref_name_en)
  region_jp &amp;lt;- prefs %&amp;gt;% filter(pref_cd==pref_no) %&amp;gt;% pull(pref_name) 
  pref_summary  &amp;lt;- station_master %&amp;gt;% 
    filter(pref_cd==pref_no) %&amp;gt;% 
    summarise(station_cnt=n(),
              line_cnt =n_distinct(line_name), 
              company_count=n_distinct(company_name_r))
  
  tmp_df &amp;lt;- station_master2 %&amp;gt;% filter(pref_cd==pref_no)
  pref_outline &amp;lt;- map_data(&amp;quot;japan&amp;quot;, region=region)
  
  capital &amp;lt;-jpnprefs %&amp;gt;% mutate(pref_cd=row_number()) %&amp;gt;% filter(pref_cd==pref_no)
  
  ## calculate distance between capital city &amp;amp; each station so i can colour the cell of voronoi.
  tmp_df &amp;lt;- tmp_df %&amp;gt;%
    mutate(dist_from_capital = 
             sqrt((lon-capital$capital_longitude)^2 + (lat-capital$capital_latitude)^2))
  
  # finding bounding box from train station data... , so I can crop the map if I want to.
  bbox &amp;lt;-tmp_df  %&amp;gt;% ungroup() %&amp;gt;% 
    summarise(xmax=max(lon), xmin=min(lon), ymax=max(lat), ymin=min(lat))
  
  
  base_map &amp;lt;-tmp_df %&amp;gt;% ggplot(aes(x=lon,y=lat)) +
    theme_void(base_family=&amp;quot;Hiragino Sans W5&amp;quot;) +
    #geom_voronoi(aes(fill=comp_cd_min) ,size=0.1, color=&amp;quot;#ffffff&amp;quot;, 
    #           outline=pref_outline) +
    geom_voronoi(aes(fill=dist_from_capital) ,size=0.1, color=&amp;quot;#ffffff&amp;quot;, 
               outline=pref_outline) +
    #scale_fill_gradientn(colors = c(&amp;quot;#440154FF&amp;quot;,&amp;quot;#000000FF&amp;quot;,&amp;quot;#31688EFF&amp;quot;, &amp;quot;#1F9E89FF&amp;quot;,&amp;quot;#6DCD59FF&amp;quot;),
                       #breaks=c(0,7,30,100,200), limits=c(1,250), guide=&amp;quot;none&amp;quot;) +
    scale_fill_viridis_c(end=0.9, guide=&amp;quot;none&amp;quot;, option=&amp;quot;magma&amp;quot;) +
    labs(title=paste0(region_jp,&amp;quot; (&amp;quot;,region,&amp;quot;)&amp;quot;), 
         caption=paste0(&amp;quot;Capital City of &amp;quot;,region,&amp;quot; is &amp;quot;,capital$capital, &amp;quot; @ (&amp;quot;,
                        round(capital$capital_longitude,2),&amp;quot;,&amp;quot;, round(capital$capital_latitude,2),&amp;quot;)&amp;quot;),
         subtitle=paste(pref_summary$station_cnt,&amp;quot;stations&amp;quot;, 
                       pref_summary$line_cnt,&amp;quot; lines operated by&amp;quot;, 
                       pref_summary$company_count, &amp;quot;companies in&amp;quot;, 
                       str_to_title(region))) +
    geom_point(data=capital, aes(x=capital_longitude, y=capital_latitude),shape=4, color=&amp;quot;#ffffff&amp;quot;) 
  
  if (zoom) {
    print(base_map + 
            coord_quickmap(xlim=c(bbox$xmin-0.1,bbox$xmax+0.1), 
                           ylim=c(bbox$ymin-0.1,bbox$ymax+0.1)))
    } else {
    print(base_map + coord_quickmap())
    }
  
  if(save_file){
    ggsave(paste0(folder_name,&amp;quot;/&amp;quot;,
                  formatC(pref_no, width=2,flag=&amp;quot;0&amp;quot;),&amp;quot;-&amp;quot;,str_to_lower(region),&amp;quot;.png&amp;quot;),
           width=9,height=9,dpi=300)
  }
  
}


## function to draw treemap at prefecture level
draw_treemap &amp;lt;- function(pref_no=1,...){
  station_master$color &amp;lt;- 
    viridis_pal(end=0.6)(nlevels(station_master$company_type_descr))[station_master$company_type_descr]
  title_text &amp;lt;- prefs %&amp;gt;% filter(pref_cd==pref_no) %&amp;gt;% pull(pref_name_en)
  
  station_master %&amp;gt;% 
    filter(pref_cd==pref_no) %&amp;gt;%
    count(company_type_descr,company_name_r,line_name,color,station_name) %&amp;gt;%
    treemap(index=c(&amp;quot;company_type_descr&amp;quot;,&amp;quot;company_name_r&amp;quot;,&amp;quot;line_name&amp;quot;,&amp;quot;station_name&amp;quot;),
            vSize=&amp;quot;n&amp;quot;, vColor=&amp;quot;color&amp;quot;, type=&amp;quot;color&amp;quot;,
            fontfamily.labels=&amp;quot;Hiragino Sans W3&amp;quot;,
            fontfamily.title=&amp;quot;Roboto Condensed&amp;quot;,
            align.labels=list(c(&amp;quot;center&amp;quot;,&amp;quot;center&amp;quot;),c(&amp;quot;left&amp;quot;,&amp;quot;top&amp;quot;),
                              c(&amp;quot;right&amp;quot;,&amp;quot;bottom&amp;quot;),c(&amp;quot;center&amp;quot;,&amp;quot;center&amp;quot;)),
            fontsize.labels=c(0,13,11,0),
            border.col=c(&amp;quot;#ffffffff&amp;quot;,&amp;quot;#ffffff90&amp;quot;,&amp;quot;#ffffff30&amp;quot;,&amp;quot;#ffffff10&amp;quot;),
            border.lwds = c(3,2,1,0.2),
            bg.labels=0,
            title.legend=&amp;quot;&amp;quot;, title=&amp;quot;&amp;quot;,
            aspRatio = 16/9)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tokyo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tokyo!&lt;/h2&gt;
&lt;p&gt;While it’s interesting to see Voronoi map of Japan, I wanted to zoom into selected prefectures that I care maybe more about.&lt;/p&gt;
&lt;p&gt;Firstly, Tokyo. I love looking at Tokyo’s train map such as this one. &lt;a href=&#34;https://www.jreast.co.jp/e/downloads/pdf/routemap_e.pdf&#34;&gt;JR East Route Map PDF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For below voronoi diagram, I’ve decided to colour the voronoi cell with distance from Shinjuku (capital city of Tokyo) to corresponding station cell. (I actually think it’s more interesting to get train usage data, and colour the cell with train usage data, but because there are so many different operating company, getting data about train usage seemed like pretty hard task to do…)&lt;/p&gt;
&lt;p&gt;I like how dense train staions are packed around central tokyo (east side), but as you go towards the west, cell becomes bigger and bigger. In fact, far west side of Tokyo, there are NOT that many stations at all.&lt;/p&gt;
&lt;p&gt;I’ve also created treemap for Tokyo below. Personally I was surprised that there are maybe more Tokyo metro stations than JR stations in Tokyo. I’ve also came to realize that there are so many companies…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_pref(13, zoom=T, save_file=F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Tokyo-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_treemap(13)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Tokyo-2.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;station_master %&amp;gt;% 
  filter(pref_cd==13) %&amp;gt;%
  arrange(e_sort) %&amp;gt;%
  ggplot(aes(x=lon, y=lat)) +
  geom_sf(data=jpn_pref(13), inherit.aes=F, color=&amp;quot;#33333320&amp;quot;) +
  geom_point(aes(color=company_name_r, shape=company_type_descr), alpha=0.8) +
  theme(axis.text=element_blank(),
        axis.title=element_blank()) +
  theme_minimal(base_family=&amp;quot;Hiragino Sans W5&amp;quot;) +
  geom_text_repel(data=station_master2 %&amp;gt;% filter(pref_cd==13 &amp;amp; station_cnt&amp;gt;6), 
            aes(label=station_name),
            family=&amp;quot;Osaka&amp;quot;, min.segment.length=0, nudge_x=0.25, segment.color=&amp;quot;#33333350&amp;quot;) +
  scale_color_hue(l=45) +
  coord_sf(ylim=c(35.5,35.9), xlim=c(138.8,139.9)) ## to remove islands of Tokyo&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Tokyo-3.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting-kanagawa-prefecture&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plotting Kanagawa Prefecture&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanagawa_Prefecture&#34;&gt;Kanagawa&lt;/a&gt; prefecture is where &lt;a href=&#34;https://en.wikipedia.org/wiki/Yokohama&#34;&gt;Yokohama&lt;/a&gt;, Also where one of my favourite place, &lt;a href=&#34;https://en.wikipedia.org/wiki/Kamakura&#34;&gt;Kamakura&lt;/a&gt; is. I like the shape of prefecture, as it sort of looks like a dog?! Maybe camel?!&lt;/p&gt;
&lt;p&gt;Capital city of Kanagawa prefecture is Yokohama, and I’ve again coloured cell based on distance from Yokohama. Similar to Tokyo, east side of Kanagawa has a lot of stations but west side is pretty sparse.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_pref(14, zoom=T, save_file=F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Kanagawa-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_treemap(14)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Kanagawa-2.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## See Station in Kanagawa
station_master %&amp;gt;% 
  filter(pref_cd==14) %&amp;gt;%
  arrange(e_sort) %&amp;gt;%
  ggplot(aes(x=lon, y=lat)) +
  geom_sf(data=jpn_pref(14), inherit.aes=F, color=&amp;quot;#33333320&amp;quot;) +
  geom_point(aes(color=company_name_r, shape=company_type_descr), alpha=0.8) +
  theme(axis.text=element_blank(),
        axis.title=element_blank()) +
  theme_minimal(base_family=&amp;quot;Hiragino Sans W5&amp;quot;) +
  geom_text_repel(data=station_master2 %&amp;gt;% filter(pref_cd==14 &amp;amp; station_cnt&amp;gt;3), 
            aes(label=station_name),
            family=&amp;quot;Osaka&amp;quot;, min.segment.length=0, nudge_x=0.25, segment.color=&amp;quot;#33333350&amp;quot;) +
  scale_color_hue(l=45)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Kanagawa-3.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting-chiba-prefecture&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plotting Chiba Prefecture&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Chiba_Prefecture&#34;&gt;Chiba&lt;/a&gt; is where Narita Airport is. I just had to plot it out, because I like the shape of prefecture :) It looks like a hummingbird to me, but Chiba prefecture actually have a maskot called &lt;a href=&#34;http://japan-chiba-guide.com/en/about-chiba/chibakun.html&#34;&gt;Chi-ba-kun&lt;/a&gt;, and it’s a dog character.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_pref(12, zoom=T, save_file=F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Chiba-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_treemap(12)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Chiba-2.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## See Station in Chiba
station_master %&amp;gt;% 
  filter(pref_cd==12) %&amp;gt;%
  arrange(e_sort) %&amp;gt;%
  ggplot(aes(x=lon, y=lat)) +
  geom_sf(data=jpn_pref(12), inherit.aes=F, color=&amp;quot;#33333320&amp;quot;) +
  geom_point(aes(color=company_name_r, shape=company_type_descr), alpha=0.8) +
  theme(axis.text=element_blank(),
        axis.title=element_blank()) +
  theme_minimal(base_family=&amp;quot;Hiragino Sans W5&amp;quot;) +
  geom_text_repel(data=station_master2 %&amp;gt;% filter(pref_cd==12 &amp;amp; station_cnt&amp;gt;3), 
            aes(label=station_name),size=3,
            family=&amp;quot;Osaka&amp;quot;, min.segment.length=0, nudge_x=0.25, segment.color=&amp;quot;#33333350&amp;quot;) +
  scale_color_hue(l=45)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Chiba-3.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bonus-plotting-hokkaido-prefecture&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bonus: Plotting Hokkaido Prefecture&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Hokkaido&#34;&gt;Hokkaido&lt;/a&gt; is the largest prefecture in Japan, and it has 2nd most numbers of train stations. (While it has 2nd most stations in number, Hokkaido is about 37 times bigger than Tokyo in area).&lt;/p&gt;
&lt;p&gt;Shape of Hokkaido is pretty iconic (at least in my mind.) I recently found out there’s heart-shaped lake called &lt;a href=&#34;(https://www.google.ca/maps/@42.089482,143.2694329,17z)&#34;&gt;Toyoni lake&lt;/a&gt; in Hokkaido too, but I didn’t spot heart-shaped Voronoi cell…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_pref(1, zoom=T, save_file=F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Hokkaido-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_treemap(1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Hokkaido-2.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## To see station on actual map
station_master %&amp;gt;% 
  filter(pref_cd==1) %&amp;gt;%
  arrange(e_sort) %&amp;gt;%
  ggplot(aes(x=lon, y=lat)) +
  geom_sf(data=jpn_pref(1), inherit.aes=F, color=&amp;quot;#33333320&amp;quot;) +
  geom_point(aes(color=company_name_r, shape=company_type_descr), alpha=0.8) +
  theme(axis.text=element_blank(),
        axis.title=element_blank()) +
  theme_minimal(base_family=&amp;quot;Hiragino Sans W5&amp;quot;) +
  geom_text_repel(data=station_master2 %&amp;gt;% filter(pref_cd==1 &amp;amp; station_cnt&amp;gt;=3), 
            aes(label=station_name),
            family=&amp;quot;Osaka&amp;quot;, min.segment.length=0, nudge_x=2, segment.color=&amp;quot;#33333350&amp;quot;) +
  scale_color_hue(l=45, name=&amp;quot;company name&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-10-voronoi-diagram-with-ggvoronoi-package-with-train-station-data_files/figure-html/Hokkaido-3.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Phyllotaxis Sprial and Prime Numbers - Experiment</title>
      <link>/2018/10/28/phyllotaxis-sprial-and-prime-numbers-experiment/</link>
      <pubDate>Sun, 28 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/28/phyllotaxis-sprial-and-prime-numbers-experiment/</guid>
      <description>&lt;p&gt;I recently tried out &lt;a href=&#34;https://www.datacamp.com&#34;&gt;Data Camp’s&lt;/a&gt; project called &lt;a href=&#34;https://www.datacamp.com/projects/62&#34;&gt;“Phyllotaxis: Draw flowers using mathematics”&lt;/a&gt;. Now I’m hooked on drawing spirals using &lt;a href=&#34;https://en.wikipedia.org/wiki/Golden_angle&#34;&gt;golden angle&lt;/a&gt;. Also the mathematical art on instructor’s blog, &lt;a href=&#34;https://fronkonstin.com/category/drawings/&#34;&gt;Fronkostin&lt;/a&gt; is just amazing!&lt;/p&gt;
&lt;p&gt;Separately on twitter, I’ve gotten message on art with prime number, and that got me thinking to experiment with prime number &amp;amp; phyllotaxis flowers. I couldn’t figure out how I’d generate prime numbers in R, but I came across site where you can &lt;a href=&#34;http://www.naturalnumbers.org/primes.htm&#34;&gt;download prime numbers&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(patchwork)

## Read first 10000 digits of prime number!
prime &amp;lt;- read_csv(file=&amp;quot;http://www.naturalnumbers.org/P-10000.txt&amp;quot;, col_names=F)
names(prime) &amp;lt;- c(&amp;quot;nth_prime&amp;quot;,&amp;quot;prime&amp;quot;,&amp;quot;int&amp;quot;)  ## int = interval from previous prime number


## Function to Draw Frlower
my_flower &amp;lt;- function(points=5000,num_colour=9,col_option=&amp;quot;magma&amp;quot;,angle=pi*(3-sqrt(5)),...){
  flower &amp;lt;- tibble(
    n = c(1:points), ## change number here to use different # of points
    r = sqrt(n),
    is_prime = n %in% prime$prime, #logical
    colour = n%%num_colour, ## 2,3,6,12,18, seems to bring out the sprial pattern
    x = r * cos(angle*n),
    y = r * sin(angle*n)
  )
  
  prime.cnt &amp;lt;- flower %&amp;gt;% filter(is_prime) %&amp;gt;% count()
  angle_deg &amp;lt;- if(angle==pi*(3-sqrt(5))) {&amp;quot;golden angle!(137.51 degree | 2.4 radian)&amp;quot;} else {paste(round(angle*180/pi,2),&amp;quot;degree | &amp;quot;,round(angle,2),&amp;quot;radian&amp;quot;)}
  
  ## Drawing Flower (but not using Prime Number)
  flower_plot &amp;lt;-flower %&amp;gt;%
    filter(!is_prime) %&amp;gt;%
    ggplot(aes(x=x, y=y, colour=colour)) +
    geom_point() +
    geom_path(size=0.01) +
    scale_colour_viridis_c(end=0.8, guide=&amp;quot;none&amp;quot;, option=col_option) +
    coord_fixed() +
    theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
    labs(caption=paste(num_colour, &amp;quot;colours used to plot&amp;quot;, points-prime.cnt,&amp;quot;dots.\nAngle Used: &amp;quot;, angle_deg), 
         subtitle=&amp;quot;Flower Nibbled by Prime Number Bug&amp;quot;)
  
  ## Drawing Flower (only using Prime Number)
  flower_prime &amp;lt;-flower %&amp;gt;%
    filter(is_prime) %&amp;gt;%
    ggplot(aes(x=x, y=y, colour=colour)) +
    geom_point() +
    scale_colour_viridis_c(end=0.8, guide=&amp;quot;none&amp;quot;, option=col_option) +
    coord_fixed() +
    theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
    labs(caption=paste(&amp;quot;Numbers between 1 and &amp;quot;,points, &amp;quot;have&amp;quot;, prime.cnt,&amp;quot; Prime Numbers\n&amp;quot;),
         subtitle=&amp;quot;Flower made up by Prime Numbers Only&amp;quot;)
  
  #You need to Print
  flower_plot + flower_prime
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;experimenting-with-different-variables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Experimenting with Different Variables&lt;/h2&gt;
&lt;p&gt;I’ve wrote function to draw flower as above, so I can now experiment by changing below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;points = Number of points e.g. Up to what number should we use to draw flower? (up to 104729)&lt;/li&gt;
&lt;li&gt;num_colour = Number of colours to use. When golden angle is used, seems like multiple of 6 makes colours line up?&lt;/li&gt;
&lt;li&gt;col_option = I can use magma,viridis, plasma, inferno or cividis here&lt;/li&gt;
&lt;li&gt;angle = Angle to use for drawing spirals. Default is set to golden angle pi*(3-sqrt(5))&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower()  ## drawing with all default values e.g. 5000 points, 9 colours, angle= golden angle&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower(angle = 2*pi-(pi*(3-sqrt(5))))  ## changing angle 2pi - golden angle so it looks like it&amp;#39;s the reverse of the above.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-2.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower(angle=pi/sqrt(7))  ##  Just testing out different angles&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-3.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower(angle=pi/sqrt(pi), num_col=6*3) ## Using 18 different colours, but hard to distinguish the colour...  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-4.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower(angle=exp(1), num_col=10) ## exp(1) = Euler&amp;#39;s Number as angle. &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-5.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower(angle = 0.3, num_col=3) ## All the black arm goes away when you only use prime number&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-6.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower(num_col=6*3, col_option=&amp;quot;plasma&amp;quot;) ## plasma colour palette! &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-7.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_flower(points=10000,num_col=18, col_option=&amp;quot;viridis&amp;quot;)  ## little over crowded...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-28-phyllotaxis-sprial-and-prime-numbers-experiment_files/figure-html/Testing_Function-8.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I could play with different angles all day long! So intriguing…&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Popular Halloween Candy on US State Grid Map</title>
      <link>/2018/10/25/popular-halloween-candy-on-us-state-grid-map/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/25/popular-halloween-candy-on-us-state-grid-map/</guid>
      <description>&lt;div id=&#34;halloween-is-coming..&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Halloween is coming..!&lt;/h2&gt;
&lt;p&gt;Halloween is just around the corner, I am still trying to decide which candies to purchase this year for trick-or-treaters.&lt;/p&gt;
&lt;p&gt;Initially I was looking for data sets maybe comparing American chocolate bars vs Canadian chocolate bars possibly with sugar contents or lists of ingredients. I am really curious why there are big differences in candy between Canada and US, but for now I couldn’t find them instead I came across below data sets.&lt;/p&gt;
&lt;p&gt;Data itself is actually bit outdated, since it’s data from candy sales in 2007-2015. I’m not even sure if these popular candies changes every year or not. Now I’m curious to find data sets that are more recent…&lt;br /&gt;
&lt;a href=&#34;https://public.opendatasoft.com/explore/embed/dataset/state-by-state-favorite-halloween-candy/table/&#34;&gt;CandyStore.com’s sales from 2007–2015—focusing on the three months leading up to Halloween&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since data set contains data at state level for US, I decided I’ll practice plotting the data on grid map, I’ve been wanting to try. To colour the map, I’ve decided instead of colouring by volume of candy purchased (in pounds), I’ve gathered population by state in order to figure out ratio of candy per person.&lt;/p&gt;
&lt;p&gt;Looks like Hawaiian eats lots of Hershey Kisses (or in general, maybe there are more sweet tooth in Hawaii!). Utah, Nevada and Arizona also seems to maybe either consumer more sweets or possibly top ranked chocolates are purchased in volume!&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/2018-10-25-popular-halloween-candy-on-us-state-grid-map_files/popular_candy_by_state.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;It would’ve been fun to gather all candy images and place them in the grid too…!&lt;/p&gt;
&lt;p&gt;Below are the steps I took to visualize the data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;importing-data-tidying-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Importing Data &amp;amp; Tidying Up&lt;/h2&gt;
&lt;p&gt;I’ve imported data to dataframe using &lt;a href=&#34;https://cran.r-project.org/web/packages/jsonlite/index.html&#34;&gt;jsonlite&lt;/a&gt; package using fromJSON function from &lt;a href=&#34;https://public.opendatasoft.com/explore/?sort=modified&#34;&gt;OpenDataSoft site&lt;/a&gt;. There seems to be lots of other interesting data sets!&lt;/p&gt;
&lt;p&gt;I’ve also harvested population by state from Wikipedia using &lt;a href=&#34;https://cran.r-project.org/web/packages/rvest/&#34;&gt;rvest&lt;/a&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse) ## basically tidyverse is needed for everything :)
library(jsonlite) ## to read data in json format
library(rvest) ## to scrape website
library(hrbrthemes) ## I love this themes! 
## read this: https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html
library(geofacet)  ## I&amp;#39;ll use the grid in this package to create
library(ggrepel) ## so that texts on ggplot don&amp;#39;t overlap!
library(janitor) ##  My recent favourite

## Download Candy Data from Opendata Soft site.
candy_data &amp;lt;- jsonlite::fromJSON(&amp;quot;https://public.opendatasoft.com/api/records/1.0/search/?rows=51&amp;amp;start=0&amp;amp;fields=name,top_candy,top_candy_pounds,2nd_place,2nd_place_pounds,3rd_place,3rd_place_pounds&amp;amp;dataset=state-by-state-favorite-halloween-candy&amp;amp;timezone=America%2FLos_Angeles&amp;quot;)


## I&amp;#39;ll call this candy_wide, because data is in wide format.
candy_wide &amp;lt;-candy_data$records$fields
names(candy_wide) &amp;lt;- c(&amp;quot;state&amp;quot;,&amp;quot;rank_3&amp;quot;,&amp;quot;pound_2&amp;quot;,&amp;quot;rank_2&amp;quot;,&amp;quot;pound_3&amp;quot;,&amp;quot;rank_1&amp;quot;,&amp;quot;pound_1&amp;quot;)


## Might be interesting to see Volume per Capita, so get population data from Wiki.
state_pop_html &amp;lt;- 
  read_html(&amp;quot;https://simple.wikipedia.org/wiki/List_of_U.S._states_by_population&amp;quot;) %&amp;gt;% 
  html_table(2)
state_pop_html &amp;lt;- state_pop_html[[2]] 

## I&amp;#39;m only really interested in population, so trim down the table bit.
state_pop &amp;lt;- state_pop_html %&amp;gt;% select(state=3, pop_2016=4)

## I want population to be numeric value instead of character
state_pop &amp;lt;- state_pop %&amp;gt;% mutate(pop_2016 = as.numeric(str_remove_all(pop_2016,&amp;quot;,&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;transforming-data-from-wide-to-long-format&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Transforming Data from Wide to Long format&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;### Data Transformaiton (Wide to Long)

## Data is in wide format, nicer to look at but I want to convert it to long format!
candy_rank_long &amp;lt;- candy_wide %&amp;gt;% 
  select(state, rank_1, rank_2, rank_3) %&amp;gt;%
  gather(ranking, chocolate, -state) %&amp;gt;%
  mutate(ranking = as.integer(str_remove(ranking,&amp;quot;rank_&amp;quot;)))

candy_pound_long &amp;lt;- candy_wide %&amp;gt;%
  select(state, pound_1, pound_2, pound_3) %&amp;gt;%
  gather(ranking, volume, -state) %&amp;gt;%
  mutate(ranking = as.integer(str_remove(ranking,&amp;quot;pound_&amp;quot;)))

candy_long &amp;lt;- candy_rank_long %&amp;gt;% 
  inner_join(candy_pound_long) %&amp;gt;%
  left_join(state_pop)

candy_long &amp;lt;-candy_long %&amp;gt;% mutate(volume_per_capita = volume/pop_2016)

## Just creating state table
state_df &amp;lt;- tibble(
  state = c(state.name,&amp;quot;District of Columbia&amp;quot;),
  state_div = c(as.character(state.division),&amp;quot;South Atlantic&amp;quot;),
  state_abb = c(state.abb, &amp;quot;DC&amp;quot;)
)

candy_long &amp;lt;- candy_long %&amp;gt;%
  left_join(state_df)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;overall-popular-candies-in-united-states&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Overall Popular Candies in United States&lt;/h2&gt;
&lt;p&gt;If candy was ranked #1 in state, I gave gold colour, if #2, then silver, #3 then bronze. Sort of like Olympic, I’ve counted how many metals each candies have gotten to decide most popular candy in US.&lt;/p&gt;
&lt;p&gt;There were total of 27 different candies in this data sets, most popular candies are M&amp;amp;M followed by Skittles! I thought it was also interesting that Life Savers were top ranked candy in Delaware, but it did not appear in any other state, and similarly for Swedish Fish in Georgia.&lt;/p&gt;
&lt;p&gt;There’s Assorted Salt Water Taffy and Salt Water Taffy… I wasn’t sure if they are same candies…!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## using janitor package
candy_list &amp;lt;- candy_long %&amp;gt;% tabyl(chocolate, ranking)  %&amp;gt;% 
  adorn_totals(&amp;quot;col&amp;quot;) %&amp;gt;% 
  arrange(-Total,-`1`,-`2`,-`3`) ## if candy was listed same # of times, then I want to make sure that better ranked candies are ranked higher.

#show_col(c(&amp;quot;#A77044&amp;quot;, &amp;quot;#A7A7AD&amp;quot;,&amp;quot;#D6AF36&amp;quot;)) # bronze, silber, gold

candy_long  %&amp;gt;% 
  mutate(chocolate = fct_relevel(chocolate, candy_list$chocolate)) %&amp;gt;%
  count(chocolate, ranking, state, state_abb) %&amp;gt;%
  ggplot(aes(x=fct_rev(chocolate),y=n)) + 
  geom_col(aes(fill=fct_rev((factor(ranking)))), colour=&amp;quot;#ffffff30&amp;quot;) +
  geom_text(aes(label=state_abb), position=&amp;quot;stack&amp;quot;, colour=&amp;quot;#ffffff&amp;quot;, 
            size=5, hjust=1, family=font_rc, fontface=&amp;quot;bold&amp;quot;) +
  theme_ipsum_rc() +
  coord_flip() +
  scale_fill_manual(values=c(&amp;quot;#A77044&amp;quot;, &amp;quot;#A7A7AD&amp;quot;,&amp;quot;#D6AF36&amp;quot;),
                    name=&amp;quot;ranking within state&amp;quot;, 
                    labels=c(&amp;quot;bronze (3rd)&amp;quot;, &amp;quot;silver (2nd)&amp;quot;,&amp;quot;gold (1st)&amp;quot;)) +
  scale_y_comma() +
  labs(title=&amp;quot;Halloween Candy Olympic! - which candy gets which ranking from which state?&amp;quot;) +
  theme(legend.position=&amp;quot;top&amp;quot;, legend.direction = &amp;quot;horizontal&amp;quot;) +
  guides(fill = guide_legend(reverse = TRUE)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-25-popular-halloween-candy-on-us-state-grid-map_files/figure-html/overall_candy_ranking-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;grid-state-map&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Grid State Map&lt;/h2&gt;
&lt;p&gt;I recently discovered &lt;a href=&#34;https://cran.r-project.org/web/packages/geofacet/index.html&#34;&gt;geofacet&lt;/a&gt; package. &lt;a href=&#34;https://hafen.github.io/geofacet/&#34;&gt;Examples of graphs&lt;/a&gt; you can create with this package looks super fun! I thought it was really neat that I can create my own grid using “Geo Grid Designer”!!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#get_grid_names() --&amp;gt; you can see what grids are available.
## I can preview the grid first
#grid_design(us_state_grid1)

## Going to use US state map  grid in geofacet package
head(us_state_grid1) %&amp;gt;% knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;row&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;col&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;code&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AL&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alabama&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AK&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alaska&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AZ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arizona&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AR&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arkansas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;California&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Colorado&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Join Candy data &amp;amp; grid so I can create grid map
candy_long_with_coord &amp;lt;- 
  candy_long %&amp;gt;% 
  left_join(us_state_grid1, by=c(&amp;quot;state_abb&amp;quot; = &amp;quot;code&amp;quot;))

## Replace every other space with new line
## some chocolate names are little too long to lists in one line...
space_to_newline = function(x) gsub(&amp;quot;([^ ]+ [^ ]+) &amp;quot;,&amp;quot;\\1\n&amp;quot;, x)
candy_long_with_coord &amp;lt;- candy_long_with_coord %&amp;gt;%
  mutate(chocolate_label = map_chr(chocolate, space_to_newline),
         facet_label = case_when(ranking==1 ~ &amp;quot;Top Ranked Candies by State&amp;quot;,
                                 ranking==2 ~ &amp;quot;2nd Popular Candies by States&amp;quot;,
                                 ranking==3 ~ &amp;quot;3rd Popular Candies by States&amp;quot;))


candy_long_with_coord %&amp;gt;%
  #filter(ranking==1) %&amp;gt;%
  ggplot(aes(x=col, y=row)) +
  geom_tile(color=&amp;quot;#ffffff90&amp;quot;, aes(fill=volume_per_capita)) +
  #geom_text(aes(label=state), size=3.5, color=&amp;quot;#ffffff20&amp;quot;, vjust=4, family=font_rc_light) +
  geom_text(aes(label=state_abb),size=5, family=font_rc, vjust=-1, color=&amp;quot;#ffffff90&amp;quot;) +
  geom_text(aes(label=chocolate_label), family=font_rc, size=3.5, lineheight=0.8, color=&amp;quot;#ffffff&amp;quot;, vjust=1, fontface=&amp;quot;bold&amp;quot;) +
  scale_y_reverse(breaks=NULL) +
  scale_x_continuous(breaks=NULL) +
  theme_ipsum_rc(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  scale_fill_viridis_c(option=&amp;quot;magma&amp;quot;, alpha=0.8, end=0.7, 
                       name=&amp;quot;&amp;quot;, 
                       breaks=fivenum(candy_long$volume_per_capita),
                       labels=c(&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;lt;&amp;lt; Less Candy per Person&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;More Candy per Person &amp;gt;&amp;gt;&amp;quot;)) +
  facet_wrap(~fct_reorder(facet_label, ranking), ncol=1) +
  theme(legend.position = &amp;quot;top&amp;quot;,
        legend.key.width = unit(2, &amp;quot;cm&amp;quot;),
        legend.justification = &amp;quot;left&amp;quot;) +
  labs(title=&amp;quot;Top Ranked Candies by States&amp;quot;,
       caption=&amp;quot;Data Source: CandyStore.com&amp;#39;s sales from 2007–2015—focusing on the three months leading up to Halloween&amp;quot;, x=&amp;quot;&amp;quot;, y=&amp;quot;&amp;quot;) +
  coord_fixed(ratio=0.9)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-25-popular-halloween-candy-on-us-state-grid-map_files/figure-html/state_visual-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cannabis Curve with ggplot2 </title>
      <link>/2018/10/17/cannibus-curve-with-ggplot2/</link>
      <pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/17/cannibus-curve-with-ggplot2/</guid>
      <description>&lt;p&gt;Starting today, recreational weed is legal in Canada. This news has some how lead me to find &lt;a href=&#34;http://mathworld.wolfram.com/CannabisCurve.html&#34;&gt;Cannabis Curve&lt;/a&gt;, a mathematical equation to draw Cannabis….!!!&lt;/p&gt;
&lt;p&gt;So to celebrate? being 2nd country in the world (1st was &lt;a href=&#34;http://fortune.com/2018/10/17/canada-marijuana-weed-legalization-uruguay/&#34;&gt;Uruguay&lt;/a&gt;) to legalize the green stuff for fun, I decided I’ll try drawing cannabis curve with ggplot. Here’s the final results.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/2018-10-17-cannibus-curve-with-ggplot2_files/cannibus.png&#34; alt=&#34;Cannabis_Final&#34; width=&#34;600&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Cannabis_Final&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here’s the step I took, because I couldn’t really understand the mathematical equation, so I’ve break it down step by step to sort of understand what each part of equation is doing.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

cannabis &amp;lt;- tibble(
  t = seq(-pi,pi, length.out=1000),
  r1 = (1+.9*cos(8*t)), ## this will draw 8 petals  ## this number determines number of leafs!
  r2 = r1 * (1+.1*cos(24*t)), ## this make it pointy
  r3 = r2 * (.9+0.5*cos(200*t)), ## this makes it jaggy
  r4 = r3 * (1+sin(t)), ## Hmm.. I think I want to rorate it 90 degree... 
  r4_alt = r3 * (1+sin(t-pi/2)), ## one way to do it...
  r = (1+.9*cos(8*t)) * (1+.1*cos(24*t)) * (.9+0.5*cos(200*t)) * (1+sin(t))  ## Put all in line line!
) 

cannabis %&amp;gt;% 
  ggplot(aes(x=t, y=r1)) + 
  geom_path(color=&amp;quot;#7ABA71&amp;quot;, size=2) +
  coord_polar() +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  labs(title = &amp;quot;(1+.9*cos(8*t) draws 8 petals&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-17-cannibus-curve-with-ggplot2_files/figure-html/demystify_cannabis-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cannabis %&amp;gt;% 
  ggplot(aes(x=t, y=r2)) + 
  geom_path(color=&amp;quot;#7ABA71&amp;quot;, size=2) +
  coord_polar() +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  labs(title = &amp;quot;(1+.9*cos(8*t) * * (1+.1*cos(24*t)) makes the tip pointy&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-17-cannibus-curve-with-ggplot2_files/figure-html/demystify_cannabis-2.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cannabis %&amp;gt;% 
  ggplot(aes(x=t, y=r3)) + 
  geom_path(color=&amp;quot;#7ABA71&amp;quot;, size=0.5) +
  coord_polar() +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  labs(title = &amp;quot;(1+.9*cos(8*t) * * (1+.1*cos(24*t)) * (.9+0.5*cos(200*t)) makes zaggy&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-17-cannibus-curve-with-ggplot2_files/figure-html/demystify_cannabis-3.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cannabis %&amp;gt;% 
  ggplot(aes(x=t, y=r4)) + 
  geom_path(color=&amp;quot;#7ABA71&amp;quot;, size=0.5) +
  coord_polar(start=pi/2) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  labs(title = &amp;quot;(1+.9*cos(8*t) * * (1+.1*cos(24*t)) * (.9+0.5*cos(200*t)) * (1+sin(t)) - OK Cool, Now 2 leaves are small!&amp;quot;, subcaption=&amp;quot;Notice I used start=pi/2 to rotate!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-17-cannibus-curve-with-ggplot2_files/figure-html/demystify_cannabis-4.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cannabis %&amp;gt;% 
  ggplot(aes(x=t, y=r)) + 
  geom_polygon(fill=&amp;quot;#499b4a&amp;quot;, color=&amp;quot;#74Ba71&amp;quot;, size=0.1) +
  coord_polar(theta=&amp;quot;x&amp;quot;, start=pi/2) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  labs(title = &amp;quot;Instead of using geom_path, I used geom_polygon&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-17-cannibus-curve-with-ggplot2_files/figure-html/demystify_cannabis-5.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I couldn’t figure out how to “crop” the polar coordinate image, so there’s lots of white space on final image, but I like my little cannabis!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I couldn’t find way to crop the image, but I realized I just need to plot the above in Cartesian coordinate…!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# To translate polar coordinate to cartesian, I can use below 
## x = r * cos(theta)
## y = r * sin(theta)

cannabis &amp;lt;- cannabis %&amp;gt;% mutate(
  x = r * cos(t),
  y = r * sin(t)
)

cannabis %&amp;gt;% 
  ggplot(aes(x=x, y=y)) + 
  geom_polygon(fill=&amp;quot;#499b4a&amp;quot;, color=&amp;quot;#74Ba71&amp;quot;, size=0.1) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  labs(title = &amp;quot;Cannabis on Cartesian Coordinate&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-17-cannibus-curve-with-ggplot2_files/figure-html/polar_to_cartesian-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Random Walk of Pi - Another ggplot2 Experiment</title>
      <link>/2018/10/14/random-walk-of-pi-another-ggplot2-experiment/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/14/random-walk-of-pi-another-ggplot2-experiment/</guid>
      <description>&lt;p&gt;There are so many beautiful “π” arts everywhere, and I wanted to practice ggplot2 by mimicing those arts &lt;a href=&#34;https://chichacha.netlify.com/2018/10/13/visual-art-with-pi-using-ggplot2-circlize/&#34;&gt;further more&lt;/a&gt;. Another pi art caught my eye is random walk of pi digits. Here’s one of examples in &lt;a href=&#34;https://www.wired.com/2012/06/a-random-walk-with-pi/&#34;&gt;WIRED magazine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For random walk to work, I’ve assigned direction to “walk” depending on digits 0-9.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-14-random-walk-of-pi-another-ggplot2-experiment_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;480&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I’ve prepared data frame as below, so I can use ggplot2 to plot&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## pi_df contains first 100K digits , each digit is stored in one row.

df_walk &amp;lt;- pi_df %&amp;gt;% 
  mutate(pos = row_number()-1, ## assign position
         dig= as.numeric(dig)) %&amp;gt;%
  select(pos, dig) %&amp;gt;%
  mutate(angle_rad = 2*pi/10*dig,  ## using current digit determine direction to move
         angle_deg = circular::deg(angle_rad), ## I just like to see number in degree...
         move_x = cos(angle_rad), ## how much to move in x direction
         move_y = sin(angle_rad), ## how much to move in y direction
         last_x = replace_na(lag(move_x),0), ## position of last x, set origin as 0
         last_y = replace_na(lag(move_y),0), ## position of last y, set origin as 0
         cumsum_x = cumsum(move_x), ## walkig == adding up all steps in x
         cumsum_y = cumsum(move_y), ## walking == adding up all steps in y
         cumsum_x_lag = cumsum(last_x),
         cumsum_y_lag = cumsum(last_y)) 

df_walk %&amp;gt;% head(n=5) %&amp;gt;% knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;pos&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;dig&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;angle_rad&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;angle_deg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;move_x&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;move_y&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;last_x&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;last_y&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cumsum_x&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cumsum_y&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cumsum_x_lag&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cumsum_y_lag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.8849556&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;108&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.309017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9510565&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.309017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9510565&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6283185&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.809017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5877853&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.309017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9510565&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.500000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.5388418&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.309017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9510565&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.5132741&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;144&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.809017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5877853&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.809017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5877853&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.309017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.1266270&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.500000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.5388418&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6283185&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.809017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5877853&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.809017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5877853&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.500000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.7144123&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.309017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.1266270&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.1415927&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;180&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.809017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5877853&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.500000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.7144123&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.500000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.7144123&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now to visualize the random walk, I’ve used below script to visualize first 1000, first 10000 and first 100000 digits of pi.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_steps &amp;lt;- 1000
## Random Walk of Pi
df_walk %&amp;gt;% 
  filter(pos &amp;lt; n_steps) %&amp;gt;%
  ggplot(aes(x=cumsum_x, y=cumsum_y, color=pos)) + 
  geom_segment(size=0.5, aes(xend=cumsum_x_lag, yend=cumsum_y_lag)) +
  geom_point(size=0.8) + 
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  theme(panel.background=element_rect(fill=&amp;quot;#000000&amp;quot;)) +
  scale_color_viridis_c(option=&amp;quot;plasma&amp;quot;, guide=&amp;quot;none&amp;quot;) +
  labs(caption=paste(&amp;quot;First&amp;quot;,n_steps,&amp;quot;digits of Pi&amp;quot;))  +
  geom_hline(yintercept=0, color=&amp;quot;#ffffff30&amp;quot;, linetype=3) +
  geom_vline(xintercept=0, color=&amp;quot;#ffffff30&amp;quot;, linetype=3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-14-random-walk-of-pi-another-ggplot2-experiment_files/figure-html/ggplot2_fun-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#ggsave(str_c(&amp;quot;output/random_walk_pi_&amp;quot;,n_steps,&amp;quot;.png&amp;quot;), width=11, height=7)


n_steps &amp;lt;- 10000
## Random Walk of Pi
df_walk %&amp;gt;% 
  filter(pos &amp;lt; n_steps) %&amp;gt;%
  ggplot(aes(x=cumsum_x, y=cumsum_y, color=pos)) + 
  geom_segment(size=0.1, aes(xend=cumsum_x_lag, yend=cumsum_y_lag)) +
  geom_point(size=0.01) + 
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  theme(panel.background=element_rect(fill=&amp;quot;#000000&amp;quot;)) +
  scale_color_viridis_c(option=&amp;quot;plasma&amp;quot;, guide=&amp;quot;none&amp;quot;) +
  labs(caption=paste(&amp;quot;First&amp;quot;,n_steps,&amp;quot;digits of Pi&amp;quot;))  +
  geom_hline(yintercept=0, color=&amp;quot;#ffffff30&amp;quot;, linetype=3) +
  geom_vline(xintercept=0, color=&amp;quot;#ffffff30&amp;quot;, linetype=3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-14-random-walk-of-pi-another-ggplot2-experiment_files/figure-html/ggplot2_fun-2.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_steps &amp;lt;- 100000
## Random Walk of Pi
df_walk %&amp;gt;% 
  filter(pos &amp;lt; n_steps) %&amp;gt;%
  ggplot(aes(x=cumsum_x, y=cumsum_y, color=pos)) + 
  geom_segment(size=0.1, aes(xend=cumsum_x_lag, yend=cumsum_y_lag)) +
  geom_point(size=0.005) + 
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  theme(panel.background=element_rect(fill=&amp;quot;#000000&amp;quot;)) +
  scale_color_viridis_c(option=&amp;quot;plasma&amp;quot;, guide=&amp;quot;none&amp;quot;) +
  labs(caption=paste(&amp;quot;First 100000 digits of Pi&amp;quot;))  +
  geom_hline(yintercept=0, color=&amp;quot;#ffffff30&amp;quot;, linetype=3) +
  geom_vline(xintercept=0, color=&amp;quot;#ffffff30&amp;quot;, linetype=3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-14-random-walk-of-pi-another-ggplot2-experiment_files/figure-html/ggplot2_fun-3.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visual Art with Pi using ggplot2 &amp; circlize</title>
      <link>/2018/10/13/visual-art-with-pi-using-ggplot2-circlize/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/13/visual-art-with-pi-using-ggplot2-circlize/</guid>
      <description>&lt;p&gt;I stumbled across this beautiful art on &lt;a href=&#34;https://www.washingtonpost.com/news/wonk/wp/2015/03/14/10-stunning-images-show-the-beauty-hidden-in-pi/?noredirect=on&amp;amp;utm_term=.10079a56ece1&#34;&gt;Washington Post article&lt;/a&gt;, and I wanted to try making the similar art using “digits in pi” myself using R and things I’ve learned recently.&lt;/p&gt;
&lt;div id=&#34;get-first-100000-digits-of-pi&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Get First 100000 digits of Pi&lt;/h2&gt;
&lt;p&gt;After bit of googling, I stumbled across this &lt;a href=&#34;http://www.geom.uiuc.edu/~huberty/math5337/groupe/welcome.html&#34;&gt;this site&lt;/a&gt;, so I decided to get first 100000 digits from below website.&lt;/p&gt;
&lt;p&gt;However, later I discovered another site where you can download the txt file, so I could’ve used &lt;a href=&#34;https://www.angio.net/pi/digits.html&#34;&gt;this site&lt;/a&gt; instead, and might have been bit simpler.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Here are packages I&amp;#39;m going to use.
library(tidyverse)  
library(tidytext) ## so I can break single digit per line 
library(circlize)


df &amp;lt;-data.frame(x =read_lines(&amp;quot;http://www.geom.uiuc.edu/~huberty/math5337/groupe/digits.html&amp;quot;))


df$x &amp;lt;- as.character(df$x)
df &amp;lt;- df %&amp;gt;% slice(-1:-12)  ## discard first 12 lines
df &amp;lt;- df %&amp;gt;% slice(1:1283)  ## anything after 1283 is not pi so i only want to grab 1~1283&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;prepping-data-frame-for-visualization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Prepping Data Frame for Visualization&lt;/h2&gt;
&lt;p&gt;Now I have first 100000 digits of pi as character, I wanted to put them into data frame where each line would contain only 1 digit.&lt;/p&gt;
&lt;p&gt;Pretty sure there’s likely different way of doing this, but I decided I want to utilize &lt;a href=&#34;https://cran.r-project.org/web/packages/tidytext/index.html&#34;&gt;tidytext package&lt;/a&gt;, that I’ve recently started to use.&lt;/p&gt;
&lt;p&gt;Then I went bit overload on appending extra information that I thought I might utilize later to visualize… While working on below I’ve discovered that if you pick any 4 digits number you like, it will appear at least once somewhere in first 100K digits of pi! (which I thought was pretty cool…)&lt;/p&gt;
&lt;p&gt;For example, if you are looking for sequence of 8864, then it will appear 10 times in first 100K digits of pi, and first one appears at 2384 decimal points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Below is NOT needed, but I just wanted to do bit of searching,,,
df_tidy_1 &amp;lt;- df_tidy_1 %&amp;gt;%
  group_by(cur) %&amp;gt;%
  mutate(pos_within_cur = row_number()-1) %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(dig_2 = cur*10 + nxt_1,
         dig_3 = cur*100 + nxt_1*10 + nxt_2,
         dig_4 = cur*1000 + nxt_1*100 + nxt_2*10 + nxt_3,
         dig_5 = cur*10000 + nxt_1*1000 + nxt_2*100 + nxt_3*10 + nxt_4) %&amp;gt;%
  group_by(dig_2) %&amp;gt;%
  mutate(pos_within_dig_2 = row_number()-1) %&amp;gt;%
  ungroup() %&amp;gt;% group_by(dig_3) %&amp;gt;%
  mutate(pos_within_dig_3 = row_number()-1) %&amp;gt;%
  ungroup() %&amp;gt;% group_by(dig_4) %&amp;gt;%
  mutate(pos_within_dig_4 = row_number()-1) %&amp;gt;%
  ungroup() %&amp;gt;% group_by(dig_5) %&amp;gt;%
  mutate(pos_within_dig_5 = row_number()-1) %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(up_down_same = case_when(nxt_1&amp;gt;cur ~ &amp;quot;up&amp;quot;,
                                  nxt_1&amp;lt;cur~&amp;quot;down&amp;quot;,
                                  TRUE ~ &amp;quot;same&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;having-fun-with-ggplot2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Having Fun with ggplot2&lt;/h2&gt;
&lt;p&gt;Now onto the fun part! Wanted to start off simple… First one is simply first 1000 digits of pi printed, but numbers 0-9 are colour coded, so that it looks bit artsy.&lt;/p&gt;
&lt;p&gt;2nd example, I’ve replaced colour coded number with dots, but added little twist. If number are even, then circle is filled, but if numbers are odd, then it is displayed with non-filled circle.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;golden_ratio &amp;lt;- (1+sqrt(5))/2 

nc &amp;lt;- 25  ## Number of columns i want
#nr &amp;lt;- floor(nc/golden_ratio)  ## use this if you want image wider than longer
nr &amp;lt;- floor(nc*golden_ratio)  ## Number of rows just calculated based on golden ratio.
n &amp;lt;- nr*nc ## number of digits to be displayed on graph

df_tidy_1 %&amp;gt;%
  filter(pos &amp;lt; n) %&amp;gt;%
  mutate(x = pos %% nc,
         y = floor(pos / nc)) %&amp;gt;%
  ggplot(aes(x=x, y=y, color=factor(cur))) +
  #geom_point(shape=19, size=5) +
  #geom_point(aes(shape=up_down_same)) +
  geom_text(aes(label=cur, color=factor(cur)), family=&amp;quot;Helvetica&amp;quot;, size=5) +
  scale_y_reverse() +
  theme_void() +
  scale_color_viridis_d(option=&amp;quot;magma&amp;quot;, begin=0.2, guide=&amp;quot;none&amp;quot;) +
  scale_fill_viridis_d(option=&amp;quot;magma&amp;quot;, begin=0.2, guide=&amp;quot;none&amp;quot;) +
  theme(panel.background = element_rect(fill=&amp;quot;#000000&amp;quot;)) #+&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-13-visual-art-with-pi-using-ggplot2-circlize_files/figure-html/rect_art-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  #scale_shape_manual(values=c(25,23,24), guide=&amp;quot;none&amp;quot;)

#ggsave(filename=str_c(&amp;quot;output/rect_&amp;quot;,n,&amp;quot;_digits_of_pi_as_dots.png&amp;quot;), width=11, height=11*golden_ratio)


## Variation of Above
df_tidy_1 %&amp;gt;%
  filter(pos &amp;lt; n) %&amp;gt;%
  mutate(x = pos %% nc,
         y = floor(pos / nc),
         odd = cur %% 2) %&amp;gt;%
  ggplot(aes(x=x, y=y, color=factor(cur))) +
  #geom_text(aes(label=cur, color=factor(cur)), family=&amp;quot;Helvetica&amp;quot;, size=3) +
  geom_point(aes(shape=factor(odd)), size=5, alpha=0.9) +
  scale_y_reverse() +
  theme_void() +
  scale_color_viridis_d(option=&amp;quot;magma&amp;quot;, begin=0.3, guide=&amp;quot;none&amp;quot;) +
  scale_shape_manual(values=c(19,21), guide=&amp;quot;none&amp;quot;) +  ##24, 25 triangle
  theme(panel.background = element_rect(fill=&amp;quot;#000000&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-13-visual-art-with-pi-using-ggplot2-circlize_files/figure-html/rect_art-2.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#ggsave(filename=str_c(&amp;quot;output/rect_first_&amp;quot;,n,&amp;quot;digits_of_pi_dots2.png&amp;quot;), height=11, width=11*golden_ratio)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-art-with-connecting-2-consective-digits-using-geom_segment&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Creating Art with connecting 2 consective digits using geom_segment&lt;/h2&gt;
&lt;p&gt;This time, I wanted to utilize geom_segment to draw strings in the way that 2 consective digits are connected with strings. I love viridis palette especially magma palette, so I’ve stuck to same colour pallette for now, but I can definitely see I can play around with different colour palette.&lt;/p&gt;
&lt;p&gt;For 2nd plot, I’ve also tried to see what would happen if I’ve placed plot on polar coordinate.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_string &amp;lt;- 10000 ## number of items i&amp;#39;ll show in graph

df_tidy_1 %&amp;gt;%
  filter(pos &amp;lt; n_string) %&amp;gt;%
  mutate(x = cur + (pos/n_string) ,
         xend = nxt_1 + (pos/n_string),
         odd = cur %% 2) %&amp;gt;%
  ggplot(aes(color=dig_4)) +  
  geom_segment(aes(x=x, xend=xend, y=0,yend=1), size=0.05) +
  scale_color_viridis_c(option=&amp;quot;magma&amp;quot;, guide=&amp;quot;none&amp;quot;, begin=0.2) + ## i like plasma too
  theme_void() +
  theme(panel.background = element_rect(fill=&amp;quot;#000000&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-13-visual-art-with-pi-using-ggplot2-circlize_files/figure-html/string_art-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#ggsave(file=&amp;quot;output/100K_strings_pi_art_plasma.png&amp;quot;, width=17, height=floor(17/golden_ratio))

df_tidy_1 %&amp;gt;%
  filter(pos &amp;lt; n_string) %&amp;gt;%
  mutate(x = cur + (pos/n_string) ,
         xend = nxt_1 + (pos/n_string)) %&amp;gt;%
  ggplot(aes(color=dig_4)) +  
  geom_segment(aes(x=x, xend=xend, y=0,yend=1), size=0.02) +
  scale_color_viridis_c(option=&amp;quot;magma&amp;quot;, guide=&amp;quot;none&amp;quot;, begin=0.2) + ## i like plasma too
  theme_void() +
  theme(panel.background = element_rect(fill=&amp;quot;#000000&amp;quot;)) +
  coord_polar(theta=&amp;quot;x&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-13-visual-art-with-pi-using-ggplot2-circlize_files/figure-html/string_art-2.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-with-circlize&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualizing with Circlize&lt;/h2&gt;
&lt;p&gt;Using same colour schema I wanted to also try out plotting digits of pi with circo graph using &lt;a href=&#34;https://cran.r-project.org/web/packages/circlize/index.html&#34;&gt;circlize package&lt;/a&gt;. I love using &lt;a href=&#34;https://jokergoo.github.io/circlize_book/book/the-chorddiagram-function.html&#34;&gt;chordDiagram function&lt;/a&gt;! It’s amazing just few lines of code, I was able to produce pretty neat chart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(circlize)
magma_pal &amp;lt;- viridis::magma(n=10, begin=0.2)
names(magma_pal) &amp;lt;- c(0,1,2,3,4,5,6,7,8,9) ## 


par(bg = &amp;quot;#000000&amp;quot;,col=&amp;quot;#ffffff&amp;quot;)
circos.par(start.degree = 90 )
chordDiagram(df_tidy_1 %&amp;gt;% filter(pos&amp;lt;2000) %&amp;gt;% select(cur, nxt_1),
             order = c(0:9),
             grid.col=magma_pal, 
             annotationTrack=c(&amp;quot;grid&amp;quot;,&amp;quot;name&amp;quot;),
             directional = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-13-visual-art-with-pi-using-ggplot2-circlize_files/figure-html/circlize_art-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#circos.clear()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Environmental Performance Index - Simple Scatter Plot</title>
      <link>/2018/10/05/environmental-performance-index-simple-scatter-plot/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/05/environmental-performance-index-simple-scatter-plot/</guid>
      <description>&lt;p&gt;While reading the news that &lt;a href=&#34;https://www.theguardian.com/environment/2018/jul/12/ireland-becomes-worlds-first-country-to-divest-from-fossil-fuels&#34;&gt;Ireland becomes world’s first country to divest from fossil fuels&lt;/a&gt;, I just got curious how do we measure “green-ness” of country when we rank them in general, and I came across the &lt;a href=&#34;https://epi.envirocenter.yale.edu/epi-topline&#34;&gt;Environmental Performance Index&lt;/a&gt; page with ranking table.&lt;/p&gt;
&lt;p&gt;Table contained 180 countries with some numerics values for Environment Performance Index, “Enviornmental Health”, “Ecosystem Vitality”.&lt;/p&gt;
&lt;p&gt;I thought it would be interesting to plot them using ggplot2.&lt;/p&gt;
&lt;p&gt;First I needed to get data, so I’ve used &lt;a href=&#34;https://github.com/hadley/rvest&#34;&gt;rvest&lt;/a&gt; and scaraped data from website into data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(knitr)
library(rvest)

epi_2018_site &amp;lt;- read_html(&amp;quot;https://epi.envirocenter.yale.edu/epi-topline&amp;quot;)
epi_2018_df &amp;lt;- epi_2018_site %&amp;gt;%
  html_table() %&amp;gt;% as.data.frame()


## Which Countries are the top 5 countries 
epi_2018_df %&amp;gt;% arrange(EPI.Ranking) %&amp;gt;% head(n=5) %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Country&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;EPI.Ranking&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Environmental.Performance.Index&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Environmental.Health&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Ecosystem.Vitality&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Switzerland&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;87.42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;93.57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;83.32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;France&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;83.95&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;95.71&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;76.11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Denmark&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;81.60&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98.20&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70.53&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Malta&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;80.90&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;93.80&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;72.30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Sweden&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;80.51&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;94.41&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71.24&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Which Countries are the bottom 5?
epi_2018_df %&amp;gt;% arrange(EPI.Ranking) %&amp;gt;% tail(n=5) %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Country&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;EPI.Ranking&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Environmental.Performance.Index&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Environmental.Health&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Ecosystem.Vitality&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;176&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nepal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;176&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;31.44&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.54&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;45.38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;177&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;India&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;177&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;30.57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44.74&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;178&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Dem. Rep. Congo&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;178&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;30.41&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19.70&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;37.56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;179&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bangladesh&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;179&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29.56&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.96&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;41.29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;180&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Burundi&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;180&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;27.43&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;25.69&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.59&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So when it comes to ranking in 2018, Top 5 countries are 1. Switzlerland, 2. France, 3. Denmark, 4. Malta, 5. Sweden. Bottom 5 countries for 2018 are , 180. Burundi, 179. Bangladesh, 178. Dem. Rep.Congo, 177. India, 176. Nepal.&lt;/p&gt;
&lt;p&gt;I now wanted to plot them as scatter plot, with x-axis with Environmental Health score, and y-axis with Ecosystem Vitality score. I’ve coloured dots with Environmental Performance Index.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(hrbrthemes) ## I love this theme for ggplot! 
library(ggrepel) ## so that text don&amp;#39;t overlap


epi_2018_df %&amp;gt;% 
  arrange(EPI.Ranking) %&amp;gt;%
  ggplot(aes(x=Environmental.Health , y= Ecosystem.Vitality)) +
  geom_point(aes(color=Environmental.Performance.Index)) +
  geom_path(size=0.2, color=&amp;quot;#33333390&amp;quot;, linetype=3)+
  scale_color_viridis_c(name=&amp;quot;EPI&amp;quot;) +
  theme_ipsum_rc() +
  geom_smooth(method=&amp;quot;lm&amp;quot;, se=F, color=&amp;quot;#33333330&amp;quot;) +
  geom_text_repel(aes(label=paste0(EPI.Ranking,&amp;quot;.&amp;quot;,Country)), data = . %&amp;gt;% filter(EPI.Ranking&amp;lt;=10|EPI.Ranking&amp;gt;=170|Country %in% c(&amp;quot;Canada&amp;quot;,&amp;quot;United States of America&amp;quot;,&amp;quot;Japan&amp;quot;,&amp;quot;Ireland&amp;quot;)),
            family=&amp;quot;Roboto Condensed&amp;quot;, min.segment.length=0) +
  labs(title = &amp;quot;Environmental Health vs Ecosystem Vitality&amp;quot;,
       subtitle = &amp;quot;Environmental Health = Rises with Economic Growth &amp;amp; Prosperity\nEcosystem Vitality = Comes Under Strain from Industrialization &amp;amp; Urbanization&amp;quot;,
       caption = &amp;quot;Data from https://epi.envirocenter.yale.edu/epi-topline&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-05-environmental-performance-index-simple-scatter-plot_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I’ve labeled top 10 countries, and bottom 10 countries, also US, Canada and Japan. US was only ranked at 27th, which I thought was quite low, Japan was higher than US, at 20th. I was also surprised that canada is also lower at 25th.&lt;/p&gt;
&lt;p&gt;Using &lt;a href=&#34;https://cran.r-project.org/web/packages/countrycode/index.html&#34;&gt;countrycode&lt;/a&gt; package, I wanted to append extra information about country, such as “Continent” and “Region”.&lt;/p&gt;
&lt;p&gt;I’ve coloured plot with “continent” to see if there’s a cluster…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(countrycode)
library(ggalt)

epi_2018_df &amp;lt;- epi_2018_df %&amp;gt;% 
  mutate(continent = countrycode(Country ,&amp;quot;country.name&amp;quot;, &amp;quot;continent&amp;quot;, warn=F),
         country_code = countrycode(Country, &amp;quot;country.name&amp;quot;, &amp;quot;iso3c&amp;quot;,nomatch = &amp;quot;&amp;quot;),
         region = countrycode(Country, &amp;quot;country.name&amp;quot;, &amp;quot;region&amp;quot;, warn=F))

epi_2018_df &amp;lt;- epi_2018_df %&amp;gt;%
  mutate(detail_url = paste0(&amp;quot;https://epi.envirocenter.yale.edu/epi-country-report/&amp;quot;,country_code))

## Micronesia didn&amp;#39;t get categorized...

epi_2018_df %&amp;gt;% 
  ggplot(aes(x=Environmental.Health , y= Ecosystem.Vitality, color=continent)) +
  geom_point(aes(color=continent), size=3, alpha=0.6) +
  geom_encircle(na.rm=T, s_shape=1, linetype=3, alpha=0.6) +
  scale_color_viridis_d(name=&amp;quot;Continent&amp;quot;, na.value=&amp;quot;grey&amp;quot;, option=&amp;quot;A&amp;quot;, end=0.9) +
  geom_rug(alpha=0.3) +
  theme_ipsum_rc() +
  geom_text_repel(aes(label=paste0(EPI.Ranking,&amp;quot;.&amp;quot;,Country)),
            family=&amp;quot;Roboto Condensed&amp;quot;, min.segment.length=0, size=2, 
            color=&amp;quot;#00000090&amp;quot;, segment.colour = &amp;quot;#33333350&amp;quot;) +
  labs(title = &amp;quot;Environmental Health vs Ecosystem Vitality&amp;quot;,
       subtitle = &amp;quot;Colour = Continent&amp;quot;) +
  scale_x_continuous(breaks=round(fivenum(epi_2018_df$Environmental.Health),1)) +
  scale_y_continuous(breaks=round(fivenum(epi_2018_df$Ecosystem.Vitality),1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-05-environmental-performance-index-simple-scatter-plot_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;After I’ve done the above, I realized there are actually &lt;a href=&#34;https://epi.envirocenter.yale.edu/epi-downloads&#34;&gt;Downloads&lt;/a&gt; section on EPI with more data… So I actually didn’t have to scape the website table, nor code the region using countrycode.&lt;/p&gt;
&lt;p&gt;I’ve decided to download 2018 EPI Country Snapshot for now. This table contains 12 variables for 180 countries, with stats like GDP, GDP per Capita, Land Area, Population, Popular Density, Population Growth Rate and SDGI (I’m not sure what SDGI is, and I couldn’t figure out from browsing through the web…)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-05-environmental-performance-index-simple-scatter-plot_files/figure-html/countrysnapshot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;While I know EPI, Environmental Health, and Ecosystem Vitality should be correlated, it’s interesing that EPI and GDP per Capiata is correlated strongly. So I’ve decided to create another scatter plot showing that relationship.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;epi_2018_df_comb %&amp;gt;%
  ggplot(aes(x=GDPpc, y=Environmental.Performance.Index )) +
  geom_point(aes(color=PopDensity)) +
  theme_ipsum_rc() +
  geom_smooth(se=F, method=&amp;quot;lm&amp;quot;, color=&amp;quot;#33333330&amp;quot;) +
  scale_x_comma() +
  scale_color_viridis_c(trans=&amp;quot;log10&amp;quot;) +
  geom_text_repel(aes(label=country), 
                  data = . %&amp;gt;% filter(GDPpc &amp;gt; 60000 | Environmental.Performance.Index &amp;gt; 80 | 
                    country %in% c(&amp;quot;United States of America&amp;quot;,&amp;quot;Japan&amp;quot;,&amp;quot;Canada&amp;quot;,&amp;quot;India&amp;quot;,&amp;quot;China&amp;quot;)),
                  family=&amp;quot;Roboto Condensed&amp;quot;, min.segment.length = 0, nudge_x=10) +
  labs(title=&amp;quot;GDP per Capita vs EPI&amp;quot;,
       caption = &amp;quot;Data Source: https://epi.envirocenter.yale.edu/epi-downloads&amp;quot;,
       xlab =&amp;quot;GDP per Capita - 2018&amp;quot;, ylab=&amp;quot;Environmental Performance Index&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-05-environmental-performance-index-simple-scatter-plot_files/figure-html/epi_and_gdp_per_capita-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making Calendar with ggplot &#43; Moon Phase Calendar for fun</title>
      <link>/2018/05/26/making-calendar-with-ggplot-moon-phase-calendar/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/26/making-calendar-with-ggplot-moon-phase-calendar/</guid>
      <description>&lt;div id=&#34;making-calendar-with-ggplot2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Making Calendar with ggplot2&lt;/h2&gt;
&lt;p&gt;I recently discovered font called &lt;a href=&#34;https://www.dafont.com/moon-phases.font&#34;&gt;Moon Phase&lt;/a&gt;. I also recently discovered R package, &lt;a href=&#34;https://CRAN.R-project.org/package=suncalc&#34;&gt;suncalc&lt;/a&gt;, and I can get Moon Illumination data by day, so I thought I’d use both to create a simple calendar using &lt;a href=&#34;http://ggplot2.tidyverse.org/&#34;&gt;ggplot2&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;prepping-the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Prepping The Data&lt;/h3&gt;
&lt;p&gt;To make calendar, I need to strip out weekday, month, day, week number within a month. So I can use weekday as x-axis, week number within a month as y-axis, and facet by month.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## use getMoonIllusmination function to get moon fraction, phase, and angle for 2018.
Moon_2018 &amp;lt;-getMoonIllumination(date = seq.Date(as.Date(&amp;quot;2018-01-01&amp;quot;), as.Date(&amp;quot;2018-12-31&amp;quot;), by = 1), 
                                 keep = c(&amp;quot;fraction&amp;quot;, &amp;quot;phase&amp;quot;, &amp;quot;angle&amp;quot;))


## Append Extra Info, so I can use ggplot to make calendar. 
Moon_2018_df &amp;lt;- Moon_2018 %&amp;gt;% 
  mutate(wkdy = fct_inorder(weekdays(date, abbreviate=T)), ## 2018 worked well because it starts on Monday
         wkn = week(date), ## Week Number
         mo = month(date, label=T, abbr=T), ## Month
         day = day(date), ## Day
         moon.phase = cut(#phase,breaks=seq(0,1,by=1/28), ## this doesn&amp;#39;t work...
                          phase,breaks=seq(0,1,by=1/56),
                          ordered_result=T)) %&amp;gt;%
  group_by(mo) %&amp;gt;% 
  mutate(wkn.mo = dense_rank(wkn)) %&amp;gt;%
  ungroup()

## Simply cutting into 28 blocks didn&amp;#39;t work out..  
moon.font.tb &amp;lt;- tibble(
  moon.font = c(NA, letters[rep(1:13,rep(2,13))], 0,0, letters[rep(14:26,rep(2,13))],NA),
  moon.phase = levels(Moon_2018_df$moon.phase)
)

Moon_2018_df &amp;lt;- Moon_2018_df %&amp;gt;% left_join(moon.font.tb)

## Show the data around today to see what data above looks like.
Moon_2018_df %&amp;gt;% filter(between(date,today()-3,today()+3)) %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;date&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;fraction&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;phase&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;angle&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;wkdy&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wkn&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;mo&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;day&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;moon.phase&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wkn.mo&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;moon.font&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018-05-23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5928637&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2797321&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1692842&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Wed&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;(0.268,0.286]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;h&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018-05-24&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7013470&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3159631&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1353234&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thu&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;(0.304,0.321]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;i&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018-05-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7972031&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3513064&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1143088&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fri&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;25&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;(0.339,0.357]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;j&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018-05-26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8764075&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3856523&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1008454&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;(0.375,0.393]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018-05-27&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9364869&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4189058&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.0823715&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sun&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;(0.411,0.429]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;l&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018-05-28&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9763419&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4508451&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.0183864&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Mon&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;(0.446,0.464]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018-05-29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9959399&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4797038&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6465735&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tue&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;(0.464,0.482]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;m&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;just-simple-calendar&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Just Simple Calendar&lt;/h2&gt;
&lt;p&gt;First I just made simple calendar with below code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##  Here&amp;#39;s Just Calendar Part
Moon_2018_df %&amp;gt;% ggplot(aes(x=wkdy, y=wkn.mo)) + 
  geom_point(alpha=0.3, aes(color=wkdy), size=8) + 
  geom_text(aes(label=day),family=&amp;quot;Roboto Condensed&amp;quot;) +
  facet_wrap(~mo, scales=&amp;quot;free_x&amp;quot;, ncol=3) +  ## So that Each Line is Quarter!
  scale_x_discrete() +
  scale_y_reverse(breaks=NULL) +
  scale_colour_viridis_d(guide=&amp;quot;none&amp;quot;) +
  theme_ipsum_rc() +
  labs(title=&amp;quot;2018&amp;quot;, x=&amp;quot;Start of week is Monday&amp;quot;, y=&amp;quot;&amp;quot;) +
  expand_limits(y=c(0.5,6.5)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-26-making-calendar-with-ggplot-moon-phase-calendar_files/figure-html/simple_calendar-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;moon-phase-calendar&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Moon Phase Calendar&lt;/h2&gt;
&lt;p&gt;This time, I tried using geom_tile function to create tiles. I’ve coloured sell using fraction (illuminated fraction of the moon). 0 is New Moon, and 1 is Full Moon. When it’s Full moon sky is lighter, so I’ve coloured cell little bit lighter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Moon_2018_df %&amp;gt;% ggplot(aes(x=wkdy, y=wkn.mo)) + 
  geom_tile(alpha=0.8, aes(fill=fraction)) + 
  geom_text(aes(label=paste0(&amp;quot; &amp;quot;,day)),size=3,family=&amp;quot;Roboto Condensed&amp;quot;,hjust=0, color=&amp;quot;white&amp;quot;) +
  geom_text(aes(label=moon.font), family=&amp;quot;Moon Phases&amp;quot;, hjust=1, color=&amp;quot;white&amp;quot;, size=5) +
  facet_wrap(~mo, scales=&amp;quot;free_x&amp;quot;, ncol=3) +  ## So that Each Line is Quarter!
  scale_x_discrete() +
  scale_y_reverse(breaks=NULL) +
  scale_fill_viridis_c(name=&amp;quot;Moon Illumination&amp;quot;, option=&amp;quot;inferno&amp;quot;,  begin=0, end=0.25, guide=&amp;quot;none&amp;quot;) +  ## so that sky is darkest when there&amp;#39;s new moon
  theme_ipsum_rc() +
  labs(title=&amp;quot;2018 Moon Phase Calendar&amp;quot;, x=&amp;quot;Start of week is Monday&amp;quot;, y=&amp;quot;&amp;quot;) +
  expand_limits(y=c(0.5,6.5)) +
  theme(legend.position=&amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-26-making-calendar-with-ggplot-moon-phase-calendar_files/figure-html/moon_phase_calendar-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;yet-another-calendar&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Yet Another Calendar&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Moon_2018_df %&amp;gt;% 
  ggplot(aes(x=day, y=fct_rev(mo))) + 
  theme_minimal(base_family=&amp;quot;Roboto Condensed&amp;quot;) + 
  scale_x_continuous(breaks=c(1:31), position=&amp;quot;top&amp;quot;) +
  geom_text(aes(label=moon.font, color=fraction),family=&amp;quot;Moon Phases&amp;quot;, hjust=0.5, vjust=0.5, size=8, alpha=0.5) +
  geom_text(aes(label=paste0(day,&amp;quot;\n&amp;quot;,wkdy)), family=&amp;quot;Roboto Condensed&amp;quot;, lineheight=0.8, size=4) + 
  labs(x=&amp;quot;&amp;quot;, y=&amp;quot;&amp;quot;, title=&amp;quot;Another Type of Calendar&amp;quot;) +
  scale_color_viridis_c()+
  theme(legend.position=&amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-26-making-calendar-with-ggplot-moon-phase-calendar_files/figure-html/moon_phase_calender2-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>16 Personalities with Circlize </title>
      <link>/2018/05/20/16-personalities-with-circizle/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/20/16-personalities-with-circizle/</guid>
      <description>&lt;div id=&#34;personalities&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;16 Personalities&lt;/h2&gt;
&lt;p&gt;While back, my husband introduced me to this fun online personalities test called &lt;a href=&#34;https://www.16personalities.com/&#34;&gt;16 personalities&lt;/a&gt;. I’ve taken the test, and my personalities type came back as &lt;a href=&#34;https://www.16personalities.com/profiles/7c275e8db32f5&#34;&gt;Mediator&lt;/a&gt; (Code: INFP - Role: Diplomat)&lt;/p&gt;
&lt;p&gt;There were difinitely some traits that sounded like me, and a lot of statement I can relate for sure. It’s definitely some fun test to do.&lt;/p&gt;
&lt;p&gt;There was a one part that stated “INFP - compromising just 4% of the population”. This read me to think which traits are more popular than the others, but so far I haven’t found details on population breakdown. Later if I do find population breakdown of personalities trait, then I thought it would be interesting to make the plot proportional to the ratio.&lt;/p&gt;
&lt;p&gt;Anyways, I thought I’d get all 16 personalities and plot them using &lt;a href=&#34;https://jokergoo.github.io/circlize_book/book/&#34;&gt;circlize&lt;/a&gt; package as practice. The documentation on circlize was extremely helpful to get me started!&lt;/p&gt;
&lt;p&gt;Below is the code I wrote for now, so I can remember what I have done in case I want to utilize circlize packages.&lt;/p&gt;
&lt;div id=&#34;heres-snippets-of-code-ive-used-to-create-above.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Here’s snippets of code I’ve used to create above.&lt;/h3&gt;
&lt;p&gt;First I’ve used package &lt;a href=&#34;https://CRAN.R-project.org/package=rvest&#34;&gt;rvest&lt;/a&gt; to get some data about all 16 personalities.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Get 16 Different Personalities from 16 Personalities Website
personalities &amp;lt;-read_html(&amp;quot;https://www.16personalities.com/personality-types&amp;quot;)

per.df &amp;lt;- tibble(
  type = personalities %&amp;gt;% html_nodes(&amp;quot;.type-item h4&amp;quot;) %&amp;gt;% 
    html_text() %&amp;gt;% gsub(pattern=&amp;quot;(“|”)&amp;quot;,replacement=&amp;quot;&amp;quot;),
  type.code = personalities %&amp;gt;% html_nodes(&amp;quot;h5&amp;quot;) %&amp;gt;% html_text(),
  short.descr = personalities %&amp;gt;% html_nodes(&amp;quot;.type-snippet&amp;quot;) %&amp;gt;% html_text(),
  img = personalities %&amp;gt;% html_nodes(&amp;quot;.type-item img&amp;quot;) %&amp;gt;% html_attr(&amp;quot;src&amp;quot;)
)

## Add few more details to table.
per.df &amp;lt;- per.df %&amp;gt;% mutate(type.code=substr(type.code,1,4), mind=substr(type.code,1,1),
                            energy = substr(type.code,2,2), nature = substr(type.code,3,3),
                            tactic = substr(type.code,4,4))

## There are 4 &amp;quot;Roles&amp;quot; based on followig rules ## I only really recently discovered case_when statment! 
### case_when statement is amazing! I&amp;#39;ve been writing crazy nested ifelse statement till very recently.
per.df &amp;lt;- per.df %&amp;gt;% mutate(roles = case_when(
  str_detect(.$type.code,&amp;quot;.NT.&amp;quot;) ~ &amp;quot;Analyst&amp;quot;,
  str_detect(.$type.code,&amp;quot;.NF.&amp;quot;) ~ &amp;quot;Diplomat&amp;quot;,
  str_detect(.$type.code,&amp;quot;.S.J&amp;quot;) ~ &amp;quot;Sentinels&amp;quot;,
  str_detect(.$type.code,&amp;quot;.S.P&amp;quot;) ~ &amp;quot;Explorers&amp;quot;
))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;here-comes-exciting-drawing-with-circlize-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Here comes exciting drawing with circlize package!&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;circos.clear() 
circos.par(start.degree=90)

## initialize
circos.initialize(factor=per.df$type, xlim=c(0,1))

## Layout basic tracks
circos.track(ylim=c(0,1), 
             panel.fun = function(x,y){
               circos.text(x=CELL_META$xcenter, y=CELL_META$ycenter,
                           labels=CELL_META$sector.index,
                           facing = &amp;quot;inside&amp;quot;, 
                           niceFacing= TRUE, font=2)
             })

## I definitely think there&amp;#39;s better way to write below....  
## But at the moment, I&amp;#39;m building it section by section...
highlight.sector(per.df$type[1:4], 
                 track.index = 1, 
                 text = per.df$roles[1],
                 facing = &amp;quot;bending.inside&amp;quot;, niceFacing = TRUE, 
                 text.vjust = &amp;quot;15mm&amp;quot;, cex = 1.5, col=&amp;quot;#734C5F60&amp;quot;)

highlight.sector(per.df$type[5:8], 
                 track.index = 1, 
                 text = per.df$roles[5],
                 facing = &amp;quot;bending.inside&amp;quot;, niceFacing = TRUE, 
                 text.vjust = &amp;quot;15mm&amp;quot;, cex = 1.5, col=&amp;quot;#728D5660&amp;quot;)


highlight.sector(per.df$type[9:12], 
                 track.index = 1, 
                 text = per.df$roles[9],
                 facing = &amp;quot;bending.inside&amp;quot;, niceFacing = TRUE, 
                 text.vjust = &amp;quot;15mm&amp;quot;, cex = 1.5, col=&amp;quot;#51A9AB60&amp;quot;)


highlight.sector(per.df$type[13:16], 
                 track.index = 1, 
                 text = per.df$roles[13],
                 facing = &amp;quot;bending.inside&amp;quot;, niceFacing = TRUE, 
                 text.vjust = &amp;quot;15mm&amp;quot;, cex = 1.5, col=&amp;quot;#E5C82E60&amp;quot;)

###  Now the inner track.  I want to place images.
circos.track(ylim=c(0,1), 
             panel.fun = function(x,y){
               circos.raster(image=image_read(per.df$img[CELL_META$sector.numeric.index]),
                             x=CELL_META$xcenter, y=CELL_META$ycenter, 
                             width=&amp;quot;2.5cm&amp;quot;, facing = &amp;quot;inside&amp;quot;, niceFacing=TRUE)
             },bg.border = NA, track.height=0.3)

## Place another track with type code.
circos.track(ylim=c(0,1), 
             panel.fun = function(x,y){
               circos.text(x=CELL_META$xcenter, y=CELL_META$ycenter,
                           labels=per.df$type.code[CELL_META$sector.numeric.index],
                           facing = &amp;quot;inside&amp;quot;, 
                           niceFacing= TRUE)
             },bg.border = NA , track.height=0.15)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-20-16-personalities-with-circizle_files/figure-html/fun_stuff-1.png&#34; width=&#34;864&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Daylight in Vancouver (Canada) vs Tokyo (Japan)</title>
      <link>/2018/05/20/daylight-time-in-vancouver-canada-vs-tokyo-japan/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/20/daylight-time-in-vancouver-canada-vs-tokyo-japan/</guid>
      <description>&lt;p&gt;I currently live in British Columbia, Canada. So I live above 49th parallel line. One of things that’s pretty awesome living up north is the fact you get so much longer daylights in summer time! Currently it’s May, and I’m just in love with longer daylight we are getting day by day (well till June 21st)!&lt;/p&gt;
&lt;p&gt;Recently I came across R package called &lt;a href=&#34;https://CRAN.R-project.org/package=suncalc&#34;&gt;suncalc&lt;/a&gt;, so I had to try out using the package to pull the timetable for sunrise &amp;amp; sunset for different locations and visualize the result using &lt;a href=&#34;http://ggplot2.tidyverse.org/&#34;&gt;ggplot2&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;vancouver-2018-daylight-visualized&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;🇨🇦 Vancouver 2018 Daylight Visualized ☀️&lt;/h2&gt;
&lt;p&gt;For &lt;strong&gt;Vancouver&lt;/strong&gt; - I used coordinate 49.2827° N, 123.1207° W 🌎&lt;/p&gt;
&lt;p&gt;I’ve coloured nighttime with dark blue colour, while I’ve coloured day time with light yellow-ish colour using &lt;a href=&#34;http://ggplot2.tidyverse.org/reference/geom_ribbon.html&#34;&gt;geom_ribbon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The latest sunset Vancouver will observe is June 25th! It’s not same as the longest daylight. Earliest I’d have to wake up to catch sunrise is June 16th at 5:07am. 😀&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-20-daylight-time-in-vancouver-canada-vs-tokyo-japan_files/figure-html/vancouver-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tokyo-2018-daylight-visualized&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;🇯🇵 Tokyo 2018 Daylight Visualized ☀️&lt;/h2&gt;
&lt;p&gt;For &lt;strong&gt;Tokyo&lt;/strong&gt; - I used coordinate 35.6895° N, 139.6917° E 🌏&lt;/p&gt;
&lt;p&gt;Japan does not practice daylight savings, so there’s no glitch in March and November, the line is smooth in below chart. The earliest sunrise Tokyo gets is 4:26am on June 13th. This makes me think Japan could actually benefit from practiving daylight savings, so that sunrise is delayed till 5:26am, while they can enjoy the sun as late as 8pm in June!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-20-daylight-time-in-vancouver-canada-vs-tokyo-japan_files/figure-html/tokyo-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sunrise-sunset-time-compared-for-vancouver-and-tokyo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sunrise &amp;amp; Sunset Time Compared for Vancouver and Tokyo�&lt;/h2&gt;
&lt;p&gt;And here’s sunrise &amp;amp; sunset time compared against two cities.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-20-daylight-time-in-vancouver-canada-vs-tokyo-japan_files/figure-html/vantokyo-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Testing Entry with R Rmarkdown File</title>
      <link>/2018/05/19/testing-entry-with-r-rmarkdown-file/</link>
      <pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/19/testing-entry-with-r-rmarkdown-file/</guid>
      <description>&lt;div id=&#34;hello-world&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hello! World!&lt;/h2&gt;
&lt;p&gt;Just figuring out how the blog post works with this random set of coffee data!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;espresso-drinks-visualized-with-ggplot2-pie-chart&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Espresso Drinks Visualized with ggplot2 Pie Chart&lt;/h2&gt;
&lt;p&gt;Pie chart can be created with using polar coordinate.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Pie Chart
coffee_long  %&amp;gt;% ggplot() +
  geom_bar(aes(x=sqrt(total.amount)/2, y = amount, 
               fill=fct_rev(ingredient.f), width=sqrt(total.amount)), 
           stat=&amp;quot;identity&amp;quot;, position=&amp;quot;fill&amp;quot;) + 
  facet_wrap(~name2, ncol=4) +
  geom_text(aes(x=sqrt(total.amount), y=Inf, label=&amp;quot;&amp;quot;), size=7) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  coord_polar(theta=&amp;quot;y&amp;quot;) +
  scale_fill_hue(name=&amp;quot;Ingredient&amp;quot;, l=80) +
  theme(legend.position=&amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-19-testing-entry-with-r-rmarkdown-file_files/figure-html/coffee_piechart-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;espresso-drinks-visualized-with-ggplot2-bar-chart&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Espresso Drinks Visualized with ggplot2 Bar Chart&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Bar Chart

coffee_long  %&amp;gt;% ggplot() +
  geom_bar(aes(x=3, y = amount, fill=fct_rev(ingredient.f), width=sqrt(total.amount)/2),
           stat=&amp;quot;identity&amp;quot;, position=&amp;quot;stack&amp;quot;) + 
  facet_wrap(~name2, ncol=4) +
  theme_void(base_family=&amp;quot;Roboto Condensed&amp;quot;) +
  scale_fill_hue(name=&amp;quot;Ingredient&amp;quot;, l=80) +
  theme(legend.position=&amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-19-testing-entry-with-r-rmarkdown-file_files/figure-html/coffee_barchart-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>